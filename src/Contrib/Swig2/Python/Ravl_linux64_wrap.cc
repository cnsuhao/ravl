/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *self, PyObject *func)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyInstanceMethod_New(func);
#else
  return NULL;
#endif
}

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", name, v);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
#else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
#endif
#if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
#else
    PyString_ConcatAndDel(&repr,nrep);
#endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_print(SwigPyObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char *str;
#ifdef METH_NOARGS
  PyObject *repr = SwigPyObject_repr(v);
#else
  PyObject *repr = SwigPyObject_repr(v, NULL);
#endif
  if (repr) {
    str = SWIG_Python_str_AsChar(repr); 
    fputs(str, fp);
    SWIG_Python_str_DelForPy3(str);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
SwigPyObject_str(SwigPyObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    SWIG_Python_str_FromChar(result) : 0;
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  if( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) )
    res = Py_True;
  else
    res = Py_False;
  Py_INCREF(res);
  return res;  
}


SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	/* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
	PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else    
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
#endif
	(char *)"SwigPyObject",		    /* tp_name */
	sizeof(SwigPyObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)SwigPyObject_dealloc,   /* tp_dealloc */
	(printfunc)SwigPyObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)SwigPyObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
	(cmpfunc)SwigPyObject_compare,	    /* tp_compare */
#endif
	(reprfunc)SwigPyObject_repr,	    /* tp_repr */    
	&SwigPyObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)SwigPyObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	(richcmpfunc)SwigPyObject_richcompare,           /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
	0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    swigpyobject_type = tmp;
    /* for Python 3 we already assigned ob_type in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
    swigpyobject_type.ob_type = &PyType_Type;
#endif
    type_init = 1;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
    /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
    PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else
	PyObject_HEAD_INIT(NULL)
    0,				    /* ob_size */	
#endif
	(char *)"SwigPyPacked",		    /* tp_name */	
	sizeof(SwigPyPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)SwigPyPacked_dealloc,   /* tp_dealloc */	
	(printfunc)SwigPyPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
#if PY_VERSION_HEX>=0x03000000
    0, /* tp_reserved in 3.0.1 */
#else
    (cmpfunc)SwigPyPacked_compare,	    /* tp_compare */
#endif
	(reprfunc)SwigPyPacked_repr,	    /* tp_repr */
	0,	                            /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)SwigPyPacked_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    swigpypacked_type = tmp;
    /* for Python 3 the ob_type already assigned in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
    swigpypacked_type.ob_type = &PyType_Type;
#endif
    type_init = 1;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (SwigPyObject_Check(pyobj)) {
    return (SwigPyObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !SwigPyObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 SwigPyObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (SwigPyObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (own)
      *own = 0;
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (SwigPyObject *)sobj->next;
	  } else {
	    if (ptr) {
              int newmemory = 0;
              *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
              if (newmemory == SWIG_CAST_NEW_MEMORY) {
                assert(own);
                if (own)
                  *own = *own | SWIG_CAST_NEW_MEMORY;
              }
            }
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = PyBaseObject_Type.tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    PyObject_SetAttr(inst, SWIG_This(), swig_this);
    Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
#else
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = SwigPyObject_New(ptr, type, own);
    SwigPyClientData *clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_Element1T swig_types[0]
#define SWIGTYPE_p_Element2T swig_types[1]
#define SWIGTYPE_p_K swig_types[2]
#define SWIGTYPE_p_RavlImageN__ByteRGBValueC swig_types[3]
#define SWIGTYPE_p_RavlImageN__FontC swig_types[4]
#define SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t swig_types[5]
#define SWIGTYPE_p_RavlImageN__ImageCT_double_t swig_types[6]
#define SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t swig_types[7]
#define SWIGTYPE_p_RavlImageN__RealRGBValueC swig_types[8]
#define SWIGTYPE_p_RavlN__Affine2dC swig_types[9]
#define SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t swig_types[10]
#define SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t swig_types[11]
#define SWIGTYPE_p_RavlN__Array2dCT_double_t swig_types[12]
#define SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t swig_types[13]
#define SWIGTYPE_p_RavlN__ClassifierC swig_types[14]
#define SWIGTYPE_p_RavlN__ClassifierDiscriminantFunctionC swig_types[15]
#define SWIGTYPE_p_RavlN__ConstDLIterCT_double_t swig_types[16]
#define SWIGTYPE_p_RavlN__ConstDLIterCT_int_t swig_types[17]
#define SWIGTYPE_p_RavlN__ConstDLIterCT_long_t swig_types[18]
#define SWIGTYPE_p_RavlN__ConstDLIterCT_short_t swig_types[19]
#define SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_char_t swig_types[20]
#define SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_int_t swig_types[21]
#define SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t swig_types[22]
#define SWIGTYPE_p_RavlN__DLIterCT_double_t swig_types[23]
#define SWIGTYPE_p_RavlN__DLIterCT_int_t swig_types[24]
#define SWIGTYPE_p_RavlN__DLIterCT_long_t swig_types[25]
#define SWIGTYPE_p_RavlN__DLIterCT_short_t swig_types[26]
#define SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t swig_types[27]
#define SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t swig_types[28]
#define SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t swig_types[29]
#define SWIGTYPE_p_RavlN__DListCT_double_t swig_types[30]
#define SWIGTYPE_p_RavlN__DListCT_int_t swig_types[31]
#define SWIGTYPE_p_RavlN__DListCT_long_t swig_types[32]
#define SWIGTYPE_p_RavlN__DListCT_short_t swig_types[33]
#define SWIGTYPE_p_RavlN__DListCT_unsigned_char_t swig_types[34]
#define SWIGTYPE_p_RavlN__DListCT_unsigned_int_t swig_types[35]
#define SWIGTYPE_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t swig_types[36]
#define SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t swig_types[37]
#define SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t swig_types[38]
#define SWIGTYPE_p_RavlN__DataSetBaseC swig_types[39]
#define SWIGTYPE_p_RavlN__DataSetVectorLabelC swig_types[40]
#define SWIGTYPE_p_RavlN__DateC swig_types[41]
#define SWIGTYPE_p_RavlN__DesignClassifierLogisticRegressionC swig_types[42]
#define SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C swig_types[43]
#define SWIGTYPE_p_RavlN__DesignClassifierSupervisedC swig_types[44]
#define SWIGTYPE_p_RavlN__DesignDiscriminantFunctionC swig_types[45]
#define SWIGTYPE_p_RavlN__DesignFuncLSQC swig_types[46]
#define SWIGTYPE_p_RavlN__DesignFunctionSupervisedC swig_types[47]
#define SWIGTYPE_p_RavlN__ErrorC swig_types[48]
#define SWIGTYPE_p_RavlN__FunctionC swig_types[49]
#define SWIGTYPE_p_RavlN__GnuPlot2dC swig_types[50]
#define SWIGTYPE_p_RavlN__HashCT_long_long_t swig_types[51]
#define SWIGTYPE_p_RavlN__HashIterCT_long_long_t swig_types[52]
#define SWIGTYPE_p_RavlN__Index2dC swig_types[53]
#define SWIGTYPE_p_RavlN__IndexC swig_types[54]
#define SWIGTYPE_p_RavlN__IndexRange2dC swig_types[55]
#define SWIGTYPE_p_RavlN__IndexRangeC swig_types[56]
#define SWIGTYPE_p_RavlN__MatrixC swig_types[57]
#define SWIGTYPE_p_RavlN__MatrixRUTC swig_types[58]
#define SWIGTYPE_p_RavlN__MeanCovarianceC swig_types[59]
#define SWIGTYPE_p_RavlN__Point2dC swig_types[60]
#define SWIGTYPE_p_RavlN__PointSet2dC swig_types[61]
#define SWIGTYPE_p_RavlN__Polygon2dC swig_types[62]
#define SWIGTYPE_p_RavlN__RCHashCT_unsigned_int_RavlN__StringC_t swig_types[63]
#define SWIGTYPE_p_RavlN__RealRange2dC swig_types[64]
#define SWIGTYPE_p_RavlN__RealRangeC swig_types[65]
#define SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t swig_types[66]
#define SWIGTYPE_p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t swig_types[67]
#define SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t swig_types[68]
#define SWIGTYPE_p_RavlN__SArray1dCT_RavlN__SampleVectorC_t swig_types[69]
#define SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t swig_types[70]
#define SWIGTYPE_p_RavlN__SArray1dCT_double_t swig_types[71]
#define SWIGTYPE_p_RavlN__SArray1dCT_float_t swig_types[72]
#define SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t swig_types[73]
#define SWIGTYPE_p_RavlN__SArray2dCT_double_t swig_types[74]
#define SWIGTYPE_p_RavlN__SArray2dCT_float_t swig_types[75]
#define SWIGTYPE_p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t swig_types[76]
#define SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t swig_types[77]
#define SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t swig_types[78]
#define SWIGTYPE_p_RavlN__SampleCT_double_t swig_types[79]
#define SWIGTYPE_p_RavlN__SampleCT_float_t swig_types[80]
#define SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t swig_types[81]
#define SWIGTYPE_p_RavlN__SampleLabelC swig_types[82]
#define SWIGTYPE_p_RavlN__SampleLabelC__ElementT swig_types[83]
#define SWIGTYPE_p_RavlN__SampleVectorC swig_types[84]
#define SWIGTYPE_p_RavlN__SampleVectorC__ElementT swig_types[85]
#define SWIGTYPE_p_RavlN__SizeC swig_types[86]
#define SWIGTYPE_p_RavlN__StringC swig_types[87]
#define SWIGTYPE_p_RavlN__TMatrixCT_double_t swig_types[88]
#define SWIGTYPE_p_RavlN__TMatrixCT_float_t swig_types[89]
#define SWIGTYPE_p_RavlN__TVectorCT_double_t swig_types[90]
#define SWIGTYPE_p_RavlN__TVectorCT_float_t swig_types[91]
#define SWIGTYPE_p_RavlN__VectorC swig_types[92]
#define SWIGTYPE_p_RavlN__VectorMatrixC swig_types[93]
#define SWIGTYPE_p_T swig_types[94]
#define SWIGTYPE_p_UIntT swig_types[95]
#define SWIGTYPE_p_char swig_types[96]
#define SWIGTYPE_p_double swig_types[97]
#define SWIGTYPE_p_float swig_types[98]
#define SWIGTYPE_p_int swig_types[99]
#define SWIGTYPE_p_long swig_types[100]
#define SWIGTYPE_p_short swig_types[101]
#define SWIGTYPE_p_size_t swig_types[102]
#define SWIGTYPE_p_std__ostream swig_types[103]
#define SWIGTYPE_p_unsigned_char swig_types[104]
#define SWIGTYPE_p_unsigned_int swig_types[105]
#define SWIGTYPE_p_unsigned_long swig_types[106]
static swig_type_info *swig_types[108];
static swig_module_info swig_module = {swig_types, 107, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _Ravl.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__Ravl

#else
#  define SWIG_init    init_Ravl

#endif
#define SWIG_name    "_Ravl"

#define SWIGVERSION 0x010340 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


namespace RavlGUIN
{
  extern void InitDPWindowFormat();
  extern void InitDPDisplayImage();
  void XInitRavlGUIDisplay()
  {
    InitDPWindowFormat();
    InitDPDisplayImage();
  }
}


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Types.hh"
#include "Ravl/Stream.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif


#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/DList.hh"
#include "Ravl/DLIter.hh"
#include "Ravl/CDLIter.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


#if 1
  PyObject *ToList(RavlN::DListC<RavlN::RealT> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::RealT> it(list); it; it++)
    {
      PyObject *temp = PyFloat_FromDouble(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }
#endif


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


#if 1
  PyObject *ToList(RavlN::DListC<RavlN::IntT> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::IntT> it(list); it; it++)
    {
      PyObject *temp = PyInt_FromLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }
#endif


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


#if 1
  PyObject *ToList(RavlN::DListC<RavlN::UIntT> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::UIntT> it(list); it; it++)
    {
      PyObject *temp = PyInt_FromLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }
#endif


#if 1
  PyObject *ToList(RavlN::DListC<RavlN::Int64T> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::Int64T> it(list); it; it++)
    {
      PyObject *temp = PyLong_FromLongLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }
#endif


SWIGINTERN int
SWIG_AsVal_short (PyObject * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_short  (short value)
{    
  return SWIG_From_long  (value);
}


#if 1
  PyObject *ToList(RavlN::DListC<RavlN::Int16T> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::Int16T> it(list); it; it++)
    {
      PyObject *temp = PyInt_FromLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }
#endif


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


#if 1
  PyObject *ToList(RavlN::DListC<RavlN::ByteT> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::ByteT> it(list); it; it++)
    {
      PyObject *temp = PyInt_FromLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Point2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#if 1
  PyObject *ToList(RavlN::DListC<RavlN::Point2dC> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    {
      swig_type_info *typeInfo = SWIG_TypeQuery("RavlN::Point2dC" " *");
      for (RavlN::DLIterC<RavlN::Point2dC> it(list); it; it++)
      {
        PyObject *temp = SWIG_NewPointerObj(new RavlN::Point2dC(it.Data()), typeInfo, SWIG_POINTER_OWN | 0);
        if (PyErr_Occurred())
          SWIG_fail;
        PyList_Append(obj, temp);
      }
      return obj;
    }
    fail:
    return NULL;
  }
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Index.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/IndexRange1d.hh"
#include "Ravl/StrStream.hh"


#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}

SWIGINTERN char const *RavlN_IndexRangeC___str__(RavlN::IndexRangeC *self){
        RavlN::StrOStreamC os;
        os << "[" << self->Min() << ", " << self->Max() << "]";
        return os.String().data();
      }

SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}

SWIGINTERN bool RavlN_IndexRangeC___nonzero__(RavlN::IndexRangeC *self){
      	return self->IsValid();
      }
SWIGINTERN int RavlN_IndexRangeC___len__(RavlN::IndexRangeC *self){
      	return self->Size();
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Index2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/IndexRange2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Array2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN unsigned char &RavlN_Array2dC_Sl_RavlN_ByteT_Sg__Access__SWIG_0(RavlN::Array2dC< RavlN::ByteT > *self,RavlN::Index2dC const &index){ return self->operator[](index); }
SWIGINTERN unsigned char &RavlN_Array2dC_Sl_RavlN_ByteT_Sg__Access__SWIG_1(RavlN::Array2dC< RavlN::ByteT > *self,RavlN::IntT r,RavlN::IntT c){ return self->operator[](r)[c]; }
SWIGINTERN unsigned char &RavlN_Array2dC_Sl_RavlN_ByteT_Sg__Access__SWIG_2(RavlN::Array2dC< RavlN::ByteT > *self,RavlN::IndexC r,RavlN::IndexC c){ return self->operator[](r)[c]; }
SWIGINTERN double &RavlN_Array2dC_Sl_RavlN_RealT_Sg__Access__SWIG_0(RavlN::Array2dC< RavlN::RealT > *self,RavlN::Index2dC const &index){ return self->operator[](index); }
SWIGINTERN double &RavlN_Array2dC_Sl_RavlN_RealT_Sg__Access__SWIG_1(RavlN::Array2dC< RavlN::RealT > *self,RavlN::IntT r,RavlN::IntT c){ return self->operator[](r)[c]; }
SWIGINTERN double &RavlN_Array2dC_Sl_RavlN_RealT_Sg__Access__SWIG_2(RavlN::Array2dC< RavlN::RealT > *self,RavlN::IndexC r,RavlN::IndexC c){ return self->operator[](r)[c]; }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/String.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}




SWIGINTERN char const *RavlN_StringC___str__(RavlN::StringC *self){
        return self->chars();
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/IO.hh"
#include "Ravl/DP/PrintIOInfo.hh"
#include "Ravl/Stream.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/RealRange1d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/RealRange2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PointSet2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Polygon2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Image/Image.hh"
#include "Ravl/Image/ByteRGBValue.hh"
#include "Ravl/Image/RealRGBValue.hh"
#include "Ravl/Image/DrawPolygon.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN RavlImageN::ByteRGBValueC &RavlN_Array2dC_Sl_RavlImageN_ByteRGBValueC_Sg__Access__SWIG_0(RavlN::Array2dC< RavlImageN::ByteRGBValueC > *self,RavlN::Index2dC const &index){ return self->operator[](index); }
SWIGINTERN RavlImageN::ByteRGBValueC &RavlN_Array2dC_Sl_RavlImageN_ByteRGBValueC_Sg__Access__SWIG_1(RavlN::Array2dC< RavlImageN::ByteRGBValueC > *self,RavlN::IntT r,RavlN::IntT c){ return self->operator[](r)[c]; }
SWIGINTERN RavlImageN::ByteRGBValueC &RavlN_Array2dC_Sl_RavlImageN_ByteRGBValueC_Sg__Access__SWIG_2(RavlN::Array2dC< RavlImageN::ByteRGBValueC > *self,RavlN::IndexC r,RavlN::IndexC c){ return self->operator[](r)[c]; }
SWIGINTERN RavlImageN::RealRGBValueC &RavlN_Array2dC_Sl_RavlImageN_RealRGBValueC_Sg__Access__SWIG_0(RavlN::Array2dC< RavlImageN::RealRGBValueC > *self,RavlN::Index2dC const &index){ return self->operator[](index); }
SWIGINTERN RavlImageN::RealRGBValueC &RavlN_Array2dC_Sl_RavlImageN_RealRGBValueC_Sg__Access__SWIG_1(RavlN::Array2dC< RavlImageN::RealRGBValueC > *self,RavlN::IntT r,RavlN::IntT c){ return self->operator[](r)[c]; }
SWIGINTERN RavlImageN::RealRGBValueC &RavlN_Array2dC_Sl_RavlImageN_RealRGBValueC_Sg__Access__SWIG_2(RavlN::Array2dC< RavlImageN::RealRGBValueC > *self,RavlN::IndexC r,RavlN::IndexC c){ return self->operator[](r)[c]; }

SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}

SWIGINTERN PyObject *RavlImageN_ImageC_Sl_RavlImageN_ByteRGBValueC_Sg__DataAsString(RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *self){
        if (self->Rows() <= 0 || self->Cols() <= 0)
          return NULL;

        if (!self->IsContinuous())
          return NULL;

        RavlN::BufferAccessC<RavlImageN::ByteRGBValueC> rowAccess = self->RowPtr(0);
        const char* imageData = reinterpret_cast<const char*>(rowAccess.ReferenceVoid());
        if (imageData == NULL)
          return NULL;

        const int imageSize = self->Rows() * self->Stride() * sizeof(RavlImageN::ByteRGBValueC);
        return PyString_FromStringAndSize(imageData, imageSize);
      }
SWIGINTERN PyObject *RavlImageN_ImageC_Sl_RavlImageN_ByteRGBValueC_Sg__DataAsStringTriple(RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *self){
        if (self->Rows() <= 0 || self->Cols() <= 0)
          return NULL;

        if (!self->IsContinuous())
          return NULL;

        RavlN::BufferAccessC<RavlImageN::ByteRGBValueC> rowAccess = self->RowPtr(0);
        const char* imageData = reinterpret_cast<const char*>(rowAccess.ReferenceVoid());
        if (imageData == NULL)
          return NULL;

        const int imageSize = self->Rows() * self->Stride() * sizeof(RavlImageN::ByteRGBValueC);
        const int outImageSize = imageSize * 3;
        char* outImageData = new char[outImageSize];
        if (outImageData)
        {
          const char* srcImagePtr = imageData;
          char* dstImagePtr = outImageData;
          for (int index = 0; index < imageSize; index++)
          {
            *dstImagePtr = *srcImagePtr;
            ++dstImagePtr;

            *dstImagePtr = *srcImagePtr;
            ++dstImagePtr;

            *dstImagePtr = *srcImagePtr;
            ++dstImagePtr;

            ++srcImagePtr;
          }
          PyObject* pyObject = PyString_FromStringAndSize(outImageData, outImageSize);
          delete [] outImageData;
          return pyObject;
        }
        return NULL;
      }
SWIGINTERN PyObject *RavlImageN_ImageC_Sl_RavlN_ByteT_Sg__DataAsString(RavlImageN::ImageC< RavlN::ByteT > *self){
        if (self->Rows() <= 0 || self->Cols() <= 0)
          return NULL;

        if (!self->IsContinuous())
          return NULL;

        RavlN::BufferAccessC<unsigned char> rowAccess = self->RowPtr(0);
        const char* imageData = reinterpret_cast<const char*>(rowAccess.ReferenceVoid());
        if (imageData == NULL)
          return NULL;

        const int imageSize = self->Rows() * self->Stride() * sizeof(unsigned char);
        return PyString_FromStringAndSize(imageData, imageSize);
      }
SWIGINTERN PyObject *RavlImageN_ImageC_Sl_RavlN_ByteT_Sg__DataAsStringTriple(RavlImageN::ImageC< RavlN::ByteT > *self){
        if (self->Rows() <= 0 || self->Cols() <= 0)
          return NULL;

        if (!self->IsContinuous())
          return NULL;

        RavlN::BufferAccessC<unsigned char> rowAccess = self->RowPtr(0);
        const char* imageData = reinterpret_cast<const char*>(rowAccess.ReferenceVoid());
        if (imageData == NULL)
          return NULL;

        const int imageSize = self->Rows() * self->Stride() * sizeof(unsigned char);
        const int outImageSize = imageSize * 3;
        char* outImageData = new char[outImageSize];
        if (outImageData)
        {
          const char* srcImagePtr = imageData;
          char* dstImagePtr = outImageData;
          for (int index = 0; index < imageSize; index++)
          {
            *dstImagePtr = *srcImagePtr;
            ++dstImagePtr;

            *dstImagePtr = *srcImagePtr;
            ++dstImagePtr;

            *dstImagePtr = *srcImagePtr;
            ++dstImagePtr;

            ++srcImagePtr;
          }
          PyObject* pyObject = PyString_FromStringAndSize(outImageData, outImageSize);
          delete [] outImageData;
          return pyObject;
        }
        return NULL;
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Image/Font.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

// The following is a fix for windows.
#define NODRAWTEXT


#ifdef SWIGPERL
#undef Copy
#endif


#include "Ravl/SArray1d.hh"
#include "Ravl/StrStream.hh"
#include "Ravl/Vector.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN unsigned int const &RavlN_SArray1dC_Sl_RavlN_UIntT_Sg____getitem__(RavlN::SArray1dC< RavlN::UIntT > const *self,size_t i){ return (*self)[i]; }
SWIGINTERN void RavlN_SArray1dC_Sl_RavlN_UIntT_Sg____setitem__(RavlN::SArray1dC< RavlN::UIntT > *self,size_t i,unsigned int const &v){ (*self)[i] = v; }
SWIGINTERN char const *RavlN_SArray1dC_Sl_RavlN_UIntT_Sg____str__(RavlN::SArray1dC< RavlN::UIntT > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }
SWIGINTERN double const &RavlN_SArray1dC_Sl_RavlN_RealT_Sg____getitem__(RavlN::SArray1dC< RavlN::RealT > const *self,size_t i){ return (*self)[i]; }
SWIGINTERN void RavlN_SArray1dC_Sl_RavlN_RealT_Sg____setitem__(RavlN::SArray1dC< RavlN::RealT > *self,size_t i,double const &v){ (*self)[i] = v; }
SWIGINTERN char const *RavlN_SArray1dC_Sl_RavlN_RealT_Sg____str__(RavlN::SArray1dC< RavlN::RealT > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }

SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}

SWIGINTERN float const &RavlN_SArray1dC_Sl_RavlN_FloatT_Sg____getitem__(RavlN::SArray1dC< RavlN::FloatT > const *self,size_t i){ return (*self)[i]; }
SWIGINTERN void RavlN_SArray1dC_Sl_RavlN_FloatT_Sg____setitem__(RavlN::SArray1dC< RavlN::FloatT > *self,size_t i,float const &v){ (*self)[i] = v; }
SWIGINTERN char const *RavlN_SArray1dC_Sl_RavlN_FloatT_Sg____str__(RavlN::SArray1dC< RavlN::FloatT > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }
SWIGINTERN RavlN::IndexC const &RavlN_SArray1dC_Sl_RavlN_IndexC_Sg____getitem__(RavlN::SArray1dC< RavlN::IndexC > const *self,size_t i){ return (*self)[i]; }
SWIGINTERN void RavlN_SArray1dC_Sl_RavlN_IndexC_Sg____setitem__(RavlN::SArray1dC< RavlN::IndexC > *self,size_t i,RavlN::IndexC const &v){ (*self)[i] = v; }
SWIGINTERN char const *RavlN_SArray1dC_Sl_RavlN_IndexC_Sg____str__(RavlN::SArray1dC< RavlN::IndexC > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }
SWIGINTERN RavlN::Point2dC const &RavlN_SArray1dC_Sl_RavlN_Point2dC_Sg____getitem__(RavlN::SArray1dC< RavlN::Point2dC > const *self,size_t i){ return (*self)[i]; }
SWIGINTERN void RavlN_SArray1dC_Sl_RavlN_Point2dC_Sg____setitem__(RavlN::SArray1dC< RavlN::Point2dC > *self,size_t i,RavlN::Point2dC const &v){ (*self)[i] = v; }
SWIGINTERN char const *RavlN_SArray1dC_Sl_RavlN_Point2dC_Sg____str__(RavlN::SArray1dC< RavlN::Point2dC > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }
SWIGINTERN RavlN::VectorC const &RavlN_SArray1dC_Sl_RavlN_VectorC_Sg____getitem__(RavlN::SArray1dC< RavlN::VectorC > const *self,size_t i){ return (*self)[i]; }
SWIGINTERN void RavlN_SArray1dC_Sl_RavlN_VectorC_Sg____setitem__(RavlN::SArray1dC< RavlN::VectorC > *self,size_t i,RavlN::VectorC const &v){ (*self)[i] = v; }
SWIGINTERN char const *RavlN_SArray1dC_Sl_RavlN_VectorC_Sg____str__(RavlN::SArray1dC< RavlN::VectorC > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/SArray2d.hh"
#include "Ravl/StrStream.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN char const *RavlN_SArray2dC_Sl_RavlN_FloatT_Sg____str__(RavlN::SArray2dC< RavlN::FloatT > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size()));    
      }
SWIGINTERN char const *RavlN_SArray2dC_Sl_RavlN_RealT_Sg____str__(RavlN::SArray2dC< RavlN::RealT > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size()));    
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/TVector.hh"
#include "Ravl/SArray1dIter.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN char const *RavlN_TVectorC_Sl_RavlN_RealT_Sg____str__(RavlN::TVectorC< RavlN::RealT > *self){
        RavlN::StrOStreamC os;
        os << std::fixed;
 









		os << *self;

        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size()));
      }
SWIGINTERN char const *RavlN_TVectorC_Sl_RavlN_FloatT_Sg____str__(RavlN::TVectorC< RavlN::FloatT > *self){
        RavlN::StrOStreamC os;
        os << std::fixed;
 









		os << *self;

        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size()));
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Vector.hh"
#include "Ravl/Matrix.hh"
#include "Ravl/SArray1dIter.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/TMatrix.hh"
#include "Ravl/TVector.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Matrix.hh"
#include "Ravl/Vector.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/MatrixRUT.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/VectorMatrix.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN char const *RavlN_VectorMatrixC___str__(RavlN::VectorMatrixC *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size()));
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/MeanCovariance.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN char const *RavlN_MeanCovarianceC___str__(RavlN::MeanCovarianceC *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size()));
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Affine2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/OS/Date.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Hash.hh"
#include "Ravl/HashIter.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Image/Image.hh"
#include "Ravl/DP/Port.hh"
#include "Ravl/DP/SequenceIO.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/SmartPtr.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#include "Ravl/OS/SysLog.hh"


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/Function.hh"
#include "Ravl/StrStream.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN char const *RavlN_FunctionC___str__(RavlN::FunctionC *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/Sample.hh"
#include "Ravl/Vector.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN unsigned int const &RavlN_SampleC_Sl_RavlN_UIntT_Sg____getitem__(RavlN::SampleC< RavlN::UIntT > const *self,size_t i){ return (*self)[i]; }
SWIGINTERN void RavlN_SampleC_Sl_RavlN_UIntT_Sg____setitem__(RavlN::SampleC< RavlN::UIntT > *self,size_t i,unsigned int const &v){ (*self)[i] = v; }
SWIGINTERN char const *RavlN_SampleC_Sl_RavlN_UIntT_Sg____str__(RavlN::SampleC< RavlN::UIntT > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }
SWIGINTERN RavlN::VectorC const &RavlN_SampleC_Sl_RavlN_VectorC_Sg____getitem__(RavlN::SampleC< RavlN::VectorC > const *self,size_t i){ return (*self)[i]; }
SWIGINTERN void RavlN_SampleC_Sl_RavlN_VectorC_Sg____setitem__(RavlN::SampleC< RavlN::VectorC > *self,size_t i,RavlN::VectorC const &v){ (*self)[i] = v; }
SWIGINTERN char const *RavlN_SampleC_Sl_RavlN_VectorC_Sg____str__(RavlN::SampleC< RavlN::VectorC > *self){
        RavlN::StrOStreamC os;
        os << *self;
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }

#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/SampleVector.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/SampleLabel.hh"
#include "Ravl/RCHash.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DataSetBase.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DataSet1.hh"
#include "Ravl/PatternRec/SampleVector.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DataSet1.hh"
#include "Ravl/PatternRec/SampleVector.hh"
#include "Ravl/PatternRec/SampleLabel.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DataSetVectorLabel.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif

SWIGINTERN char const *RavlN_DataSetVectorLabelC___str__(RavlN::DataSetVectorLabelC *self){
        RavlN::StrOStreamC os;
        os << self->Sample1();
        os << self->Sample2();
        return PyString_AsString(PyString_FromStringAndSize(os.String().chars(), os.String().Size())); 
      }

#include "Ravl/PatternRec/DataSetIO.hh"


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/Classifier.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/ClassifierDiscriminantFunction.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DesignFunctionSupervised.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DesignFuncLSQ.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DesignClassifierSupervised.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DesignDiscriminantFunction.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DesignClassifierNeuralNetwork2.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/DesignClassifierLogisticRegression.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/PatternRec/Error.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#ifdef SWIGPERL
#undef Copy
#endif

#include "Ravl/Plot/GnuPlot2d.hh"

#ifdef SWIGPERL
#define Copy(s,d,n,t)   (MEM_WRAP_CHECK_(n,t) (void)memcpy((char*)(d),(const char*)(s), (n) * sizeof(t)))
#endif


#include "Ravl/Image/Image.hh"
#include "Ravl/Image/ByteRGBValue.hh"
#include "Ravl/String.hh"
#include "Ravl/PatternRec/Classifier.hh"

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_new_SizeC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SizeC")) SWIG_fail;
  result = (RavlN::SizeC *)new RavlN::SizeC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SizeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SizeC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t *arg1 = 0 ;
  size_t temp1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SizeC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SizeC" "', argument " "1"" of type '" "size_t""'");
  } 
  temp1 = static_cast< size_t >(val1);
  arg1 = &temp1;
  result = (RavlN::SizeC *)new RavlN::SizeC((size_t const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SizeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SizeC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SizeC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SizeC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SizeC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SizeC()\n"
    "    RavlN::SizeC(size_t const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SizeC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeC *arg1 = (RavlN::SizeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SizeC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SizeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SizeC" "', argument " "1"" of type '" "RavlN::SizeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SizeC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SizeC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SizeC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListRealC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListRealC")) SWIG_fail;
  result = (RavlN::DListC< RavlN::RealT > *)new RavlN::DListC< RavlN::RealT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DListCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealC_Empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_Empty" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_InsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListRealC_InsFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_InsFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListRealC_InsFirst" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  (arg1)->InsFirst((double const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_InsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListRealC_InsLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_InsLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListRealC_InsLast" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  (arg1)->InsLast((double const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_PopFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealC_PopFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_PopFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->PopFirst();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_PopLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealC_PopLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_PopLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->PopLast();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_MoveFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  RavlN::DListC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListRealC_MoveFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_MoveFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_double_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListRealC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< double > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListRealC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< double > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< double > * >(argp2);
  (arg1)->MoveFirst(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_MoveLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  RavlN::DListC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListRealC_MoveLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_MoveLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_double_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListRealC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< double > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListRealC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< double > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< double > * >(argp2);
  (arg1)->MoveLast(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_First" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->First();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_Last" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->Last();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_Del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListRealC_Del",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_Del" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListRealC_Del" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Del((double const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListRealC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_Contains" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListRealC_Contains" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Contains((double const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListRealC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealC_Nth" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListRealC_Nth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (double)(arg1)->Nth(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListRealC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > *arg1 = (RavlN::DListC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListRealC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListRealC" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListRealC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DListCT_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListRealIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListRealIterC")) SWIG_fail;
  result = (RavlN::DLIterC< RavlN::RealT > *)new RavlN::DLIterC< RavlN::RealT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListRealIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< double > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DLIterC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListRealIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListRealIterC" "', argument " "1"" of type '" "RavlN::DListC< double > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListRealIterC" "', argument " "1"" of type '" "RavlN::DListC< double > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< double > * >(argp1);
  result = (RavlN::DLIterC< RavlN::RealT > *)new RavlN::DLIterC< RavlN::RealT >((RavlN::DListC< double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListRealIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListRealIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListRealIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListRealIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DLIterC< RavlN::RealT >()\n"
    "    RavlN::DLIterC< RavlN::RealT >(RavlN::DListC< double > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_IsValid" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::RealT > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_First" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  (arg1)->First();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_Last" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  (arg1)->Last();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_IsElm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_IsElm" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::RealT > const *)arg1)->IsElm();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_IsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_IsFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_IsFirst" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::RealT > const *)arg1)->IsFirst();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_IsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_IsLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_IsLast" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::RealT > const *)arg1)->IsLast();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_Next" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  (arg1)->Next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_Prev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Prev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_Prev" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  (arg1)->Prev();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_NextCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_NextCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_NextCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  (arg1)->NextCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_PrevCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_PrevCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_PrevCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  (arg1)->PrevCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListRealIterC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_Nth" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListRealIterC_Nth" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  (arg1)->Nth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_NextData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_NextData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_NextData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->NextData();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_PrevData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_PrevData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_PrevData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->PrevData();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_NextCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_NextCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_NextCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->NextCrcData();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_PrevCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_PrevCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_PrevCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->PrevCrcData();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_Tail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Tail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_Tail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (arg1)->Tail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< double >(static_cast< const RavlN::DListC< double >& >(result))), SWIGTYPE_p_RavlN__DListCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_Head(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Head",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_Head" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (arg1)->Head();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< double >(static_cast< const RavlN::DListC< double >& >(result))), SWIGTYPE_p_RavlN__DListCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_InclusiveTail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_InclusiveTail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_InclusiveTail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (arg1)->InclusiveTail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< double >(static_cast< const RavlN::DListC< double >& >(result))), SWIGTYPE_p_RavlN__DListCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_InclusiveHead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_InclusiveHead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_InclusiveHead" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (arg1)->InclusiveHead();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< double >(static_cast< const RavlN::DListC< double >& >(result))), SWIGTYPE_p_RavlN__DListCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC_Data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC_Data" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (double)(arg1)->Data();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListRealIterC___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListRealIterC___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListRealIterC___deref__" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  result = (double *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListRealIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::RealT > *arg1 = (RavlN::DLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListRealIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListRealIterC" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::RealT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListRealIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DLIterCT_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListRealConstIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListRealConstIterC")) SWIG_fail;
  result = (RavlN::ConstDLIterC< RavlN::RealT > *)new RavlN::ConstDLIterC< RavlN::RealT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListRealConstIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< double > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::ConstDLIterC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListRealConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListRealConstIterC" "', argument " "1"" of type '" "RavlN::DListC< double > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListRealConstIterC" "', argument " "1"" of type '" "RavlN::DListC< double > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< double > * >(argp1);
  result = (RavlN::ConstDLIterC< RavlN::RealT > *)new RavlN::ConstDLIterC< RavlN::RealT >((RavlN::DListC< double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListRealConstIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListRealConstIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListRealConstIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListRealConstIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::ConstDLIterC< RavlN::RealT >()\n"
    "    RavlN::ConstDLIterC< RavlN::RealT >(RavlN::DListC< double > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListRealConstIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::RealT > *arg1 = (RavlN::ConstDLIterC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListRealConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ConstDLIterCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListRealConstIterC" "', argument " "1"" of type '" "RavlN::ConstDLIterC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ConstDLIterC< RavlN::RealT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListRealConstIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ConstDLIterCT_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::RealT > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::RealT >""'");
    } else {
      RavlN::DListC< RavlN::RealT > * temp = reinterpret_cast< RavlN::DListC< RavlN::RealT > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (PyObject *)ToList(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListIntC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListIntC")) SWIG_fail;
  result = (RavlN::DListC< RavlN::IntT > *)new RavlN::DListC< RavlN::IntT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DListCT_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntC_Empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_Empty" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_InsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListIntC_InsFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_InsFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListIntC_InsFirst" "', argument " "2"" of type '" "int""'");
  } 
  temp2 = static_cast< int >(val2);
  arg2 = &temp2;
  (arg1)->InsFirst((int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_InsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListIntC_InsLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_InsLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListIntC_InsLast" "', argument " "2"" of type '" "int""'");
  } 
  temp2 = static_cast< int >(val2);
  arg2 = &temp2;
  (arg1)->InsLast((int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_PopFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntC_PopFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_PopFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->PopFirst();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_PopLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntC_PopLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_PopLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->PopLast();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_MoveFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  RavlN::DListC< int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListIntC_MoveFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_MoveFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_int_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListIntC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< int > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListIntC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< int > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< int > * >(argp2);
  (arg1)->MoveFirst(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_MoveLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  RavlN::DListC< int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListIntC_MoveLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_MoveLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_int_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListIntC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< int > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListIntC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< int > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< int > * >(argp2);
  (arg1)->MoveLast(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_First" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->First();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_Last" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->Last();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_Del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListIntC_Del",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_Del" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListIntC_Del" "', argument " "2"" of type '" "int""'");
  } 
  temp2 = static_cast< int >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Del((int const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListIntC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_Contains" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListIntC_Contains" "', argument " "2"" of type '" "int""'");
  } 
  temp2 = static_cast< int >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Contains((int const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListIntC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntC_Nth" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListIntC_Nth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)(arg1)->Nth(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListIntC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > *arg1 = (RavlN::DListC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListIntC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListIntC" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListIntC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DListCT_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListIntIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListIntIterC")) SWIG_fail;
  result = (RavlN::DLIterC< RavlN::IntT > *)new RavlN::DLIterC< RavlN::IntT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListIntIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DLIterC< RavlN::IntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListIntIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListIntIterC" "', argument " "1"" of type '" "RavlN::DListC< int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListIntIterC" "', argument " "1"" of type '" "RavlN::DListC< int > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< int > * >(argp1);
  result = (RavlN::DLIterC< RavlN::IntT > *)new RavlN::DLIterC< RavlN::IntT >((RavlN::DListC< int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListIntIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListIntIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListIntIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListIntIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DLIterC< RavlN::IntT >()\n"
    "    RavlN::DLIterC< RavlN::IntT >(RavlN::DListC< int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_IsValid" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::IntT > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_First" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  (arg1)->First();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_Last" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  (arg1)->Last();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_IsElm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_IsElm" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::IntT > const *)arg1)->IsElm();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_IsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_IsFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_IsFirst" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::IntT > const *)arg1)->IsFirst();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_IsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_IsLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_IsLast" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::IntT > const *)arg1)->IsLast();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_Next" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  (arg1)->Next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_Prev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Prev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_Prev" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  (arg1)->Prev();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_NextCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_NextCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_NextCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  (arg1)->NextCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_PrevCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_PrevCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_PrevCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  (arg1)->PrevCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListIntIterC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_Nth" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListIntIterC_Nth" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  (arg1)->Nth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_NextData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_NextData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_NextData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->NextData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_PrevData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_PrevData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_PrevData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->PrevData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_NextCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_NextCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_NextCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->NextCrcData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_PrevCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_PrevCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_PrevCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->PrevCrcData();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_Tail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Tail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_Tail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (arg1)->Tail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< int >(static_cast< const RavlN::DListC< int >& >(result))), SWIGTYPE_p_RavlN__DListCT_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_Head(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Head",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_Head" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (arg1)->Head();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< int >(static_cast< const RavlN::DListC< int >& >(result))), SWIGTYPE_p_RavlN__DListCT_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_InclusiveTail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_InclusiveTail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_InclusiveTail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (arg1)->InclusiveTail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< int >(static_cast< const RavlN::DListC< int >& >(result))), SWIGTYPE_p_RavlN__DListCT_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_InclusiveHead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_InclusiveHead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_InclusiveHead" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (arg1)->InclusiveHead();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< int >(static_cast< const RavlN::DListC< int >& >(result))), SWIGTYPE_p_RavlN__DListCT_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC_Data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC_Data" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (int)(arg1)->Data();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListIntIterC___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListIntIterC___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListIntIterC___deref__" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  result = (int *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListIntIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::IntT > *arg1 = (RavlN::DLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListIntIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListIntIterC" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::IntT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListIntIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DLIterCT_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListIntConstIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::IntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListIntConstIterC")) SWIG_fail;
  result = (RavlN::ConstDLIterC< RavlN::IntT > *)new RavlN::ConstDLIterC< RavlN::IntT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListIntConstIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::ConstDLIterC< RavlN::IntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListIntConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListIntConstIterC" "', argument " "1"" of type '" "RavlN::DListC< int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListIntConstIterC" "', argument " "1"" of type '" "RavlN::DListC< int > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< int > * >(argp1);
  result = (RavlN::ConstDLIterC< RavlN::IntT > *)new RavlN::ConstDLIterC< RavlN::IntT >((RavlN::DListC< int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListIntConstIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListIntConstIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListIntConstIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListIntConstIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::ConstDLIterC< RavlN::IntT >()\n"
    "    RavlN::ConstDLIterC< RavlN::IntT >(RavlN::DListC< int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListIntConstIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::IntT > *arg1 = (RavlN::ConstDLIterC< RavlN::IntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListIntConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ConstDLIterCT_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListIntConstIterC" "', argument " "1"" of type '" "RavlN::ConstDLIterC< RavlN::IntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ConstDLIterC< RavlN::IntT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListIntConstIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ConstDLIterCT_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::IntT > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_int_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::IntT >""'");
    } else {
      RavlN::DListC< RavlN::IntT > * temp = reinterpret_cast< RavlN::DListC< RavlN::IntT > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (PyObject *)ToList(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListUIntC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListUIntC")) SWIG_fail;
  result = (RavlN::DListC< RavlN::UIntT > *)new RavlN::DListC< RavlN::UIntT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntC_Empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_Empty" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_InsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_InsFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_InsFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListUIntC_InsFirst" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  (arg1)->InsFirst((unsigned int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_InsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_InsLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_InsLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListUIntC_InsLast" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  (arg1)->InsLast((unsigned int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_PopFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntC_PopFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_PopFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->PopFirst();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_PopLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntC_PopLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_PopLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->PopLast();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_MoveFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  RavlN::DListC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_MoveFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_MoveFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_unsigned_int_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListUIntC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< unsigned int > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListUIntC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< unsigned int > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< unsigned int > * >(argp2);
  (arg1)->MoveFirst(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_MoveLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  RavlN::DListC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_MoveLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_MoveLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_unsigned_int_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListUIntC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< unsigned int > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListUIntC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< unsigned int > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< unsigned int > * >(argp2);
  (arg1)->MoveLast(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_First" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->First();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_Last" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->Last();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_Del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_Del",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_Del" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListUIntC_Del" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Del((unsigned int const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_Contains" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListUIntC_Contains" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Contains((unsigned int const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntC_Nth" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListUIntC_Nth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (unsigned int)(arg1)->Nth(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListUIntC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > *arg1 = (RavlN::DListC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListUIntC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListUIntC" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListUIntC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListUIntIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListUIntIterC")) SWIG_fail;
  result = (RavlN::DLIterC< RavlN::UIntT > *)new RavlN::DLIterC< RavlN::UIntT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListUIntIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< unsigned int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DLIterC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListUIntIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListUIntIterC" "', argument " "1"" of type '" "RavlN::DListC< unsigned int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListUIntIterC" "', argument " "1"" of type '" "RavlN::DListC< unsigned int > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< unsigned int > * >(argp1);
  result = (RavlN::DLIterC< RavlN::UIntT > *)new RavlN::DLIterC< RavlN::UIntT >((RavlN::DListC< unsigned int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListUIntIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListUIntIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListUIntIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListUIntIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DLIterC< RavlN::UIntT >()\n"
    "    RavlN::DLIterC< RavlN::UIntT >(RavlN::DListC< unsigned int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_IsValid" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::UIntT > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_First" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  (arg1)->First();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_Last" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  (arg1)->Last();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_IsElm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_IsElm" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::UIntT > const *)arg1)->IsElm();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_IsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_IsFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_IsFirst" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::UIntT > const *)arg1)->IsFirst();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_IsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_IsLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_IsLast" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::UIntT > const *)arg1)->IsLast();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_Next" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  (arg1)->Next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_Prev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Prev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_Prev" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  (arg1)->Prev();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_NextCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_NextCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_NextCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  (arg1)->NextCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_PrevCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_PrevCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_PrevCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  (arg1)->PrevCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListUIntIterC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_Nth" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListUIntIterC_Nth" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  (arg1)->Nth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_NextData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_NextData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_NextData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->NextData();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_PrevData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_PrevData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_PrevData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->PrevData();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_NextCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_NextCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_NextCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->NextCrcData();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_PrevCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_PrevCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_PrevCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->PrevCrcData();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_Tail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Tail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_Tail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (arg1)->Tail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< unsigned int >(static_cast< const RavlN::DListC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_Head(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Head",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_Head" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (arg1)->Head();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< unsigned int >(static_cast< const RavlN::DListC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_InclusiveTail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_InclusiveTail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_InclusiveTail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (arg1)->InclusiveTail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< unsigned int >(static_cast< const RavlN::DListC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_InclusiveHead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_InclusiveHead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_InclusiveHead" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (arg1)->InclusiveHead();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< unsigned int >(static_cast< const RavlN::DListC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC_Data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC_Data" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->Data();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListUIntIterC___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListUIntIterC___deref__" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  result = (unsigned int *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListUIntIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::UIntT > *arg1 = (RavlN::DLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListUIntIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListUIntIterC" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::UIntT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListUIntIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DLIterCT_unsigned_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListUIntConstIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListUIntConstIterC")) SWIG_fail;
  result = (RavlN::ConstDLIterC< RavlN::UIntT > *)new RavlN::ConstDLIterC< RavlN::UIntT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListUIntConstIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< unsigned int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::ConstDLIterC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListUIntConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListUIntConstIterC" "', argument " "1"" of type '" "RavlN::DListC< unsigned int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListUIntConstIterC" "', argument " "1"" of type '" "RavlN::DListC< unsigned int > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< unsigned int > * >(argp1);
  result = (RavlN::ConstDLIterC< RavlN::UIntT > *)new RavlN::ConstDLIterC< RavlN::UIntT >((RavlN::DListC< unsigned int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListUIntConstIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListUIntConstIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListUIntConstIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListUIntConstIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::ConstDLIterC< RavlN::UIntT >()\n"
    "    RavlN::ConstDLIterC< RavlN::UIntT >(RavlN::DListC< unsigned int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListUIntConstIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::UIntT > *arg1 = (RavlN::ConstDLIterC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListUIntConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListUIntConstIterC" "', argument " "1"" of type '" "RavlN::ConstDLIterC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ConstDLIterC< RavlN::UIntT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListUIntConstIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToList__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::UIntT > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_unsigned_int_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::UIntT >""'");
    } else {
      RavlN::DListC< RavlN::UIntT > * temp = reinterpret_cast< RavlN::DListC< RavlN::UIntT > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (PyObject *)ToList(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt64C(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListInt64C")) SWIG_fail;
  result = (RavlN::DListC< RavlN::Int64T > *)new RavlN::DListC< RavlN::Int64T >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DListCT_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64C_Empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_Empty" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_InsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_InsFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_InsFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt64C_InsFirst" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  (arg1)->InsFirst((long const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_InsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_InsLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_InsLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt64C_InsLast" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  (arg1)->InsLast((long const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_PopFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64C_PopFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_PopFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->PopFirst();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_PopLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64C_PopLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_PopLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->PopLast();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_MoveFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  RavlN::DListC< long > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_MoveFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_MoveFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_long_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListInt64C_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< long > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListInt64C_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< long > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< long > * >(argp2);
  (arg1)->MoveFirst(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_MoveLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  RavlN::DListC< long > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_MoveLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_MoveLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_long_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListInt64C_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< long > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListInt64C_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< long > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< long > * >(argp2);
  (arg1)->MoveLast(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64C_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_First" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->First();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64C_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_Last" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->Last();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_Del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_Del",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_Del" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt64C_Del" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Del((long const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_Contains" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt64C_Contains" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Contains((long const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64C_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64C_Nth" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt64C_Nth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (long)(arg1)->Nth(arg2);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListInt64C(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > *arg1 = (RavlN::DListC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListInt64C",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_long_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListInt64C" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListInt64C_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DListCT_long_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListInt64IterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListInt64IterC")) SWIG_fail;
  result = (RavlN::DLIterC< RavlN::Int64T > *)new RavlN::DLIterC< RavlN::Int64T >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt64IterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< long > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DLIterC< RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListInt64IterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_long_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListInt64IterC" "', argument " "1"" of type '" "RavlN::DListC< long > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListInt64IterC" "', argument " "1"" of type '" "RavlN::DListC< long > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< long > * >(argp1);
  result = (RavlN::DLIterC< RavlN::Int64T > *)new RavlN::DLIterC< RavlN::Int64T >((RavlN::DListC< long > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt64IterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListInt64IterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListInt64IterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListInt64IterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DLIterC< RavlN::Int64T >()\n"
    "    RavlN::DLIterC< RavlN::Int64T >(RavlN::DListC< long > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_IsValid" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Int64T > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_First" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  (arg1)->First();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_Last" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  (arg1)->Last();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_IsElm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_IsElm" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Int64T > const *)arg1)->IsElm();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_IsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_IsFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_IsFirst" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Int64T > const *)arg1)->IsFirst();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_IsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_IsLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_IsLast" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Int64T > const *)arg1)->IsLast();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_Next" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  (arg1)->Next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_Prev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Prev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_Prev" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  (arg1)->Prev();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_NextCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_NextCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_NextCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  (arg1)->NextCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_PrevCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_PrevCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_PrevCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  (arg1)->PrevCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt64IterC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_Nth" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt64IterC_Nth" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  (arg1)->Nth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_NextData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_NextData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_NextData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->NextData();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_PrevData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_PrevData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_PrevData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->PrevData();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_NextCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_NextCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_NextCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->NextCrcData();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_PrevCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_PrevCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_PrevCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->PrevCrcData();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_Tail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< long > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Tail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_Tail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (arg1)->Tail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< long >(static_cast< const RavlN::DListC< long >& >(result))), SWIGTYPE_p_RavlN__DListCT_long_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_Head(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< long > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Head",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_Head" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (arg1)->Head();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< long >(static_cast< const RavlN::DListC< long >& >(result))), SWIGTYPE_p_RavlN__DListCT_long_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_InclusiveTail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< long > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_InclusiveTail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_InclusiveTail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (arg1)->InclusiveTail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< long >(static_cast< const RavlN::DListC< long >& >(result))), SWIGTYPE_p_RavlN__DListCT_long_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_InclusiveHead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< long > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_InclusiveHead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_InclusiveHead" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (arg1)->InclusiveHead();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< long >(static_cast< const RavlN::DListC< long >& >(result))), SWIGTYPE_p_RavlN__DListCT_long_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC_Data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC_Data" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (long)(arg1)->Data();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt64IterC___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt64IterC___deref__" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  result = (long *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListInt64IterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int64T > *arg1 = (RavlN::DLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListInt64IterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_long_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListInt64IterC" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int64T > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListInt64IterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DLIterCT_long_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListInt64ConstIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListInt64ConstIterC")) SWIG_fail;
  result = (RavlN::ConstDLIterC< RavlN::Int64T > *)new RavlN::ConstDLIterC< RavlN::Int64T >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt64ConstIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< long > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::ConstDLIterC< RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListInt64ConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_long_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListInt64ConstIterC" "', argument " "1"" of type '" "RavlN::DListC< long > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListInt64ConstIterC" "', argument " "1"" of type '" "RavlN::DListC< long > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< long > * >(argp1);
  result = (RavlN::ConstDLIterC< RavlN::Int64T > *)new RavlN::ConstDLIterC< RavlN::Int64T >((RavlN::DListC< long > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt64ConstIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListInt64ConstIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListInt64ConstIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListInt64ConstIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::ConstDLIterC< RavlN::Int64T >()\n"
    "    RavlN::ConstDLIterC< RavlN::Int64T >(RavlN::DListC< long > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListInt64ConstIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::Int64T > *arg1 = (RavlN::ConstDLIterC< RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListInt64ConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ConstDLIterCT_long_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListInt64ConstIterC" "', argument " "1"" of type '" "RavlN::ConstDLIterC< RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ConstDLIterC< RavlN::Int64T > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListInt64ConstIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ConstDLIterCT_long_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToList__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int64T > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_long_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int64T >""'");
    } else {
      RavlN::DListC< RavlN::Int64T > * temp = reinterpret_cast< RavlN::DListC< RavlN::Int64T > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (PyObject *)ToList(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt16C(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListInt16C")) SWIG_fail;
  result = (RavlN::DListC< RavlN::Int16T > *)new RavlN::DListC< RavlN::Int16T >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DListCT_short_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16C_Empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_Empty" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_InsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  short *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short temp2 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_InsFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_InsFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt16C_InsFirst" "', argument " "2"" of type '" "short""'");
  } 
  temp2 = static_cast< short >(val2);
  arg2 = &temp2;
  (arg1)->InsFirst((short const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_InsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  short *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short temp2 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_InsLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_InsLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt16C_InsLast" "', argument " "2"" of type '" "short""'");
  } 
  temp2 = static_cast< short >(val2);
  arg2 = &temp2;
  (arg1)->InsLast((short const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_PopFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16C_PopFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_PopFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->PopFirst();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_PopLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16C_PopLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_PopLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->PopLast();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_MoveFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  RavlN::DListC< short > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_MoveFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_MoveFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_short_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListInt16C_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< short > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListInt16C_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< short > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< short > * >(argp2);
  (arg1)->MoveFirst(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_MoveLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  RavlN::DListC< short > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_MoveLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_MoveLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_short_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListInt16C_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< short > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListInt16C_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< short > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< short > * >(argp2);
  (arg1)->MoveLast(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16C_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_First" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->First();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16C_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_Last" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->Last();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_Del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  short *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short temp2 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_Del",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_Del" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt16C_Del" "', argument " "2"" of type '" "short""'");
  } 
  temp2 = static_cast< short >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Del((short const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  short *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short temp2 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_Contains" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt16C_Contains" "', argument " "2"" of type '" "short""'");
  } 
  temp2 = static_cast< short >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Contains((short const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16C_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16C_Nth" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt16C_Nth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (short)(arg1)->Nth(arg2);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListInt16C(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > *arg1 = (RavlN::DListC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListInt16C",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_short_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListInt16C" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListInt16C_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DListCT_short_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListInt16IterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListInt16IterC")) SWIG_fail;
  result = (RavlN::DLIterC< RavlN::Int16T > *)new RavlN::DLIterC< RavlN::Int16T >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_short_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt16IterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< short > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DLIterC< RavlN::Int16T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListInt16IterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_short_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListInt16IterC" "', argument " "1"" of type '" "RavlN::DListC< short > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListInt16IterC" "', argument " "1"" of type '" "RavlN::DListC< short > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< short > * >(argp1);
  result = (RavlN::DLIterC< RavlN::Int16T > *)new RavlN::DLIterC< RavlN::Int16T >((RavlN::DListC< short > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_short_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt16IterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListInt16IterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_short_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListInt16IterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListInt16IterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DLIterC< RavlN::Int16T >()\n"
    "    RavlN::DLIterC< RavlN::Int16T >(RavlN::DListC< short > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_IsValid" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Int16T > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_First" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  (arg1)->First();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_Last" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  (arg1)->Last();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_IsElm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_IsElm" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Int16T > const *)arg1)->IsElm();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_IsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_IsFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_IsFirst" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Int16T > const *)arg1)->IsFirst();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_IsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_IsLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_IsLast" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Int16T > const *)arg1)->IsLast();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_Next" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  (arg1)->Next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_Prev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Prev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_Prev" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  (arg1)->Prev();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_NextCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_NextCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_NextCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  (arg1)->NextCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_PrevCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_PrevCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_PrevCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  (arg1)->PrevCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListInt16IterC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_Nth" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListInt16IterC_Nth" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  (arg1)->Nth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_NextData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_NextData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_NextData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->NextData();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_PrevData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_PrevData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_PrevData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->PrevData();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_NextCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_NextCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_NextCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->NextCrcData();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_PrevCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_PrevCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_PrevCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->PrevCrcData();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_Tail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< short > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Tail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_Tail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (arg1)->Tail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< short >(static_cast< const RavlN::DListC< short >& >(result))), SWIGTYPE_p_RavlN__DListCT_short_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_Head(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< short > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Head",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_Head" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (arg1)->Head();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< short >(static_cast< const RavlN::DListC< short >& >(result))), SWIGTYPE_p_RavlN__DListCT_short_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_InclusiveTail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< short > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_InclusiveTail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_InclusiveTail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (arg1)->InclusiveTail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< short >(static_cast< const RavlN::DListC< short >& >(result))), SWIGTYPE_p_RavlN__DListCT_short_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_InclusiveHead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< short > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_InclusiveHead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_InclusiveHead" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (arg1)->InclusiveHead();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< short >(static_cast< const RavlN::DListC< short >& >(result))), SWIGTYPE_p_RavlN__DListCT_short_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC_Data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC_Data" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (short)(arg1)->Data();
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListInt16IterC___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListInt16IterC___deref__" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  result = (short *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_short, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListInt16IterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Int16T > *arg1 = (RavlN::DLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListInt16IterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_short_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListInt16IterC" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Int16T > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListInt16IterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DLIterCT_short_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListInt16ConstIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::Int16T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListInt16ConstIterC")) SWIG_fail;
  result = (RavlN::ConstDLIterC< RavlN::Int16T > *)new RavlN::ConstDLIterC< RavlN::Int16T >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_short_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt16ConstIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< short > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::ConstDLIterC< RavlN::Int16T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListInt16ConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_short_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListInt16ConstIterC" "', argument " "1"" of type '" "RavlN::DListC< short > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListInt16ConstIterC" "', argument " "1"" of type '" "RavlN::DListC< short > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< short > * >(argp1);
  result = (RavlN::ConstDLIterC< RavlN::Int16T > *)new RavlN::ConstDLIterC< RavlN::Int16T >((RavlN::DListC< short > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_short_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListInt16ConstIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListInt16ConstIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_short_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListInt16ConstIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListInt16ConstIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::ConstDLIterC< RavlN::Int16T >()\n"
    "    RavlN::ConstDLIterC< RavlN::Int16T >(RavlN::DListC< short > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListInt16ConstIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::Int16T > *arg1 = (RavlN::ConstDLIterC< RavlN::Int16T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListInt16ConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ConstDLIterCT_short_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListInt16ConstIterC" "', argument " "1"" of type '" "RavlN::ConstDLIterC< RavlN::Int16T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ConstDLIterC< RavlN::Int16T > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListInt16ConstIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ConstDLIterCT_short_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToList__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Int16T > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_short_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Int16T >""'");
    } else {
      RavlN::DListC< RavlN::Int16T > * temp = reinterpret_cast< RavlN::DListC< RavlN::Int16T > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (PyObject *)ToList(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListByteC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListByteC")) SWIG_fail;
  result = (RavlN::DListC< RavlN::ByteT > *)new RavlN::DListC< RavlN::ByteT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteC_Empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_Empty" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_InsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  unsigned char *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListByteC_InsFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_InsFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListByteC_InsFirst" "', argument " "2"" of type '" "unsigned char""'");
  } 
  temp2 = static_cast< unsigned char >(val2);
  arg2 = &temp2;
  (arg1)->InsFirst((unsigned char const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_InsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  unsigned char *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListByteC_InsLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_InsLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListByteC_InsLast" "', argument " "2"" of type '" "unsigned char""'");
  } 
  temp2 = static_cast< unsigned char >(val2);
  arg2 = &temp2;
  (arg1)->InsLast((unsigned char const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_PopFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteC_PopFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_PopFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->PopFirst();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_PopLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteC_PopLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_PopLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->PopLast();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_MoveFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  RavlN::DListC< unsigned char > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListByteC_MoveFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_MoveFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_unsigned_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListByteC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< unsigned char > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListByteC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< unsigned char > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< unsigned char > * >(argp2);
  (arg1)->MoveFirst(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_MoveLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  RavlN::DListC< unsigned char > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListByteC_MoveLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_MoveLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_unsigned_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListByteC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< unsigned char > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListByteC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< unsigned char > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< unsigned char > * >(argp2);
  (arg1)->MoveLast(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_First" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->First();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_Last" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->Last();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_Del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  unsigned char *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListByteC_Del",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_Del" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListByteC_Del" "', argument " "2"" of type '" "unsigned char""'");
  } 
  temp2 = static_cast< unsigned char >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Del((unsigned char const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  unsigned char *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListByteC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_Contains" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListByteC_Contains" "', argument " "2"" of type '" "unsigned char""'");
  } 
  temp2 = static_cast< unsigned char >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Contains((unsigned char const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListByteC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteC_Nth" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListByteC_Nth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (unsigned char)(arg1)->Nth(arg2);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListByteC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > *arg1 = (RavlN::DListC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListByteC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListByteC" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListByteC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListByteIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListByteIterC")) SWIG_fail;
  result = (RavlN::DLIterC< RavlN::ByteT > *)new RavlN::DLIterC< RavlN::ByteT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListByteIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< unsigned char > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DLIterC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListByteIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_unsigned_char_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListByteIterC" "', argument " "1"" of type '" "RavlN::DListC< unsigned char > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListByteIterC" "', argument " "1"" of type '" "RavlN::DListC< unsigned char > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< unsigned char > * >(argp1);
  result = (RavlN::DLIterC< RavlN::ByteT > *)new RavlN::DLIterC< RavlN::ByteT >((RavlN::DListC< unsigned char > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListByteIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListByteIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListByteIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListByteIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DLIterC< RavlN::ByteT >()\n"
    "    RavlN::DLIterC< RavlN::ByteT >(RavlN::DListC< unsigned char > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_IsValid" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::ByteT > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_First" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  (arg1)->First();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_Last" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  (arg1)->Last();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_IsElm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_IsElm" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::ByteT > const *)arg1)->IsElm();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_IsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_IsFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_IsFirst" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::ByteT > const *)arg1)->IsFirst();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_IsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_IsLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_IsLast" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::ByteT > const *)arg1)->IsLast();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_Next" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  (arg1)->Next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_Prev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Prev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_Prev" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  (arg1)->Prev();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_NextCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_NextCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_NextCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  (arg1)->NextCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_PrevCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_PrevCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_PrevCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  (arg1)->PrevCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListByteIterC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_Nth" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListByteIterC_Nth" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  (arg1)->Nth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_NextData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_NextData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_NextData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->NextData();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_PrevData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_PrevData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_PrevData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->PrevData();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_NextCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_NextCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_NextCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->NextCrcData();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_PrevCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_PrevCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_PrevCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->PrevCrcData();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_Tail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< unsigned char > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Tail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_Tail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (arg1)->Tail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< unsigned char >(static_cast< const RavlN::DListC< unsigned char >& >(result))), SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_Head(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< unsigned char > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Head",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_Head" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (arg1)->Head();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< unsigned char >(static_cast< const RavlN::DListC< unsigned char >& >(result))), SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_InclusiveTail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< unsigned char > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_InclusiveTail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_InclusiveTail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (arg1)->InclusiveTail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< unsigned char >(static_cast< const RavlN::DListC< unsigned char >& >(result))), SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_InclusiveHead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< unsigned char > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_InclusiveHead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_InclusiveHead" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (arg1)->InclusiveHead();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< unsigned char >(static_cast< const RavlN::DListC< unsigned char >& >(result))), SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC_Data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC_Data" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (unsigned char)(arg1)->Data();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListByteIterC___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListByteIterC___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListByteIterC___deref__" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  result = (unsigned char *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListByteIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::ByteT > *arg1 = (RavlN::DLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListByteIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListByteIterC" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::ByteT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListByteIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DLIterCT_unsigned_char_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListByteConstIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListByteConstIterC")) SWIG_fail;
  result = (RavlN::ConstDLIterC< RavlN::ByteT > *)new RavlN::ConstDLIterC< RavlN::ByteT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListByteConstIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< unsigned char > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::ConstDLIterC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListByteConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_unsigned_char_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListByteConstIterC" "', argument " "1"" of type '" "RavlN::DListC< unsigned char > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListByteConstIterC" "', argument " "1"" of type '" "RavlN::DListC< unsigned char > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< unsigned char > * >(argp1);
  result = (RavlN::ConstDLIterC< RavlN::ByteT > *)new RavlN::ConstDLIterC< RavlN::ByteT >((RavlN::DListC< unsigned char > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListByteConstIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListByteConstIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListByteConstIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListByteConstIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::ConstDLIterC< RavlN::ByteT >()\n"
    "    RavlN::ConstDLIterC< RavlN::ByteT >(RavlN::DListC< unsigned char > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListByteConstIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ConstDLIterC< RavlN::ByteT > *arg1 = (RavlN::ConstDLIterC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListByteConstIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_char_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListByteConstIterC" "', argument " "1"" of type '" "RavlN::ConstDLIterC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ConstDLIterC< RavlN::ByteT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListByteConstIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ConstDLIterCT_unsigned_char_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToList__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::ByteT > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_unsigned_char_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::ByteT >""'");
    } else {
      RavlN::DListC< RavlN::ByteT > * temp = reinterpret_cast< RavlN::DListC< RavlN::ByteT > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (PyObject *)ToList(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Point2dC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Point2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Point2dC")) SWIG_fail;
  result = (RavlN::Point2dC *)new RavlN::Point2dC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Point2dC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Point2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Point2dC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Point2dC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Point2dC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::Point2dC *)new RavlN::Point2dC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Point2dC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Point2dC__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Point2dC__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Point2dC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Point2dC()\n"
    "    RavlN::Point2dC(RavlN::RealT,RavlN::RealT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point2dC_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Point2dC *arg1 = (RavlN::Point2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point2dC_Row",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Point2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point2dC_Row" "', argument " "1"" of type '" "RavlN::Point2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Point2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::Point2dC const *)arg1)->Row();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point2dC_Col(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Point2dC *arg1 = (RavlN::Point2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point2dC_Col",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Point2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point2dC_Col" "', argument " "1"" of type '" "RavlN::Point2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Point2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::Point2dC const *)arg1)->Col();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Point2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Point2dC *arg1 = (RavlN::Point2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Point2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Point2dC" "', argument " "1"" of type '" "RavlN::Point2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Point2dC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Point2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__Point2dC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListPoint2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListPoint2dC")) SWIG_fail;
  result = (RavlN::DListC< RavlN::Point2dC > *)new RavlN::DListC< RavlN::Point2dC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_Empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_Empty" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_InsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_InsFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_InsFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListPoint2dC_InsFirst" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListPoint2dC_InsFirst" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  (arg1)->InsFirst((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_InsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_InsLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_InsLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListPoint2dC_InsLast" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListPoint2dC_InsLast" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  (arg1)->InsLast((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_PopFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_PopFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_PopFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->PopFirst();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_PopLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_PopLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_PopLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->PopLast();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_MoveFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  RavlN::DListC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_MoveFirst",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_MoveFirst" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListPoint2dC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< RavlN::Point2dC > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListPoint2dC_MoveFirst" "', argument " "2"" of type '" "RavlN::DListC< RavlN::Point2dC > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp2);
  (arg1)->MoveFirst(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_MoveLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  RavlN::DListC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_MoveLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_MoveLast" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListPoint2dC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< RavlN::Point2dC > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListPoint2dC_MoveLast" "', argument " "2"" of type '" "RavlN::DListC< RavlN::Point2dC > &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp2);
  (arg1)->MoveLast(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_First" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->First();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_Last" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->Last();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_Del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_Del",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_Del" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListPoint2dC_Del" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListPoint2dC_Del" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = (bool)(arg1)->Del((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_Contains" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DListPoint2dC_Contains" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DListPoint2dC_Contains" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = (bool)(arg1)->Contains((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dC_Nth" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListPoint2dC_Nth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (arg1)->Nth(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListPoint2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = (RavlN::DListC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListPoint2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListPoint2dC" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListPoint2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DListPoint2dIterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DListPoint2dIterC")) SWIG_fail;
  result = (RavlN::DLIterC< RavlN::Point2dC > *)new RavlN::DLIterC< RavlN::Point2dC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListPoint2dIterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DLIterC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DListPoint2dIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DListPoint2dIterC" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DListPoint2dIterC" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
  result = (RavlN::DLIterC< RavlN::Point2dC > *)new RavlN::DLIterC< RavlN::Point2dC >((RavlN::DListC< RavlN::Point2dC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DListPoint2dIterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DListPoint2dIterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DListPoint2dIterC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DListPoint2dIterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DLIterC< RavlN::Point2dC >()\n"
    "    RavlN::DLIterC< RavlN::Point2dC >(RavlN::DListC< RavlN::Point2dC > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_IsValid" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Point2dC > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_First" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  (arg1)->First();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Last" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  (arg1)->Last();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_IsElm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_IsElm" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Point2dC > const *)arg1)->IsElm();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_IsFirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_IsFirst",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_IsFirst" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Point2dC > const *)arg1)->IsFirst();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_IsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_IsLast",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_IsLast" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (bool)((RavlN::DLIterC< RavlN::Point2dC > const *)arg1)->IsLast();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Next" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  (arg1)->Next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Prev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Prev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Prev" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  (arg1)->Prev();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_NextCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_NextCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_NextCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  (arg1)->NextCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_PrevCrc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_PrevCrc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_PrevCrc" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  (arg1)->PrevCrc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Nth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dIterC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Nth" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DListPoint2dIterC_Nth" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  (arg1)->Nth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_NextData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_NextData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_NextData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->NextData();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_PrevData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_PrevData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_PrevData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->PrevData();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_NextCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_NextCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_NextCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->NextCrcData();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_PrevCrcData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_PrevCrcData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_PrevCrcData" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->PrevCrcData();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Tail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Tail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Tail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->Tail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< RavlN::Point2dC >(static_cast< const RavlN::DListC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Head(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Head",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Head" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->Head();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< RavlN::Point2dC >(static_cast< const RavlN::DListC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_InclusiveTail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_InclusiveTail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_InclusiveTail" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->InclusiveTail();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< RavlN::Point2dC >(static_cast< const RavlN::DListC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_InclusiveHead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DListC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_InclusiveHead",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_InclusiveHead" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->InclusiveHead();
  resultobj = SWIG_NewPointerObj((new RavlN::DListC< RavlN::Point2dC >(static_cast< const RavlN::DListC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Data" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (arg1)->Data();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC___deref__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC___deref__" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (RavlN::Point2dC *)(arg1)->operator ->();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Point2dC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DListPoint2dIterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DListPoint2dIterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DListPoint2dIterC" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Row",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Row" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (RavlN::RealT)(*arg1)->Row();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DListPoint2dIterC_Col(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DLIterC< RavlN::Point2dC > *arg1 = (RavlN::DLIterC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Col",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DListPoint2dIterC_Col" "', argument " "1"" of type '" "RavlN::DLIterC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DLIterC< RavlN::Point2dC > * >(argp1);
  result = (RavlN::RealT)(*arg1)->Col();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DListPoint2dIterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DLIterCT_RavlN__Point2dC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToList__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DListC< RavlN::Point2dC > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToList" "', argument " "1"" of type '" "RavlN::DListC< RavlN::Point2dC >""'");
    } else {
      RavlN::DListC< RavlN::Point2dC > * temp = reinterpret_cast< RavlN::DListC< RavlN::Point2dC > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (PyObject *)ToList(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToList(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ToList__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ToList__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ToList__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ToList__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_short_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ToList__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ToList__SWIG_5(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DListCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ToList__SWIG_6(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'ToList'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ToList(RavlN::DListC< RavlN::RealT >)\n"
    "    ToList(RavlN::DListC< RavlN::IntT >)\n"
    "    ToList(RavlN::DListC< RavlN::UIntT >)\n"
    "    ToList(RavlN::DListC< RavlN::Int64T >)\n"
    "    ToList(RavlN::DListC< RavlN::Int16T >)\n"
    "    ToList(RavlN::DListC< RavlN::ByteT >)\n"
    "    ToList(RavlN::DListC< RavlN::Point2dC >)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_IndexC")) SWIG_fail;
  result = (RavlN::IndexC *)new RavlN::IndexC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_IndexC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IndexC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  result = (RavlN::IndexC *)new RavlN::IndexC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IndexC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_IndexC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_IndexC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::IndexC()\n"
    "    RavlN::IndexC(RavlN::IntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexC_V(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexC *arg1 = (RavlN::IndexC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexC_V",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexC_V" "', argument " "1"" of type '" "RavlN::IndexC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexC * >(argp1);
  result = (RavlN::IntT)((RavlN::IndexC const *)arg1)->V();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IndexC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexC *arg1 = (RavlN::IndexC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_IndexC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IndexC" "', argument " "1"" of type '" "RavlN::IndexC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IndexC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__IndexC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IndexRangeC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_IndexRangeC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IndexRangeC" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (RavlN::IndexRangeC *)new RavlN::IndexRangeC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexRangeC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_IndexRangeC")) SWIG_fail;
  result = (RavlN::IndexRangeC *)new RavlN::IndexRangeC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexRangeC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexC arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_IndexRangeC",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IndexRangeC" "', argument " "1"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexRangeC" "', argument " "1"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *)new RavlN::IndexRangeC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexRangeC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeC arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_IndexRangeC",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SizeC,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IndexRangeC" "', argument " "1"" of type '" "RavlN::SizeC""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexRangeC" "', argument " "1"" of type '" "RavlN::SizeC""'");
    } else {
      RavlN::SizeC * temp = reinterpret_cast< RavlN::SizeC * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *)new RavlN::IndexRangeC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexRangeC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexC arg1 ;
  RavlN::IndexC arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_IndexRangeC",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IndexRangeC" "', argument " "1"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexRangeC" "', argument " "1"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_IndexRangeC" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexRangeC" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *)new RavlN::IndexRangeC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IndexRangeC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IndexRangeC__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IndexRangeC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SizeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IndexRangeC__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_IndexRangeC__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_IndexRangeC__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_IndexRangeC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::IndexRangeC(size_t)\n"
    "    RavlN::IndexRangeC()\n"
    "    RavlN::IndexRangeC(RavlN::IndexC)\n"
    "    RavlN::IndexRangeC(RavlN::SizeC)\n"
    "    RavlN::IndexRangeC(RavlN::IndexC,RavlN::IndexC)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Size" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (RavlN::IntT)((RavlN::IndexRangeC const *)arg1)->Size();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_Range",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Range" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (RavlN::IndexRangeC *) &((RavlN::IndexRangeC const *)arg1)->Range();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Min__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_Min",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Min" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (RavlN::IndexC *) &((RavlN::IndexRangeC const *)arg1)->Min();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Max__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_Max",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Max" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (RavlN::IndexC *) &((RavlN::IndexRangeC const *)arg1)->Max();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Min__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_Min",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Min" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (RavlN::IndexC *) &(arg1)->Min();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Min(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_IndexRangeC_Min__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_IndexRangeC_Min__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'IndexRangeC_Min'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Min(RavlN::IndexRangeC const *)\n"
    "    Min(RavlN::IndexRangeC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Max__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_Max",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Max" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (RavlN::IndexC *) &(arg1)->Max();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Max(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_IndexRangeC_Max__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_IndexRangeC_Max__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'IndexRangeC_Max'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Max(RavlN::IndexRangeC const *)\n"
    "    Max(RavlN::IndexRangeC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Center(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_Center",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Center" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = ((RavlN::IndexRangeC const *)arg1)->Center();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_CenterD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_CenterD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_CenterD" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = ((RavlN::IndexRangeC const *)arg1)->CenterD();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Percentage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Percentage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Percentage" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC_Percentage" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::IndexRangeC const *)arg1)->Percentage(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_IsEmpty" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (bool)((RavlN::IndexRangeC const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_IsValid" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (bool)((RavlN::IndexRangeC const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Contains__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Contains" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)((RavlN::IndexRangeC const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Contains__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Contains" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC_Contains" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (bool)((RavlN::IndexRangeC const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Contains__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Contains" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Contains" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Contains" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (bool)((RavlN::IndexRangeC const *)arg1)->Contains((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Contains(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC_Contains__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC_Contains__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC_Contains__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'IndexRangeC_Contains'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Contains(RavlN::IndexRangeC const *,RavlN::IndexC)\n"
    "    Contains(RavlN::IndexRangeC const *,RavlN::RealT)\n"
    "    Contains(RavlN::IndexRangeC const *,RavlN::IndexRangeC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___eq__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___eq__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___eq__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (bool)((RavlN::IndexRangeC const *)arg1)->operator ==((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___ne__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___ne__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___ne__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (bool)((RavlN::IndexRangeC const *)arg1)->operator !=((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_In(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_In",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_In" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_In" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_In" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (bool)((RavlN::IndexRangeC const *)arg1)->In((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_IsOverlapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_IsOverlapping",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_IsOverlapping" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_IsOverlapping" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_IsOverlapping" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (bool)((RavlN::IndexRangeC const *)arg1)->IsOverlapping((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_SetOrigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_SetOrigin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_SetOrigin" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_SetOrigin" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_SetOrigin" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->SetOrigin(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___iadd__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___iadd__" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___iadd__" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->operator +=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___isub__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___isub__" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___isub__" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->operator -=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___idiv__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___idiv__" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___idiv__" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->operator /=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___imul__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___imul__" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___imul__" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->operator *=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___iadd__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC___iadd__" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  result = (RavlN::IndexRangeC *) &(arg1)->operator +=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___isub__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC___isub__" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  result = (RavlN::IndexRangeC *) &(arg1)->operator -=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___iadd____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___iadd__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC___iadd__" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (RavlN::IndexRangeC *) &(arg1)->operator +=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___isub____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___isub__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC___isub__" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (RavlN::IndexRangeC *) &(arg1)->operator -=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___add__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___add__" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___add__" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->operator +(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___sub__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___sub__" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___sub__" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->operator -(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___div__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___div__" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___div__" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->operator /(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___mul__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___mul__" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___mul__" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->operator *(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___add__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC___add__" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  result = ((RavlN::IndexRangeC const *)arg1)->operator +(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___sub__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC___sub__" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  result = ((RavlN::IndexRangeC const *)arg1)->operator -(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___add____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___add__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC___add__" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = ((RavlN::IndexRangeC const *)arg1)->operator +(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___sub____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___sub__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC___sub__" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = ((RavlN::IndexRangeC const *)arg1)->operator -(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___add____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::SizeC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___add__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SizeC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___add__" "', argument " "2"" of type '" "RavlN::SizeC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___add__" "', argument " "2"" of type '" "RavlN::SizeC""'");
    } else {
      RavlN::SizeC * temp = reinterpret_cast< RavlN::SizeC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->operator +(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___sub____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::SizeC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___sub__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SizeC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___sub__" "', argument " "2"" of type '" "RavlN::SizeC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___sub__" "', argument " "2"" of type '" "RavlN::SizeC""'");
    } else {
      RavlN::SizeC * temp = reinterpret_cast< RavlN::SizeC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->operator -(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___iadd____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::SizeC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___iadd__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SizeC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___iadd__" "', argument " "2"" of type '" "RavlN::SizeC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___iadd__" "', argument " "2"" of type '" "RavlN::SizeC""'");
    } else {
      RavlN::SizeC * temp = reinterpret_cast< RavlN::SizeC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->operator +=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___isub____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::SizeC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___isub__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SizeC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___isub__" "', argument " "2"" of type '" "RavlN::SizeC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___isub__" "', argument " "2"" of type '" "RavlN::SizeC""'");
    } else {
      RavlN::SizeC * temp = reinterpret_cast< RavlN::SizeC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->operator -=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_ClipBy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_ClipBy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_ClipBy" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_ClipBy" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_ClipBy" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (RavlN::IndexRangeC *) &(arg1)->ClipBy((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Clip__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Clip",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Clip" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Clip" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Clip" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (RavlN::IndexRangeC *) &((RavlN::IndexRangeC const *)arg1)->Clip((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Clip__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Clip",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Clip" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Clip" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Clip" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = ((RavlN::IndexRangeC const *)arg1)->Clip((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Clip(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC_Clip__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC_Clip__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'IndexRangeC_Clip'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Clip(RavlN::IndexRangeC const *,RavlN::IndexRangeC const &)\n"
    "    Clip(RavlN::IndexRangeC const *,RavlN::IndexC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_FirstHalf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_FirstHalf",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_FirstHalf" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = ((RavlN::IndexRangeC const *)arg1)->FirstHalf();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_FirstHalfD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_FirstHalfD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_FirstHalfD" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = ((RavlN::IndexRangeC const *)arg1)->FirstHalfD();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Enlarge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Enlarge",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Enlarge" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Enlarge" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Enlarge" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->Enlarge(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Expand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Expand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Expand" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Expand" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Expand" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->Expand(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Shrink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Shrink",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Shrink" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Shrink" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Shrink" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlN::IndexRangeC const *)arg1)->Shrink(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_ShrinkHigh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_ShrinkHigh",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_ShrinkHigh" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_ShrinkHigh" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_ShrinkHigh" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->ShrinkHigh(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Swap" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Swap" "', argument " "2"" of type '" "RavlN::IndexRangeC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Swap" "', argument " "2"" of type '" "RavlN::IndexRangeC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (RavlN::IndexRangeC *) &(arg1)->Swap(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Involve__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Involve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Involve" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Involve" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Involve" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::IndexRangeC *) &(arg1)->Involve(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Involve__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_Involve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Involve" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC_Involve" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC_Involve" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (RavlN::IndexRangeC *) &(arg1)->Involve((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Involve(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC_Involve__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC_Involve__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'IndexRangeC_Involve'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Involve(RavlN::IndexRangeC *,RavlN::IndexC)\n"
    "    Involve(RavlN::IndexRangeC *,RavlN::IndexRangeC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___iadd____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___iadd__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___iadd__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___iadd__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (arg1)->operator +=((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SizeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___iadd____SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___iadd____SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC___iadd____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'IndexRangeC___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::IndexRangeC *,RavlN::IndexC)\n"
    "    operator +=(RavlN::IndexRangeC *,RavlN::IntT)\n"
    "    operator +=(RavlN::IndexRangeC *,RavlN::UIntT)\n"
    "    operator +=(RavlN::IndexRangeC *,RavlN::SizeC)\n"
    "    operator +=(RavlN::IndexRangeC *,RavlN::IndexRangeC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___isub____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___isub__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___isub__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___isub__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = (arg1)->operator -=((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SizeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___isub____SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___isub____SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC___isub____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'IndexRangeC___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::IndexRangeC *,RavlN::IndexC)\n"
    "    operator -=(RavlN::IndexRangeC *,RavlN::IntT)\n"
    "    operator -=(RavlN::IndexRangeC *,RavlN::UIntT)\n"
    "    operator -=(RavlN::IndexRangeC *,RavlN::SizeC)\n"
    "    operator -=(RavlN::IndexRangeC *,RavlN::IndexRangeC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___add____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___add__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___add__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___add__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = ((RavlN::IndexRangeC const *)arg1)->operator +((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SizeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___add____SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___add____SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC___add____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___sub____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IndexRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___sub__" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRangeC___sub__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRangeC___sub__" "', argument " "2"" of type '" "RavlN::IndexRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRangeC * >(argp2);
  result = ((RavlN::IndexRangeC const *)arg1)->operator -((RavlN::IndexRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SizeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___sub____SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IndexRangeC___sub____SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC___sub____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IndexRangeC___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_AlignWithin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRangeC_AlignWithin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_AlignWithin" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRangeC_AlignWithin" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  result = ((RavlN::IndexRangeC const *)arg1)->AlignWithin(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC_Hash" "', argument " "1"" of type '" "RavlN::IndexRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = ((RavlN::IndexRangeC const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___str__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (char *)RavlN_IndexRangeC___str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___nonzero__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (bool)RavlN_IndexRangeC___nonzero__(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRangeC___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRangeC___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRangeC___len__" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  result = (int)RavlN_IndexRangeC___len__(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IndexRangeC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRangeC *arg1 = (RavlN::IndexRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_IndexRangeC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IndexRangeC" "', argument " "1"" of type '" "RavlN::IndexRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRangeC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IndexRangeC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__IndexRangeC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Index2dC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Index2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Index2dC")) SWIG_fail;
  result = (RavlN::Index2dC *)new RavlN::Index2dC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Index2dC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  RavlN::IntT arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Index2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Index2dC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Index2dC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Index2dC" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  result = (RavlN::Index2dC *)new RavlN::Index2dC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Index2dC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexC arg1 ;
  RavlN::IndexC arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Index2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Index2dC",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Index2dC" "', argument " "1"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Index2dC" "', argument " "1"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Index2dC" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Index2dC" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlN::Index2dC *)new RavlN::Index2dC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Index2dC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Index2dC__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Index2dC__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Index2dC__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Index2dC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Index2dC()\n"
    "    RavlN::Index2dC(RavlN::IntT,RavlN::IntT)\n"
    "    RavlN::Index2dC(RavlN::IndexC,RavlN::IndexC)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Index2dC_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Index2dC *arg1 = (RavlN::Index2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Index2dC_Row",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Index2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Index2dC_Row" "', argument " "1"" of type '" "RavlN::Index2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Index2dC * >(argp1);
  result = ((RavlN::Index2dC const *)arg1)->Row();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Index2dC_Col(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Index2dC *arg1 = (RavlN::Index2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Index2dC_Col",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Index2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Index2dC_Col" "', argument " "1"" of type '" "RavlN::Index2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Index2dC * >(argp1);
  result = ((RavlN::Index2dC const *)arg1)->Col();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Index2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Index2dC *arg1 = (RavlN::Index2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Index2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Index2dC" "', argument " "1"" of type '" "RavlN::Index2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Index2dC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Index2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__Index2dC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_IndexRange2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_IndexRange2dC")) SWIG_fail;
  result = (RavlN::IndexRange2dC *)new RavlN::IndexRange2dC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_TRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_TRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_TRow" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->TRow();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_BRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_BRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_BRow" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->BRow();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_LCol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_LCol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_LCol" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->LCol();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_RCol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_RCol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_RCol" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->RCol();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_TopLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Index2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_TopLeft",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_TopLeft" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->TopLeft();
  resultobj = SWIG_NewPointerObj((new RavlN::Index2dC(static_cast< const RavlN::Index2dC& >(result))), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_TopRight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Index2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_TopRight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_TopRight" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->TopRight();
  resultobj = SWIG_NewPointerObj((new RavlN::Index2dC(static_cast< const RavlN::Index2dC& >(result))), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_BottomLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Index2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_BottomLeft",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_BottomLeft" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->BottomLeft();
  resultobj = SWIG_NewPointerObj((new RavlN::Index2dC(static_cast< const RavlN::Index2dC& >(result))), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_BottomRight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Index2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_BottomRight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_BottomRight" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->BottomRight();
  resultobj = SWIG_NewPointerObj((new RavlN::Index2dC(static_cast< const RavlN::Index2dC& >(result))), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_Center(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Index2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_Center",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_Center" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->Center();
  resultobj = SWIG_NewPointerObj((new RavlN::Index2dC(static_cast< const RavlN::Index2dC& >(result))), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_Rows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_Rows",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_Rows" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = (RavlN::IntT)((RavlN::IndexRange2dC const *)arg1)->Rows();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_Cols(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_Cols",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_Cols" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = (RavlN::IntT)((RavlN::IndexRange2dC const *)arg1)->Cols();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_Area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_Area",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_Area" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = ((RavlN::IndexRange2dC const *)arg1)->Area();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  RavlN::Index2dC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRange2dC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_Contains" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRange2dC_Contains" "', argument " "2"" of type '" "RavlN::Index2dC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRange2dC_Contains" "', argument " "2"" of type '" "RavlN::Index2dC""'");
    } else {
      RavlN::Index2dC * temp = reinterpret_cast< RavlN::Index2dC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)((RavlN::IndexRange2dC const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_Expand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  RavlN::IntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRange2dC_Expand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_Expand" "', argument " "1"" of type '" "RavlN::IndexRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IndexRange2dC_Expand" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  result = ((RavlN::IndexRange2dC const *)arg1)->Expand(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRange2dC(static_cast< const RavlN::IndexRange2dC& >(result))), SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IndexRange2dC_ClipBy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  RavlN::IndexRange2dC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IndexRange2dC_ClipBy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IndexRange2dC_ClipBy" "', argument " "1"" of type '" "RavlN::IndexRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IndexRange2dC_ClipBy" "', argument " "2"" of type '" "RavlN::IndexRange2dC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IndexRange2dC_ClipBy" "', argument " "2"" of type '" "RavlN::IndexRange2dC""'");
    } else {
      RavlN::IndexRange2dC * temp = reinterpret_cast< RavlN::IndexRange2dC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->ClipBy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IndexRange2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_IndexRange2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IndexRange2dC" "', argument " "1"" of type '" "RavlN::IndexRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IndexRange2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Array2dByteC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Array2dByteC")) SWIG_fail;
  result = (RavlN::Array2dC< RavlN::ByteT > *)new RavlN::Array2dC< RavlN::ByteT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Array2dByteC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Array2dC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Array2dByteC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Array2dByteC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Array2dByteC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::Array2dC< RavlN::ByteT > *)new RavlN::Array2dC< RavlN::ByteT >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Array2dByteC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Array2dC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Array2dByteC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Array2dByteC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Array2dByteC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = (RavlN::Array2dC< RavlN::ByteT > *)new RavlN::Array2dC< RavlN::ByteT >((RavlN::IndexRange2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Array2dByteC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Array2dByteC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Array2dByteC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Array2dByteC__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Array2dByteC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Array2dC< RavlN::ByteT >()\n"
    "    RavlN::Array2dC< RavlN::ByteT >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::Array2dC< RavlN::ByteT >(RavlN::IndexRange2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dByteC_Frame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = (RavlN::Array2dC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Array2dByteC_Frame",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dByteC_Frame" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  result = (arg1)->Frame();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRange2dC(static_cast< const RavlN::IndexRange2dC& >(result))), SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dByteC_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = (RavlN::Array2dC< RavlN::ByteT > *) 0 ;
  unsigned char *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Array2dByteC_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dByteC_Fill" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Array2dByteC_Fill" "', argument " "2"" of type '" "unsigned char""'");
  } 
  temp2 = static_cast< unsigned char >(val2);
  arg2 = &temp2;
  (arg1)->Fill((unsigned char const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dByteC_Stride(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = (RavlN::Array2dC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Array2dByteC_Stride",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dByteC_Stride" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  result = (RavlN::IntT)((RavlN::Array2dC< RavlN::ByteT > const *)arg1)->Stride();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dByteC_Access__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = (RavlN::Array2dC< RavlN::ByteT > *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Array2dByteC_Access",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dByteC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Array2dByteC_Access" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Array2dByteC_Access" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  result = (unsigned char *) &RavlN_Array2dC_Sl_RavlN_ByteT_Sg__Access__SWIG_0(arg1,(RavlN::Index2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dByteC_Access__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = (RavlN::Array2dC< RavlN::ByteT > *) 0 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Array2dByteC_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dByteC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Array2dByteC_Access" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Array2dByteC_Access" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  result = (unsigned char *) &RavlN_Array2dC_Sl_RavlN_ByteT_Sg__Access__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dByteC_Access__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = (RavlN::Array2dC< RavlN::ByteT > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::IndexC arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Array2dByteC_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dByteC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Array2dByteC_Access" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Array2dByteC_Access" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Array2dByteC_Access" "', argument " "3"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Array2dByteC_Access" "', argument " "3"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (unsigned char *) &RavlN_Array2dC_Sl_RavlN_ByteT_Sg__Access__SWIG_2(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dByteC_Access(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Index2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Array2dByteC_Access__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__IndexC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Array2dByteC_Access__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Array2dByteC_Access__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Array2dByteC_Access'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Access(RavlN::Array2dC< RavlN::ByteT > *,RavlN::Index2dC const &)\n"
    "    Access(RavlN::Array2dC< RavlN::ByteT > *,RavlN::IntT,RavlN::IntT)\n"
    "    Access(RavlN::Array2dC< RavlN::ByteT > *,RavlN::IndexC,RavlN::IndexC)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Array2dByteC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = (RavlN::Array2dC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Array2dByteC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Array2dByteC" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Array2dByteC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Array2dRealC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Array2dRealC")) SWIG_fail;
  result = (RavlN::Array2dC< RavlN::RealT > *)new RavlN::Array2dC< RavlN::RealT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Array2dRealC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Array2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Array2dRealC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Array2dRealC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Array2dRealC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::Array2dC< RavlN::RealT > *)new RavlN::Array2dC< RavlN::RealT >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Array2dRealC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Array2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Array2dRealC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Array2dRealC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Array2dRealC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = (RavlN::Array2dC< RavlN::RealT > *)new RavlN::Array2dC< RavlN::RealT >((RavlN::IndexRange2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Array2dRealC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Array2dRealC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Array2dRealC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Array2dRealC__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Array2dRealC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Array2dC< RavlN::RealT >()\n"
    "    RavlN::Array2dC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::Array2dC< RavlN::RealT >(RavlN::IndexRange2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dRealC_Frame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::RealT > *arg1 = (RavlN::Array2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Array2dRealC_Frame",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dRealC_Frame" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::RealT > * >(argp1);
  result = (arg1)->Frame();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRange2dC(static_cast< const RavlN::IndexRange2dC& >(result))), SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dRealC_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::RealT > *arg1 = (RavlN::Array2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Array2dRealC_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dRealC_Fill" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Array2dRealC_Fill" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  (arg1)->Fill((double const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dRealC_Stride(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::RealT > *arg1 = (RavlN::Array2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Array2dRealC_Stride",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dRealC_Stride" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::RealT > * >(argp1);
  result = (RavlN::IntT)((RavlN::Array2dC< RavlN::RealT > const *)arg1)->Stride();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dRealC_Access__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::RealT > *arg1 = (RavlN::Array2dC< RavlN::RealT > *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Array2dRealC_Access",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dRealC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Array2dRealC_Access" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Array2dRealC_Access" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  result = (double *) &RavlN_Array2dC_Sl_RavlN_RealT_Sg__Access__SWIG_0(arg1,(RavlN::Index2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dRealC_Access__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::RealT > *arg1 = (RavlN::Array2dC< RavlN::RealT > *) 0 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Array2dRealC_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dRealC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Array2dRealC_Access" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Array2dRealC_Access" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  result = (double *) &RavlN_Array2dC_Sl_RavlN_RealT_Sg__Access__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dRealC_Access__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::RealT > *arg1 = (RavlN::Array2dC< RavlN::RealT > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::IndexC arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Array2dRealC_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Array2dRealC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::RealT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Array2dRealC_Access" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Array2dRealC_Access" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Array2dRealC_Access" "', argument " "3"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Array2dRealC_Access" "', argument " "3"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (double *) &RavlN_Array2dC_Sl_RavlN_RealT_Sg__Access__SWIG_2(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Array2dRealC_Access(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Index2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Array2dRealC_Access__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__IndexC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Array2dRealC_Access__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Array2dRealC_Access__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Array2dRealC_Access'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Access(RavlN::Array2dC< RavlN::RealT > *,RavlN::Index2dC const &)\n"
    "    Access(RavlN::Array2dC< RavlN::RealT > *,RavlN::IntT,RavlN::IntT)\n"
    "    Access(RavlN::Array2dC< RavlN::RealT > *,RavlN::IndexC,RavlN::IndexC)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Array2dRealC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::RealT > *arg1 = (RavlN::Array2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Array2dRealC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Array2dRealC" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::RealT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Array2dRealC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__Array2dCT_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_StringC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_StringC")) SWIG_fail;
  result = (RavlN::StringC *)new RavlN::StringC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__StringC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::StringC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_StringC",&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StringC" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (RavlN::StringC *)new RavlN::StringC((char const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__StringC, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_StringC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_StringC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_StringC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::StringC()\n"
    "    RavlN::StringC(char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringC_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringC_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__StringC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringC_IsEmpty" "', argument " "1"" of type '" "RavlN::StringC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::StringC * >(argp1);
  result = (bool)((RavlN::StringC const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringC_chars(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringC_chars",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__StringC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringC_chars" "', argument " "1"" of type '" "RavlN::StringC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::StringC * >(argp1);
  result = (char *)((RavlN::StringC const *)arg1)->chars();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__StringC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringC_Size" "', argument " "1"" of type '" "RavlN::StringC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::StringC * >(argp1);
  result = ((RavlN::StringC const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__StringC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringC___str__" "', argument " "1"" of type '" "RavlN::StringC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::StringC * >(argp1);
  result = (char *)RavlN_StringC___str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StringC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_StringC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__StringC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StringC" "', argument " "1"" of type '" "RavlN::StringC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::StringC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StringC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__StringC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PrintIOFormats__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PrintIOFormats",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PrintIOFormats" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PrintIOFormats" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  RavlN::PrintIOFormats(*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PrintIOFormats__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!PyArg_ParseTuple(args,(char *)":PrintIOFormats")) SWIG_fail;
  RavlN::PrintIOFormats();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PrintIOFormats(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_PrintIOFormats__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PrintIOFormats__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'PrintIOFormats'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::PrintIOFormats(std::ostream &)\n"
    "    RavlN::PrintIOFormats()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PrintIOConversions__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PrintIOConversions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PrintIOConversions" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PrintIOConversions" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  RavlN::PrintIOConversions(*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PrintIOConversions__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!PyArg_ParseTuple(args,(char *)":PrintIOConversions")) SWIG_fail;
  RavlN::PrintIOConversions();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PrintIOConversions(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_PrintIOConversions__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PrintIOConversions__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'PrintIOConversions'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::PrintIOConversions(std::ostream &)\n"
    "    RavlN::PrintIOConversions()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PrintIOClassTypes__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PrintIOClassTypes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PrintIOClassTypes" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PrintIOClassTypes" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  RavlN::PrintIOClassTypes(*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PrintIOClassTypes__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!PyArg_ParseTuple(args,(char *)":PrintIOClassTypes")) SWIG_fail;
  RavlN::PrintIOClassTypes();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PrintIOClassTypes(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_PrintIOClassTypes__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PrintIOClassTypes__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'PrintIOClassTypes'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::PrintIOClassTypes(std::ostream &)\n"
    "    RavlN::PrintIOClassTypes()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRangeC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_RealRangeC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RealRangeC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  result = (RavlN::RealRangeC *)new RavlN::RealRangeC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRangeC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RealRangeC")) SWIG_fail;
  result = (RavlN::RealRangeC *)new RavlN::RealRangeC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRangeC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RealRangeC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RealRangeC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RealRangeC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::RealRangeC *)new RavlN::RealRangeC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRangeC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_RealRangeC__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_RealRangeC__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_RealRangeC__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_RealRangeC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::RealRangeC(RavlN::RealT)\n"
    "    RavlN::RealRangeC()\n"
    "    RavlN::RealRangeC(RavlN::RealT,RavlN::RealT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Size" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRangeC const *)arg1)->Size();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Range",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Range" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (RavlN::RealRangeC *) &((RavlN::RealRangeC const *)arg1)->Range();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Min__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Min",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Min" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (RavlN::RealT *) &((RavlN::RealRangeC const *)arg1)->Min();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Max__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Max",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Max" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (RavlN::RealT *) &((RavlN::RealRangeC const *)arg1)->Max();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Min__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Min",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Min" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (RavlN::RealT *) &(arg1)->Min();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Min(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRangeC_Min__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRangeC_Min__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRangeC_Min'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Min(RavlN::RealRangeC const *)\n"
    "    Min(RavlN::RealRangeC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Max__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Max",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Max" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (RavlN::RealT *) &(arg1)->Max();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Max(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRangeC_Max__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRangeC_Max__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRangeC_Max'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Max(RavlN::RealRangeC const *)\n"
    "    Max(RavlN::RealRangeC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Center(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Center",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Center" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRangeC const *)arg1)->Center();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_CenterD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_CenterD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_CenterD" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRangeC const *)arg1)->CenterD();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Percentage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Percentage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Percentage" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_Percentage" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::RealT)((RavlN::RealRangeC const *)arg1)->Percentage(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_IsEmpty" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (bool)((RavlN::RealRangeC const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_IsValid" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = (bool)((RavlN::RealRangeC const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Contains__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Contains" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_Contains" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (bool)((RavlN::RealRangeC const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Contains__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Contains" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRangeC_Contains" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRangeC_Contains" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (bool)((RavlN::RealRangeC const *)arg1)->Contains((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Contains(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__RealRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_RealRangeC_Contains__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_RealRangeC_Contains__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRangeC_Contains'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Contains(RavlN::RealRangeC const *,RavlN::RealT)\n"
    "    Contains(RavlN::RealRangeC const *,RavlN::RealRangeC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC___eq__" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRangeC___eq__" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRangeC___eq__" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (bool)((RavlN::RealRangeC const *)arg1)->operator ==((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC___ne__" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRangeC___ne__" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRangeC___ne__" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (bool)((RavlN::RealRangeC const *)arg1)->operator !=((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_In(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_In",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_In" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRangeC_In" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRangeC_In" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (bool)((RavlN::RealRangeC const *)arg1)->In((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_IsOverlapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_IsOverlapping",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_IsOverlapping" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRangeC_IsOverlapping" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRangeC_IsOverlapping" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (bool)((RavlN::RealRangeC const *)arg1)->IsOverlapping((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_SetOrigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_SetOrigin",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_SetOrigin" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_SetOrigin" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::RealRangeC *) &(arg1)->SetOrigin(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC___iadd__" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC___iadd__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::RealRangeC *) &(arg1)->operator +=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC___isub__" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC___isub__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::RealRangeC *) &(arg1)->operator -=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC___add__" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC___add__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::RealRangeC const *)arg1)->operator +(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC___sub__" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC___sub__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::RealRangeC const *)arg1)->operator -(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_ClipBy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_ClipBy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_ClipBy" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRangeC_ClipBy" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRangeC_ClipBy" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (RavlN::RealRangeC *) &(arg1)->ClipBy((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Clip(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Clip",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Clip" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_Clip" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::RealT)(arg1)->Clip((RavlN::RealT const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_FirstHalf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_FirstHalf",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_FirstHalf" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = ((RavlN::RealRangeC const *)arg1)->FirstHalf();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_FirstHalfD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRangeC_FirstHalfD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_FirstHalfD" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  result = ((RavlN::RealRangeC const *)arg1)->FirstHalfD();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Enlarge(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Enlarge",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Enlarge" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_Enlarge" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::RealRangeC const *)arg1)->Enlarge(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Expand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Expand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Expand" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_Expand" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::RealRangeC const *)arg1)->Expand(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Shrink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Shrink",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Shrink" "', argument " "1"" of type '" "RavlN::RealRangeC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_Shrink" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::RealRangeC const *)arg1)->Shrink(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_ShrinkHigh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_ShrinkHigh",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_ShrinkHigh" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_ShrinkHigh" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::RealRangeC *) &(arg1)->ShrinkHigh(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Swap" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRangeC_Swap" "', argument " "2"" of type '" "RavlN::RealRangeC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRangeC_Swap" "', argument " "2"" of type '" "RavlN::RealRangeC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (RavlN::RealRangeC *) &(arg1)->Swap(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Involve__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Involve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Involve" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRangeC_Involve" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::RealRangeC *) &(arg1)->Involve(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Involve__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRangeC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Involve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRangeC_Involve" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRangeC_Involve" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRangeC_Involve" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (RavlN::RealRangeC *) &(arg1)->Involve((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRangeC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRangeC_Involve(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__RealRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_RealRangeC_Involve__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_RealRangeC_Involve__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRangeC_Involve'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Involve(RavlN::RealRangeC *,RavlN::RealT)\n"
    "    Involve(RavlN::RealRangeC *,RavlN::RealRangeC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RealRangeC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RealRangeC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RealRangeC" "', argument " "1"" of type '" "RavlN::RealRangeC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RealRangeC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__RealRangeC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RealRange2dC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RealRange2dC")) SWIG_fail;
  result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRange2dC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRange2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RealRange2dC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RealRange2dC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RealRange2dC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRange2dC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRangeC *arg1 = 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRange2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RealRange2dC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RealRange2dC" "', argument " "1"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RealRange2dC" "', argument " "1"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRangeC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RealRange2dC" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RealRange2dC" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC((RavlN::RealRangeC const &)*arg1,(RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRange2dC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRange2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_RealRange2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__RealRange2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RealRange2dC" "', argument " "1"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RealRange2dC" "', argument " "1"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC((RavlN::RealRange2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRange2dC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  RavlN::RealT arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::RealRange2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_RealRange2dC",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RealRange2dC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RealRange2dC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RealRange2dC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_RealRange2dC" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRange2dC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_RealRange2dC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_RealRange2dC__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__RealRangeC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__RealRangeC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_RealRange2dC__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_RealRange2dC__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_RealRange2dC__SWIG_4(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_RealRange2dC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::RealRange2dC()\n"
    "    RavlN::RealRange2dC(RavlN::RealT,RavlN::RealT)\n"
    "    RavlN::RealRange2dC(RavlN::RealRangeC const &,RavlN::RealRangeC const &)\n"
    "    RavlN::RealRange2dC(RavlN::RealRange2dC const &)\n"
    "    RavlN::RealRange2dC(RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_TRow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_TRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_TRow" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->TRow();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_LCol__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_LCol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_LCol" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->LCol();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_BRow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_BRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_BRow" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->BRow();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_RCol__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_RCol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_RCol" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->RCol();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_TRow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_TRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_TRow" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)(arg1)->TRow();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_TRow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRange2dC_TRow__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRange2dC_TRow__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRange2dC_TRow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TRow(RavlN::RealRange2dC const *)\n"
    "    TRow(RavlN::RealRange2dC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_LCol__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_LCol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_LCol" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)(arg1)->LCol();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_LCol(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRange2dC_LCol__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRange2dC_LCol__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRange2dC_LCol'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    LCol(RavlN::RealRange2dC const *)\n"
    "    LCol(RavlN::RealRange2dC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_BRow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_BRow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_BRow" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)(arg1)->BRow();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_BRow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRange2dC_BRow__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRange2dC_BRow__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRange2dC_BRow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    BRow(RavlN::RealRange2dC const *)\n"
    "    BRow(RavlN::RealRange2dC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_RCol__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_RCol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_RCol" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)(arg1)->RCol();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_RCol(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRange2dC_RCol__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_RealRange2dC_RCol__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRange2dC_RCol'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RCol(RavlN::RealRange2dC const *)\n"
    "    RCol(RavlN::RealRange2dC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Rows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Rows",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Rows" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->Rows();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Cols(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Cols",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Cols" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->Cols();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Area",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Area" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->Area();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Dilate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Dilate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Dilate" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = ((RavlN::RealRange2dC const *)arg1)->Dilate();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRange2dC(static_cast< const RavlN::RealRange2dC& >(result))), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Erode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Erode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Erode" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = ((RavlN::RealRange2dC const *)arg1)->Erode();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRange2dC(static_cast< const RavlN::RealRange2dC& >(result))), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Expand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_Expand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Expand" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRange2dC_Expand" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (arg1)->Expand(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::RealRange2dC(static_cast< const RavlN::RealRange2dC& >(result))), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Shrink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_Shrink",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Shrink" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRange2dC_Shrink" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::RealRange2dC const *)arg1)->Shrink(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::RealRange2dC(static_cast< const RavlN::RealRange2dC& >(result))), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_ClipBy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  RavlN::RealRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealRange2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_ClipBy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_ClipBy" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRange2dC_ClipBy" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRange2dC_ClipBy" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRange2dC * >(argp2);
  result = (RavlN::RealRange2dC *) &(arg1)->ClipBy((RavlN::RealRange2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  RavlN::RealRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Contains" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRange2dC_Contains" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRange2dC_Contains" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRange2dC * >(argp2);
  result = (bool)((RavlN::RealRange2dC const *)arg1)->Contains((RavlN::RealRange2dC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_RowRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_RowRange",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_RowRange" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (arg1)->RowRange();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_ColRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_ColRange",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_ColRange" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (arg1)->ColRange();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Range1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Range1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Range1" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (arg1)->Range1();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Range2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Range2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Range2" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (arg1)->Range2();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRangeC(static_cast< const RavlN::RealRangeC& >(result))), SWIGTYPE_p_RavlN__RealRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_Involve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  RavlN::RealRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_Involve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_Involve" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRange2dC_Involve" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRange2dC_Involve" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRange2dC * >(argp2);
  (arg1)->Involve((RavlN::RealRange2dC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_IsValid" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  result = (bool)((RavlN::RealRange2dC const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  RavlN::RealRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC___eq__" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRange2dC___eq__" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRange2dC___eq__" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRange2dC * >(argp2);
  result = (bool)((RavlN::RealRange2dC const *)arg1)->operator ==((RavlN::RealRange2dC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  RavlN::RealRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC___ne__" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRange2dC___ne__" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRange2dC___ne__" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRange2dC * >(argp2);
  result = (bool)((RavlN::RealRange2dC const *)arg1)->operator !=((RavlN::RealRange2dC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRange2dC_IsOverlapping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  RavlN::RealRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_IsOverlapping",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRange2dC_IsOverlapping" "', argument " "1"" of type '" "RavlN::RealRange2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRange2dC_IsOverlapping" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRange2dC_IsOverlapping" "', argument " "2"" of type '" "RavlN::RealRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRange2dC * >(argp2);
  result = (bool)((RavlN::RealRange2dC const *)arg1)->IsOverlapping((RavlN::RealRange2dC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RealRange2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RealRange2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RealRange2dC" "', argument " "1"" of type '" "RavlN::RealRange2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::RealRange2dC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RealRange2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__RealRange2dC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PointSet2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::PointSet2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PointSet2dC")) SWIG_fail;
  result = (RavlN::PointSet2dC *)new RavlN::PointSet2dC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__PointSet2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointSet2dC_Centroid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::PointSet2dC *arg1 = (RavlN::PointSet2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointSet2dC_Centroid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__PointSet2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointSet2dC_Centroid" "', argument " "1"" of type '" "RavlN::PointSet2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::PointSet2dC * >(argp1);
  result = ((RavlN::PointSet2dC const *)arg1)->Centroid();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointSet2dC_BoundingRectangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::PointSet2dC *arg1 = (RavlN::PointSet2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointSet2dC_BoundingRectangle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__PointSet2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointSet2dC_BoundingRectangle" "', argument " "1"" of type '" "RavlN::PointSet2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::PointSet2dC * >(argp1);
  result = ((RavlN::PointSet2dC const *)arg1)->BoundingRectangle();
  resultobj = SWIG_NewPointerObj((new RavlN::RealRange2dC(static_cast< const RavlN::RealRange2dC& >(result))), SWIGTYPE_p_RavlN__RealRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PointSet2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::PointSet2dC *arg1 = (RavlN::PointSet2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PointSet2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__PointSet2dC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PointSet2dC" "', argument " "1"" of type '" "RavlN::PointSet2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::PointSet2dC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PointSet2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__PointSet2dC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Polygon2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Polygon2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Polygon2dC")) SWIG_fail;
  result = (RavlN::Polygon2dC *)new RavlN::Polygon2dC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Polygon2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon2dC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Polygon2dC *arg1 = (RavlN::Polygon2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon2dC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Polygon2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon2dC_Size" "', argument " "1"" of type '" "RavlN::Polygon2dC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Polygon2dC * >(argp1);
  result = ((RavlN::Polygon2dC const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon2dC_InsLast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Polygon2dC *arg1 = (RavlN::Polygon2dC *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Polygon2dC_InsLast",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Polygon2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon2dC_InsLast" "', argument " "1"" of type '" "RavlN::Polygon2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Polygon2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Polygon2dC_InsLast" "', argument " "2"" of type '" "RavlN::Point2dC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Polygon2dC_InsLast" "', argument " "2"" of type '" "RavlN::Point2dC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  (arg1)->InsLast(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Polygon2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Polygon2dC *arg1 = (RavlN::Polygon2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Polygon2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Polygon2dC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Polygon2dC" "', argument " "1"" of type '" "RavlN::Polygon2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Polygon2dC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Polygon2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__Polygon2dC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ByteRGBArray2dC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ByteRGBArray2dC")) SWIG_fail;
  result = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *)new RavlN::Array2dC< RavlImageN::ByteRGBValueC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ByteRGBArray2dC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ByteRGBArray2dC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ByteRGBArray2dC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ByteRGBArray2dC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *)new RavlN::Array2dC< RavlImageN::ByteRGBValueC >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ByteRGBArray2dC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ByteRGBArray2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ByteRGBArray2dC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ByteRGBArray2dC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *)new RavlN::Array2dC< RavlImageN::ByteRGBValueC >((RavlN::IndexRange2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ByteRGBArray2dC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ByteRGBArray2dC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ByteRGBArray2dC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ByteRGBArray2dC__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ByteRGBArray2dC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Array2dC< RavlImageN::ByteRGBValueC >()\n"
    "    RavlN::Array2dC< RavlImageN::ByteRGBValueC >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::Array2dC< RavlImageN::ByteRGBValueC >(RavlN::IndexRange2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBArray2dC_Frame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ByteRGBArray2dC_Frame",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBArray2dC_Frame" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  result = (arg1)->Frame();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRange2dC(static_cast< const RavlN::IndexRange2dC& >(result))), SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBArray2dC_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *) 0 ;
  RavlImageN::ByteRGBValueC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ByteRGBArray2dC_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBArray2dC_Fill" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ByteRGBArray2dC_Fill" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ByteRGBArray2dC_Fill" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp2);
  (arg1)->Fill((RavlImageN::ByteRGBValueC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBArray2dC_Stride(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ByteRGBArray2dC_Stride",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBArray2dC_Stride" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  result = (RavlN::IntT)((RavlN::Array2dC< RavlImageN::ByteRGBValueC > const *)arg1)->Stride();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBArray2dC_Access__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlImageN::ByteRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ByteRGBArray2dC_Access",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBArray2dC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ByteRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ByteRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  result = (RavlImageN::ByteRGBValueC *) &RavlN_Array2dC_Sl_RavlImageN_ByteRGBValueC_Sg__Access__SWIG_0(arg1,(RavlN::Index2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBArray2dC_Access__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *) 0 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlImageN::ByteRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ByteRGBArray2dC_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBArray2dC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ByteRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ByteRGBArray2dC_Access" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  result = (RavlImageN::ByteRGBValueC *) &RavlN_Array2dC_Sl_RavlImageN_ByteRGBValueC_Sg__Access__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBArray2dC_Access__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::IndexC arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlImageN::ByteRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ByteRGBArray2dC_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBArray2dC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ByteRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ByteRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ByteRGBArray2dC_Access" "', argument " "3"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ByteRGBArray2dC_Access" "', argument " "3"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (RavlImageN::ByteRGBValueC *) &RavlN_Array2dC_Sl_RavlImageN_ByteRGBValueC_Sg__Access__SWIG_2(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBArray2dC_Access(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Index2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ByteRGBArray2dC_Access__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__IndexC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ByteRGBArray2dC_Access__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ByteRGBArray2dC_Access__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'ByteRGBArray2dC_Access'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Access(RavlN::Array2dC< RavlImageN::ByteRGBValueC > *,RavlN::Index2dC const &)\n"
    "    Access(RavlN::Array2dC< RavlImageN::ByteRGBValueC > *,RavlN::IntT,RavlN::IntT)\n"
    "    Access(RavlN::Array2dC< RavlImageN::ByteRGBValueC > *,RavlN::IndexC,RavlN::IndexC)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ByteRGBArray2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ByteRGBArray2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ByteRGBArray2dC" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ByteRGBArray2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RealRGBArray2dC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RealRGBArray2dC")) SWIG_fail;
  result = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *)new RavlN::Array2dC< RavlImageN::RealRGBValueC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRGBArray2dC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RealRGBArray2dC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RealRGBArray2dC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RealRGBArray2dC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *)new RavlN::Array2dC< RavlImageN::RealRGBValueC >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRGBArray2dC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_RealRGBArray2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RealRGBArray2dC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RealRGBArray2dC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *)new RavlN::Array2dC< RavlImageN::RealRGBValueC >((RavlN::IndexRange2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RealRGBArray2dC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_RealRGBArray2dC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_RealRGBArray2dC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_RealRGBArray2dC__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_RealRGBArray2dC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Array2dC< RavlImageN::RealRGBValueC >()\n"
    "    RavlN::Array2dC< RavlImageN::RealRGBValueC >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::Array2dC< RavlImageN::RealRGBValueC >(RavlN::IndexRange2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBArray2dC_Frame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRGBArray2dC_Frame",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBArray2dC_Frame" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::RealRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::RealRGBValueC > * >(argp1);
  result = (arg1)->Frame();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRange2dC(static_cast< const RavlN::IndexRange2dC& >(result))), SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBArray2dC_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *) 0 ;
  RavlImageN::RealRGBValueC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRGBArray2dC_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBArray2dC_Fill" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::RealRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::RealRGBValueC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__RealRGBValueC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRGBArray2dC_Fill" "', argument " "2"" of type '" "RavlImageN::RealRGBValueC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRGBArray2dC_Fill" "', argument " "2"" of type '" "RavlImageN::RealRGBValueC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::RealRGBValueC * >(argp2);
  (arg1)->Fill((RavlImageN::RealRGBValueC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBArray2dC_Stride(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRGBArray2dC_Stride",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBArray2dC_Stride" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::RealRGBValueC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::RealRGBValueC > * >(argp1);
  result = (RavlN::IntT)((RavlN::Array2dC< RavlImageN::RealRGBValueC > const *)arg1)->Stride();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBArray2dC_Access__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlImageN::RealRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RealRGBArray2dC_Access",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBArray2dC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::RealRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::RealRGBValueC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  result = (RavlImageN::RealRGBValueC *) &RavlN_Array2dC_Sl_RavlImageN_RealRGBValueC_Sg__Access__SWIG_0(arg1,(RavlN::Index2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__RealRGBValueC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBArray2dC_Access__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *) 0 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlImageN::RealRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RealRGBArray2dC_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBArray2dC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::RealRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::RealRGBValueC > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RealRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RealRGBArray2dC_Access" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  result = (RavlImageN::RealRGBValueC *) &RavlN_Array2dC_Sl_RavlImageN_RealRGBValueC_Sg__Access__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__RealRGBValueC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBArray2dC_Access__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::IndexC arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlImageN::RealRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RealRGBArray2dC_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBArray2dC_Access" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::RealRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::RealRGBValueC > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RealRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRGBArray2dC_Access" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "RealRGBArray2dC_Access" "', argument " "3"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RealRGBArray2dC_Access" "', argument " "3"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (RavlImageN::RealRGBValueC *) &RavlN_Array2dC_Sl_RavlImageN_RealRGBValueC_Sg__Access__SWIG_2(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__RealRGBValueC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBArray2dC_Access(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Index2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_RealRGBArray2dC_Access__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__IndexC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_RealRGBArray2dC_Access__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RealRGBArray2dC_Access__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RealRGBArray2dC_Access'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Access(RavlN::Array2dC< RavlImageN::RealRGBValueC > *,RavlN::Index2dC const &)\n"
    "    Access(RavlN::Array2dC< RavlImageN::RealRGBValueC > *,RavlN::IntT,RavlN::IntT)\n"
    "    Access(RavlN::Array2dC< RavlImageN::RealRGBValueC > *,RavlN::IndexC,RavlN::IndexC)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RealRGBArray2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC< RavlImageN::RealRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RealRGBArray2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RealRGBArray2dC" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::RealRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::RealRGBValueC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RealRGBArray2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RealRGBValueC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlImageN::RealRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_RealRGBValueC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RealRGBValueC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RealRGBValueC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RealRGBValueC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  result = (RavlImageN::RealRGBValueC *)new RavlImageN::RealRGBValueC(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__RealRGBValueC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBValueC_Red(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::RealRGBValueC *arg1 = (RavlImageN::RealRGBValueC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRGBValueC_Red",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__RealRGBValueC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBValueC_Red" "', argument " "1"" of type '" "RavlImageN::RealRGBValueC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::RealRGBValueC * >(argp1);
  result = (RavlN::RealT)((RavlImageN::RealRGBValueC const *)arg1)->Red();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBValueC_Green(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::RealRGBValueC *arg1 = (RavlImageN::RealRGBValueC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRGBValueC_Green",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__RealRGBValueC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBValueC_Green" "', argument " "1"" of type '" "RavlImageN::RealRGBValueC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::RealRGBValueC * >(argp1);
  result = (RavlN::RealT)((RavlImageN::RealRGBValueC const *)arg1)->Green();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RealRGBValueC_Blue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::RealRGBValueC *arg1 = (RavlImageN::RealRGBValueC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RealRGBValueC_Blue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__RealRGBValueC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RealRGBValueC_Blue" "', argument " "1"" of type '" "RavlImageN::RealRGBValueC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::RealRGBValueC * >(argp1);
  result = (RavlN::RealT)((RavlImageN::RealRGBValueC const *)arg1)->Blue();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RealRGBValueC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::RealRGBValueC *arg1 = (RavlImageN::RealRGBValueC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RealRGBValueC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__RealRGBValueC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RealRGBValueC" "', argument " "1"" of type '" "RavlImageN::RealRGBValueC *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::RealRGBValueC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RealRGBValueC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlImageN__RealRGBValueC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ByteRGBValueC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlImageN::ByteRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ByteRGBValueC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ByteRGBValueC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ByteRGBValueC" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ByteRGBValueC" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  result = (RavlImageN::ByteRGBValueC *)new RavlImageN::ByteRGBValueC(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ByteRGBValueC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBValueC_Red(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ByteRGBValueC *arg1 = (RavlImageN::ByteRGBValueC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ByteRGBValueC_Red",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBValueC_Red" "', argument " "1"" of type '" "RavlImageN::ByteRGBValueC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp1);
  result = (RavlN::IntT)((RavlImageN::ByteRGBValueC const *)arg1)->Red();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBValueC_Green(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ByteRGBValueC *arg1 = (RavlImageN::ByteRGBValueC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ByteRGBValueC_Green",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBValueC_Green" "', argument " "1"" of type '" "RavlImageN::ByteRGBValueC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp1);
  result = (RavlN::IntT)((RavlImageN::ByteRGBValueC const *)arg1)->Green();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ByteRGBValueC_Blue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ByteRGBValueC *arg1 = (RavlImageN::ByteRGBValueC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ByteRGBValueC_Blue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ByteRGBValueC_Blue" "', argument " "1"" of type '" "RavlImageN::ByteRGBValueC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp1);
  result = (RavlN::IntT)((RavlImageN::ByteRGBValueC const *)arg1)->Blue();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ByteRGBValueC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ByteRGBValueC *arg1 = (RavlImageN::ByteRGBValueC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ByteRGBValueC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ByteRGBValueC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ByteRGBValueC" "', argument " "1"" of type '" "RavlImageN::ByteRGBValueC *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ByteRGBValueC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlImageN__ByteRGBValueC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ImageByteRGBValueC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ImageByteRGBValueC")) SWIG_fail;
  result = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC< RavlImageN::ByteRGBValueC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteRGBValueC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ImageByteRGBValueC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ImageByteRGBValueC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ImageByteRGBValueC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC< RavlImageN::ByteRGBValueC >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteRGBValueC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ImageByteRGBValueC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ImageByteRGBValueC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ImageByteRGBValueC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC< RavlImageN::ByteRGBValueC >((RavlN::IndexRange2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteRGBValueC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlImageN::ByteRGBValueC *arg3 = (RavlImageN::ByteRGBValueC *) 0 ;
  bool arg4 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ImageByteRGBValueC",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ImageByteRGBValueC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ImageByteRGBValueC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ImageByteRGBValueC" "', argument " "3"" of type '" "RavlImageN::ByteRGBValueC *""'"); 
  }
  arg3 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ImageByteRGBValueC" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC< RavlImageN::ByteRGBValueC >(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteRGBValueC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlImageN::ByteRGBValueC *arg3 = (RavlImageN::ByteRGBValueC *) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ImageByteRGBValueC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ImageByteRGBValueC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ImageByteRGBValueC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ImageByteRGBValueC" "', argument " "3"" of type '" "RavlImageN::ByteRGBValueC *""'"); 
  }
  arg3 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp3);
  result = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC< RavlImageN::ByteRGBValueC >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteRGBValueC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg1 = 0 ;
  RavlN::IndexRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ImageByteRGBValueC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ImageByteRGBValueC" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ImageByteRGBValueC" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ImageByteRGBValueC" "', argument " "2"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ImageByteRGBValueC" "', argument " "2"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRange2dC * >(argp2);
  result = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC< RavlImageN::ByteRGBValueC >((RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const &)*arg1,(RavlN::IndexRange2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteRGBValueC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ImageByteRGBValueC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ImageByteRGBValueC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ImageByteRGBValueC__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ImageByteRGBValueC__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ImageByteRGBValueC__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_ImageByteRGBValueC__SWIG_3(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ImageByteRGBValueC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlImageN::ImageC< RavlImageN::ByteRGBValueC >()\n"
    "    RavlImageN::ImageC< RavlImageN::ByteRGBValueC >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlImageN::ImageC< RavlImageN::ByteRGBValueC >(RavlN::IndexRange2dC const &)\n"
    "    RavlImageN::ImageC< RavlImageN::ByteRGBValueC >(RavlN::SizeT,RavlN::SizeT,RavlImageN::ByteRGBValueC *,bool)\n"
    "    RavlImageN::ImageC< RavlImageN::ByteRGBValueC >(RavlN::SizeT,RavlN::SizeT,RavlImageN::ByteRGBValueC *)\n"
    "    RavlImageN::ImageC< RavlImageN::ByteRGBValueC >(RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const &,RavlN::IndexRange2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteRGBValueC_Rows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteRGBValueC_Rows",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteRGBValueC_Rows" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp1);
  result = ((RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const *)arg1)->Rows();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteRGBValueC_Cols(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteRGBValueC_Cols",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteRGBValueC_Cols" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp1);
  result = ((RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const *)arg1)->Cols();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteRGBValueC_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlImageN::ByteRGBValueC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ImageByteRGBValueC_Row",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteRGBValueC_Row" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageByteRGBValueC_Row" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageByteRGBValueC_Row" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (RavlImageN::ByteRGBValueC *)(arg1)->Row(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteRGBValueC_Stride(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteRGBValueC_Stride",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteRGBValueC_Stride" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp1);
  result = (RavlN::IntT)((RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const *)arg1)->Stride();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteRGBValueC_DataAsString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteRGBValueC_DataAsString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteRGBValueC_DataAsString" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp1);
  result = (PyObject *)RavlImageN_ImageC_Sl_RavlImageN_ByteRGBValueC_Sg__DataAsString(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteRGBValueC_DataAsStringTriple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteRGBValueC_DataAsStringTriple",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteRGBValueC_DataAsStringTriple" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp1);
  result = (PyObject *)RavlImageN_ImageC_Sl_RavlImageN_ByteRGBValueC_Sg__DataAsStringTriple(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ImageByteRGBValueC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ImageByteRGBValueC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ImageByteRGBValueC" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ImageByteRGBValueC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ImageByteC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ImageByteC")) SWIG_fail;
  result = (RavlImageN::ImageC< RavlN::ByteT > *)new RavlImageN::ImageC< RavlN::ByteT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlImageN::ImageC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ImageByteC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ImageByteC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ImageByteC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlImageN::ImageC< RavlN::ByteT > *)new RavlImageN::ImageC< RavlN::ByteT >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexRange2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlImageN::ImageC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ImageByteC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ImageByteC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ImageByteC" "', argument " "1"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexRange2dC * >(argp1);
  result = (RavlImageN::ImageC< RavlN::ByteT > *)new RavlImageN::ImageC< RavlN::ByteT >((RavlN::IndexRange2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  bool arg4 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlImageN::ImageC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_ImageByteC",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ImageByteC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ImageByteC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ImageByteC" "', argument " "3"" of type '" "unsigned char *""'"); 
  }
  arg3 = reinterpret_cast< unsigned char * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ImageByteC" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (RavlImageN::ImageC< RavlN::ByteT > *)new RavlImageN::ImageC< RavlN::ByteT >(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlImageN::ImageC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ImageByteC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ImageByteC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ImageByteC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ImageByteC" "', argument " "3"" of type '" "unsigned char *""'"); 
  }
  arg3 = reinterpret_cast< unsigned char * >(argp3);
  result = (RavlImageN::ImageC< RavlN::ByteT > *)new RavlImageN::ImageC< RavlN::ByteT >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< unsigned char > *arg1 = 0 ;
  RavlN::IndexRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlImageN::ImageC< RavlN::ByteT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ImageByteC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ImageByteC" "', argument " "1"" of type '" "RavlImageN::ImageC< unsigned char > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ImageByteC" "', argument " "1"" of type '" "RavlImageN::ImageC< unsigned char > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< unsigned char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ImageByteC" "', argument " "2"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ImageByteC" "', argument " "2"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRange2dC * >(argp2);
  result = (RavlImageN::ImageC< RavlN::ByteT > *)new RavlImageN::ImageC< RavlN::ByteT >((RavlImageN::ImageC< unsigned char > const &)*arg1,(RavlN::IndexRange2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ImageByteC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ImageByteC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ImageByteC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ImageByteC__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ImageByteC__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_char, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_ImageByteC__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_char, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_ImageByteC__SWIG_3(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ImageByteC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlImageN::ImageC< RavlN::ByteT >()\n"
    "    RavlImageN::ImageC< RavlN::ByteT >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlImageN::ImageC< RavlN::ByteT >(RavlN::IndexRange2dC const &)\n"
    "    RavlImageN::ImageC< RavlN::ByteT >(RavlN::SizeT,RavlN::SizeT,unsigned char *,bool)\n"
    "    RavlImageN::ImageC< RavlN::ByteT >(RavlN::SizeT,RavlN::SizeT,unsigned char *)\n"
    "    RavlImageN::ImageC< RavlN::ByteT >(RavlImageN::ImageC< unsigned char > const &,RavlN::IndexRange2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteC_Rows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlN::ByteT > *arg1 = (RavlImageN::ImageC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteC_Rows",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteC_Rows" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlN::ByteT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp1);
  result = ((RavlImageN::ImageC< RavlN::ByteT > const *)arg1)->Rows();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteC_Cols(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlN::ByteT > *arg1 = (RavlImageN::ImageC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteC_Cols",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteC_Cols" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlN::ByteT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp1);
  result = ((RavlImageN::ImageC< RavlN::ByteT > const *)arg1)->Cols();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteC_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlN::ByteT > *arg1 = (RavlImageN::ImageC< RavlN::ByteT > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ImageByteC_Row",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteC_Row" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ImageByteC_Row" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ImageByteC_Row" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (unsigned char *)(arg1)->Row(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteC_Stride(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlN::ByteT > *arg1 = (RavlImageN::ImageC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteC_Stride",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteC_Stride" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlN::ByteT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp1);
  result = (RavlN::IntT)((RavlImageN::ImageC< RavlN::ByteT > const *)arg1)->Stride();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteC_DataAsString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlN::ByteT > *arg1 = (RavlImageN::ImageC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteC_DataAsString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteC_DataAsString" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp1);
  result = (PyObject *)RavlImageN_ImageC_Sl_RavlN_ByteT_Sg__DataAsString(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImageByteC_DataAsStringTriple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlN::ByteT > *arg1 = (RavlImageN::ImageC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImageByteC_DataAsStringTriple",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImageByteC_DataAsStringTriple" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp1);
  result = (PyObject *)RavlImageN_ImageC_Sl_RavlN_ByteT_Sg__DataAsStringTriple(arg1);
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ImageByteC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::ImageC< RavlN::ByteT > *arg1 = (RavlImageN::ImageC< RavlN::ByteT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ImageByteC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ImageByteC" "', argument " "1"" of type '" "RavlImageN::ImageC< RavlN::ByteT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ImageByteC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DrawPolygon__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = 0 ;
  RavlImageN::ByteRGBValueC *arg2 = 0 ;
  RavlN::Polygon2dC *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:DrawPolygon",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DrawPolygon" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DrawPolygon" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Polygon2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DrawPolygon" "', argument " "3"" of type '" "RavlN::Polygon2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "3"" of type '" "RavlN::Polygon2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Polygon2dC * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DrawPolygon" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  RavlImageN::DrawPolygon(*arg1,(RavlImageN::ByteRGBValueC const &)*arg2,(RavlN::Polygon2dC const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DrawPolygon__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlImageN::ByteRGBValueC > *arg1 = 0 ;
  RavlImageN::ByteRGBValueC *arg2 = 0 ;
  RavlN::Polygon2dC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DrawPolygon",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DrawPolygon" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "1"" of type '" "RavlN::Array2dC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlImageN::ByteRGBValueC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DrawPolygon" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Polygon2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DrawPolygon" "', argument " "3"" of type '" "RavlN::Polygon2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "3"" of type '" "RavlN::Polygon2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Polygon2dC * >(argp3);
  RavlImageN::DrawPolygon(*arg1,(RavlImageN::ByteRGBValueC const &)*arg2,(RavlN::Polygon2dC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DrawPolygon__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = 0 ;
  RavlN::ByteT *arg2 = 0 ;
  RavlN::Polygon2dC *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::ByteT temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:DrawPolygon",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DrawPolygon" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DrawPolygon" "', argument " "2"" of type '" "RavlN::ByteT""'");
  } 
  temp2 = static_cast< RavlN::ByteT >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Polygon2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DrawPolygon" "', argument " "3"" of type '" "RavlN::Polygon2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "3"" of type '" "RavlN::Polygon2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Polygon2dC * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DrawPolygon" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  RavlImageN::DrawPolygon(*arg1,(unsigned char const &)*arg2,(RavlN::Polygon2dC const &)*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DrawPolygon__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Array2dC< RavlN::ByteT > *arg1 = 0 ;
  RavlN::ByteT *arg2 = 0 ;
  RavlN::Polygon2dC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::ByteT temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DrawPolygon",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DrawPolygon" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "1"" of type '" "RavlN::Array2dC< RavlN::ByteT > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Array2dC< RavlN::ByteT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DrawPolygon" "', argument " "2"" of type '" "RavlN::ByteT""'");
  } 
  temp2 = static_cast< RavlN::ByteT >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Polygon2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DrawPolygon" "', argument " "3"" of type '" "RavlN::Polygon2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawPolygon" "', argument " "3"" of type '" "RavlN::Polygon2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Polygon2dC * >(argp3);
  RavlImageN::DrawPolygon(*arg1,(unsigned char const &)*arg2,(RavlN::Polygon2dC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DrawPolygon(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__Polygon2dC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DrawPolygon__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__Polygon2dC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DrawPolygon__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_unsigned_char_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_char(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__Polygon2dC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_DrawPolygon__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__Polygon2dC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_DrawPolygon__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DrawPolygon'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlImageN::DrawPolygon(RavlN::Array2dC< RavlImageN::ByteRGBValueC > &,RavlImageN::ByteRGBValueC const &,RavlN::Polygon2dC const &,bool)\n"
    "    RavlImageN::DrawPolygon(RavlN::Array2dC< RavlImageN::ByteRGBValueC > &,RavlImageN::ByteRGBValueC const &,RavlN::Polygon2dC const &)\n"
    "    RavlImageN::DrawPolygon(RavlN::Array2dC< RavlN::ByteT > &,RavlN::ByteT const &,RavlN::Polygon2dC const &,bool)\n"
    "    RavlImageN::DrawPolygon(RavlN::Array2dC< RavlN::ByteT > &,RavlN::ByteT const &,RavlN::Polygon2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FontC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_FontC")) SWIG_fail;
  result = (RavlImageN::FontC *)new RavlImageN::FontC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlImageN__FontC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FontC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FontC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__FontC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FontC_IsValid" "', argument " "1"" of type '" "RavlImageN::FontC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  result = (bool)((RavlImageN::FontC const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FontC_Center(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
  RavlN::StringC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Index2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FontC_Center",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__FontC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FontC_Center" "', argument " "1"" of type '" "RavlImageN::FontC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__StringC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FontC_Center" "', argument " "2"" of type '" "RavlN::StringC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FontC_Center" "', argument " "2"" of type '" "RavlN::StringC""'");
    } else {
      RavlN::StringC * temp = reinterpret_cast< RavlN::StringC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlImageN::FontC const *)arg1)->Center(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::Index2dC(static_cast< const RavlN::Index2dC& >(result))), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FontC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
  RavlN::StringC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Index2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FontC_Size",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__FontC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FontC_Size" "', argument " "1"" of type '" "RavlImageN::FontC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__StringC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FontC_Size" "', argument " "2"" of type '" "RavlN::StringC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FontC_Size" "', argument " "2"" of type '" "RavlN::StringC""'");
    } else {
      RavlN::StringC * temp = reinterpret_cast< RavlN::StringC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((RavlImageN::FontC const *)arg1)->Size(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::Index2dC(static_cast< const RavlN::Index2dC& >(result))), SWIGTYPE_p_RavlN__Index2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FontC_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FontC_Count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__FontC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FontC_Count" "', argument " "1"" of type '" "RavlImageN::FontC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  result = (RavlN::UIntT)((RavlImageN::FontC const *)arg1)->Count();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FontC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_FontC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlImageN__FontC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FontC" "', argument " "1"" of type '" "RavlImageN::FontC *""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FontC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlImageN__FontC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DefaultFont(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC result;
  
  if (!PyArg_ParseTuple(args,(char *)":DefaultFont")) SWIG_fail;
  result = RavlImageN::DefaultFont();
  resultobj = SWIG_NewPointerObj((new RavlImageN::FontC(static_cast< const RavlImageN::FontC& >(result))), SWIGTYPE_p_RavlImageN__FontC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DrawTextByteRGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = 0 ;
  RavlImageN::ByteRGBValueC *arg2 = 0 ;
  RavlN::Index2dC *arg3 = 0 ;
  RavlN::StringC *arg4 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:DrawTextByteRGB",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlImageN__FontC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DrawTextByteRGB" "', argument " "1"" of type '" "RavlImageN::FontC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextByteRGB" "', argument " "1"" of type '" "RavlImageN::FontC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DrawTextByteRGB" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextByteRGB" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DrawTextByteRGB" "', argument " "3"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextByteRGB" "', argument " "3"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Index2dC * >(argp3);
  {
    arg4 = new RavlN::StringC(PyString_AsString(obj3));
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DrawTextByteRGB" "', argument " "5"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextByteRGB" "', argument " "5"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  arg5 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp5);
  RavlImageN::SWIGTEMPLATEDISAMBIGUATOR DrawText< RavlImageN::ByteRGBValueC >((RavlImageN::FontC const &)*arg1,(RavlImageN::ByteRGBValueC const &)*arg2,(RavlN::Index2dC const &)*arg3,(RavlN::StringC const &)*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DrawTextByte(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = 0 ;
  unsigned char *arg2 = 0 ;
  RavlN::Index2dC *arg3 = 0 ;
  RavlN::StringC *arg4 = 0 ;
  RavlImageN::ImageC< unsigned char > *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:DrawTextByte",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlImageN__FontC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DrawTextByte" "', argument " "1"" of type '" "RavlImageN::FontC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextByte" "', argument " "1"" of type '" "RavlImageN::FontC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DrawTextByte" "', argument " "2"" of type '" "unsigned char""'");
  } 
  temp2 = static_cast< unsigned char >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DrawTextByte" "', argument " "3"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextByte" "', argument " "3"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Index2dC * >(argp3);
  {
    arg4 = new RavlN::StringC(PyString_AsString(obj3));
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DrawTextByte" "', argument " "5"" of type '" "RavlImageN::ImageC< unsigned char > &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextByte" "', argument " "5"" of type '" "RavlImageN::ImageC< unsigned char > &""'"); 
  }
  arg5 = reinterpret_cast< RavlImageN::ImageC< unsigned char > * >(argp5);
  RavlImageN::SWIGTEMPLATEDISAMBIGUATOR DrawText< RavlN::ByteT >((RavlImageN::FontC const &)*arg1,(unsigned char const &)*arg2,(RavlN::Index2dC const &)*arg3,(RavlN::StringC const &)*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DrawTextCenterByteRGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = 0 ;
  RavlImageN::ByteRGBValueC *arg2 = 0 ;
  RavlN::Index2dC *arg3 = 0 ;
  RavlN::StringC *arg4 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:DrawTextCenterByteRGB",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlImageN__FontC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DrawTextCenterByteRGB" "', argument " "1"" of type '" "RavlImageN::FontC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextCenterByteRGB" "', argument " "1"" of type '" "RavlImageN::FontC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DrawTextCenterByteRGB" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextCenterByteRGB" "', argument " "2"" of type '" "RavlImageN::ByteRGBValueC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ByteRGBValueC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DrawTextCenterByteRGB" "', argument " "3"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextCenterByteRGB" "', argument " "3"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Index2dC * >(argp3);
  {
    arg4 = new RavlN::StringC(PyString_AsString(obj3));
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DrawTextCenterByteRGB" "', argument " "5"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextCenterByteRGB" "', argument " "5"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  arg5 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp5);
  RavlImageN::SWIGTEMPLATEDISAMBIGUATOR DrawTextCenter< RavlImageN::ByteRGBValueC >((RavlImageN::FontC const &)*arg1,(RavlImageN::ByteRGBValueC const &)*arg2,(RavlN::Index2dC const &)*arg3,(RavlN::StringC const &)*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DrawTextCenterByte(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlImageN::FontC *arg1 = 0 ;
  unsigned char *arg2 = 0 ;
  RavlN::Index2dC *arg3 = 0 ;
  RavlN::StringC *arg4 = 0 ;
  RavlImageN::ImageC< unsigned char > *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char temp2 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:DrawTextCenterByte",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlImageN__FontC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DrawTextCenterByte" "', argument " "1"" of type '" "RavlImageN::FontC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextCenterByte" "', argument " "1"" of type '" "RavlImageN::FontC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlImageN::FontC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DrawTextCenterByte" "', argument " "2"" of type '" "unsigned char""'");
  } 
  temp2 = static_cast< unsigned char >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DrawTextCenterByte" "', argument " "3"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextCenterByte" "', argument " "3"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Index2dC * >(argp3);
  {
    arg4 = new RavlN::StringC(PyString_AsString(obj3));
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DrawTextCenterByte" "', argument " "5"" of type '" "RavlImageN::ImageC< unsigned char > &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DrawTextCenterByte" "', argument " "5"" of type '" "RavlImageN::ImageC< unsigned char > &""'"); 
  }
  arg5 = reinterpret_cast< RavlImageN::ImageC< unsigned char > * >(argp5);
  RavlImageN::SWIGTEMPLATEDISAMBIGUATOR DrawTextCenter< RavlN::ByteT >((RavlImageN::FontC const &)*arg1,(unsigned char const &)*arg2,(RavlN::Index2dC const &)*arg3,(RavlN::StringC const &)*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dUInt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SArray1dUInt")) SWIG_fail;
  result = (RavlN::SArray1dC< RavlN::UIntT > *)new RavlN::SArray1dC< RavlN::UIntT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dUInt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dUInt",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SArray1dUInt" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SArray1dC< RavlN::UIntT > *)new RavlN::SArray1dC< RavlN::UIntT >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::UIntT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_ConstructAligned",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SArray1dUInt_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt_ConstructAligned" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = RavlN::SArray1dC< RavlN::UIntT >::SWIGTEMPLATEDISAMBIGUATOR ConstructAligned(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dUInt__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< unsigned int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dUInt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::UIntT > *)new RavlN::SArray1dC< RavlN::UIntT >((RavlN::SArray1dC< unsigned int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dUInt__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< unsigned int > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dUInt",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dUInt" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dUInt" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray1dC< RavlN::UIntT > *)new RavlN::SArray1dC< RavlN::UIntT >((RavlN::SArray1dC< unsigned int > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dUInt__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< unsigned int > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray1dUInt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dUInt" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::SArray1dC< RavlN::UIntT > *)new RavlN::SArray1dC< RavlN::UIntT >((RavlN::SArray1dC< unsigned int > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dUInt__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ;
  RavlN::SizeT arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dUInt",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dUInt" "', argument " "1"" of type '" "unsigned int *""'"); 
  }
  arg1 = reinterpret_cast< unsigned int * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dUInt" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dUInt" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (RavlN::SArray1dC< RavlN::UIntT > *)new RavlN::SArray1dC< RavlN::UIntT >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dUInt(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SArray1dUInt__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SArray1dUInt__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SArray1dUInt__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SArray1dUInt__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dUInt__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_int, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dUInt__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SArray1dUInt'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SArray1dC< RavlN::UIntT >()\n"
    "    RavlN::SArray1dC< RavlN::UIntT >(RavlN::SizeT const)\n"
    "    RavlN::SArray1dC< RavlN::UIntT >(RavlN::SArray1dC< unsigned int > const &)\n"
    "    RavlN::SArray1dC< RavlN::UIntT >(RavlN::SArray1dC< unsigned int > const &,RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::UIntT >(RavlN::SArray1dC< unsigned int > const &,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::UIntT >(unsigned int *,RavlN::SizeT const,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_IsEmpty" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = (bool)((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Contains" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Fill" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt_Fill" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  (arg1)->Fill((unsigned int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Reverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_Reverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Reverse" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  (arg1)->Reverse();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator +((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator -((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator *((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator /((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___mul__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator *((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___div__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator /((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___add__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator +((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___sub__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator -((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->operator +=((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->operator -=((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->operator *=((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->operator /=((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___iadd__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->operator +=((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dUInt___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::SArray1dC< RavlN::UIntT > *,RavlN::SArray1dC< unsigned int > const &)\n"
    "    operator +=(RavlN::SArray1dC< RavlN::UIntT > *,unsigned int const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___isub__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->operator -=((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dUInt___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::SArray1dC< RavlN::UIntT > *,RavlN::SArray1dC< unsigned int > const &)\n"
    "    operator -=(RavlN::SArray1dC< RavlN::UIntT > *,unsigned int const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___imul__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->operator *=((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dUInt___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::SArray1dC< RavlN::UIntT > *,RavlN::SArray1dC< unsigned int > const &)\n"
    "    operator *=(RavlN::SArray1dC< RavlN::UIntT > *,unsigned int const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___idiv__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->operator /=((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dUInt___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::SArray1dC< RavlN::UIntT > *,RavlN::SArray1dC< unsigned int > const &)\n"
    "    operator /=(RavlN::SArray1dC< RavlN::UIntT > *,unsigned int const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Sum" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->Sum();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_SumOfSqr" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->SumOfSqr();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_SArray1d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = (RavlN::SArray1dC< unsigned int > *) &((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_SArray1d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_SArray1d(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dUInt_SArray1d__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dUInt_SArray1d__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dUInt_SArray1d'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::UIntT > const *)\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::UIntT > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Size" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_Range",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Range" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->Range();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Join__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->Join((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Join__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt_Join" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->Join((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Join(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt_Join__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt_Join__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dUInt_Join'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Join(RavlN::SArray1dC< RavlN::UIntT > const *,RavlN::SArray1dC< unsigned int > const &)\n"
    "    Join(RavlN::SArray1dC< RavlN::UIntT > const *,unsigned int const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->Append((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt_Append" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< unsigned int > *) &(arg1)->Append((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dUInt_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dUInt_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::SArray1dC< RavlN::UIntT > *,RavlN::SArray1dC< unsigned int > const &)\n"
    "    Append(RavlN::SArray1dC< RavlN::UIntT > *,unsigned int const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_From__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_From",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->From(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_From__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dUInt_From",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dUInt_From" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = (arg1)->From(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_From(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dUInt_From__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray1dUInt_From__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dUInt_From'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    From(RavlN::SArray1dC< RavlN::UIntT > *,RavlN::UIntT)\n"
    "    From(RavlN::SArray1dC< RavlN::UIntT > *,RavlN::UIntT,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_After(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_After",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_After" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt_After" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->After(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Before(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt_Before",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Before" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt_Before" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->Before(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< unsigned int >(static_cast< const RavlN::SArray1dC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___eq__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator ==((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  RavlN::SArray1dC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___ne__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dUInt___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dUInt___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->operator !=((RavlN::SArray1dC< unsigned int > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_Hash" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt_DataStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt_DataStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt_DataStart" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = (unsigned int *)((RavlN::SArray1dC< RavlN::UIntT > const *)arg1)->DataStart();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dUInt___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___getitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (unsigned int *) &RavlN_SArray1dC_Sl_RavlN_UIntT_Sg____getitem__((RavlN::SArray1dC< unsigned int > const *)arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  size_t arg2 ;
  unsigned int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int temp3 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dUInt___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___setitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dUInt___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dUInt___setitem__" "', argument " "3"" of type '" "unsigned int""'");
  } 
  temp3 = static_cast< unsigned int >(val3);
  arg3 = &temp3;
  RavlN_SArray1dC_Sl_RavlN_UIntT_Sg____setitem__(arg1,arg2,(unsigned int const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dUInt___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dUInt___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dUInt___str__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = (char *)RavlN_SArray1dC_Sl_RavlN_UIntT_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SArray1dUInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = (RavlN::SArray1dC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SArray1dUInt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SArray1dUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SArray1dUInt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SArray1dReal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SArray1dReal")) SWIG_fail;
  result = (RavlN::SArray1dC< RavlN::RealT > *)new RavlN::SArray1dC< RavlN::RealT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dReal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dReal",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SArray1dReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SArray1dC< RavlN::RealT > *)new RavlN::SArray1dC< RavlN::RealT >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::UIntT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_ConstructAligned",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SArray1dReal_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal_ConstructAligned" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = RavlN::SArray1dC< RavlN::RealT >::SWIGTEMPLATEDISAMBIGUATOR ConstructAligned(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dReal__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< double > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dReal" "', argument " "1"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dReal" "', argument " "1"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::RealT > *)new RavlN::SArray1dC< RavlN::RealT >((RavlN::SArray1dC< double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dReal__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< double > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dReal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dReal" "', argument " "1"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dReal" "', argument " "1"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dReal" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray1dC< RavlN::RealT > *)new RavlN::SArray1dC< RavlN::RealT >((RavlN::SArray1dC< double > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dReal__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< double > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray1dReal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dReal" "', argument " "1"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dReal" "', argument " "1"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::SArray1dC< RavlN::RealT > *)new RavlN::SArray1dC< RavlN::RealT >((RavlN::SArray1dC< double > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dReal__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  RavlN::SizeT arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dReal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dReal" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dReal" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (RavlN::SArray1dC< RavlN::RealT > *)new RavlN::SArray1dC< RavlN::RealT >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dReal(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SArray1dReal__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SArray1dReal__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SArray1dReal__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SArray1dReal__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dReal__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dReal__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SArray1dReal'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SArray1dC< RavlN::RealT >()\n"
    "    RavlN::SArray1dC< RavlN::RealT >(RavlN::SizeT const)\n"
    "    RavlN::SArray1dC< RavlN::RealT >(RavlN::SArray1dC< double > const &)\n"
    "    RavlN::SArray1dC< RavlN::RealT >(RavlN::SArray1dC< double > const &,RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::RealT >(RavlN::SArray1dC< double > const &,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::RealT >(double *,RavlN::SizeT const,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_IsEmpty" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = (bool)((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Contains" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Fill" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal_Fill" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  (arg1)->Fill((double const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Reverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_Reverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Reverse" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  (arg1)->Reverse();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator +((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator -((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator *((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator /((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___mul__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator *((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___div__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator /((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___add__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator +((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___sub__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator -((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = (RavlN::SArray1dC< double > *) &(arg1)->operator +=((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = (RavlN::SArray1dC< double > *) &(arg1)->operator -=((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = (RavlN::SArray1dC< double > *) &(arg1)->operator *=((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = (RavlN::SArray1dC< double > *) &(arg1)->operator /=((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___iadd__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< double > *) &(arg1)->operator +=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dReal___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::SArray1dC< RavlN::RealT > *,RavlN::SArray1dC< double > const &)\n"
    "    operator +=(RavlN::SArray1dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___isub__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< double > *) &(arg1)->operator -=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dReal___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::SArray1dC< RavlN::RealT > *,RavlN::SArray1dC< double > const &)\n"
    "    operator -=(RavlN::SArray1dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___imul__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< double > *) &(arg1)->operator *=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dReal___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::SArray1dC< RavlN::RealT > *,RavlN::SArray1dC< double > const &)\n"
    "    operator *=(RavlN::SArray1dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___idiv__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< double > *) &(arg1)->operator /=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dReal___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::SArray1dC< RavlN::RealT > *,RavlN::SArray1dC< double > const &)\n"
    "    operator /=(RavlN::SArray1dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Sum" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->Sum();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_SumOfSqr" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->SumOfSqr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_SArray1d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = (RavlN::SArray1dC< double > *) &((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_SArray1d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = (RavlN::SArray1dC< double > *) &(arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_SArray1d(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dReal_SArray1d__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dReal_SArray1d__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dReal_SArray1d'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::RealT > const *)\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::RealT > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Size" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_Range",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Range" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->Range();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Join__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->Join((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Join__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal_Join" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->Join((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Join(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal_Join__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal_Join__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dReal_Join'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Join(RavlN::SArray1dC< RavlN::RealT > const *,RavlN::SArray1dC< double > const &)\n"
    "    Join(RavlN::SArray1dC< RavlN::RealT > const *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = (RavlN::SArray1dC< double > *) &(arg1)->Append((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal_Append" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< double > *) &(arg1)->Append((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dReal_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dReal_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::SArray1dC< RavlN::RealT > *,RavlN::SArray1dC< double > const &)\n"
    "    Append(RavlN::SArray1dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_From__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_From",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->From(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_From__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dReal_From",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dReal_From" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = (arg1)->From(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_From(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dReal_From__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray1dReal_From__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dReal_From'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    From(RavlN::SArray1dC< RavlN::RealT > *,RavlN::UIntT)\n"
    "    From(RavlN::SArray1dC< RavlN::RealT > *,RavlN::UIntT,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_After(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_After",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_After" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal_After" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->After(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Before(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal_Before",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Before" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal_Before" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->Before(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___eq__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator ==((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  RavlN::SArray1dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___ne__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dReal___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dReal___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->operator !=((RavlN::SArray1dC< double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_Hash" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal_DataStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal_DataStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal_DataStart" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = (double *)((RavlN::SArray1dC< RavlN::RealT > const *)arg1)->DataStart();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dReal___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___getitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (double *) &RavlN_SArray1dC_Sl_RavlN_RealT_Sg____getitem__((RavlN::SArray1dC< double > const *)arg1,arg2);
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  size_t arg2 ;
  double *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dReal___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___setitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dReal___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dReal___setitem__" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  RavlN_SArray1dC_Sl_RavlN_RealT_Sg____setitem__(arg1,arg2,(double const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dReal___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dReal___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dReal___str__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = (char *)RavlN_SArray1dC_Sl_RavlN_RealT_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SArray1dReal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = (RavlN::SArray1dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SArray1dReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SArray1dReal" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SArray1dReal_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SArray1dFloat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SArray1dFloat")) SWIG_fail;
  result = (RavlN::SArray1dC< RavlN::FloatT > *)new RavlN::SArray1dC< RavlN::FloatT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dFloat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dFloat",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SArray1dFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SArray1dC< RavlN::FloatT > *)new RavlN::SArray1dC< RavlN::FloatT >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::UIntT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_ConstructAligned",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SArray1dFloat_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat_ConstructAligned" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = RavlN::SArray1dC< RavlN::FloatT >::SWIGTEMPLATEDISAMBIGUATOR ConstructAligned(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dFloat__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< float > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dFloat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dFloat" "', argument " "1"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dFloat" "', argument " "1"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::FloatT > *)new RavlN::SArray1dC< RavlN::FloatT >((RavlN::SArray1dC< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dFloat__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< float > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dFloat" "', argument " "1"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dFloat" "', argument " "1"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dFloat" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray1dC< RavlN::FloatT > *)new RavlN::SArray1dC< RavlN::FloatT >((RavlN::SArray1dC< float > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dFloat__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< float > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray1dFloat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dFloat" "', argument " "1"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dFloat" "', argument " "1"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::SArray1dC< RavlN::FloatT > *)new RavlN::SArray1dC< RavlN::FloatT >((RavlN::SArray1dC< float > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dFloat__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  RavlN::SizeT arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dFloat" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dFloat" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (RavlN::SArray1dC< RavlN::FloatT > *)new RavlN::SArray1dC< RavlN::FloatT >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dFloat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SArray1dFloat__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SArray1dFloat__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SArray1dFloat__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SArray1dFloat__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dFloat__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dFloat__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SArray1dFloat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SArray1dC< RavlN::FloatT >()\n"
    "    RavlN::SArray1dC< RavlN::FloatT >(RavlN::SizeT const)\n"
    "    RavlN::SArray1dC< RavlN::FloatT >(RavlN::SArray1dC< float > const &)\n"
    "    RavlN::SArray1dC< RavlN::FloatT >(RavlN::SArray1dC< float > const &,RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::FloatT >(RavlN::SArray1dC< float > const &,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::FloatT >(float *,RavlN::SizeT const,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_IsEmpty" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = (bool)((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Contains" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Fill" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat_Fill" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  (arg1)->Fill((float const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Reverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_Reverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Reverse" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  (arg1)->Reverse();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator +((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator -((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator *((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator /((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___mul__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator *((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___div__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator /((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___add__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator +((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___sub__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator -((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = (RavlN::SArray1dC< float > *) &(arg1)->operator +=((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = (RavlN::SArray1dC< float > *) &(arg1)->operator -=((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = (RavlN::SArray1dC< float > *) &(arg1)->operator *=((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = (RavlN::SArray1dC< float > *) &(arg1)->operator /=((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___iadd__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< float > *) &(arg1)->operator +=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dFloat___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::SArray1dC< RavlN::FloatT > *,RavlN::SArray1dC< float > const &)\n"
    "    operator +=(RavlN::SArray1dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___isub__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< float > *) &(arg1)->operator -=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dFloat___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::SArray1dC< RavlN::FloatT > *,RavlN::SArray1dC< float > const &)\n"
    "    operator -=(RavlN::SArray1dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___imul__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< float > *) &(arg1)->operator *=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dFloat___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::SArray1dC< RavlN::FloatT > *,RavlN::SArray1dC< float > const &)\n"
    "    operator *=(RavlN::SArray1dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< float > *) &(arg1)->operator /=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dFloat___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::SArray1dC< RavlN::FloatT > *,RavlN::SArray1dC< float > const &)\n"
    "    operator /=(RavlN::SArray1dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Sum" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->Sum();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_SumOfSqr" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->SumOfSqr();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_SArray1d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = (RavlN::SArray1dC< float > *) &((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_SArray1d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = (RavlN::SArray1dC< float > *) &(arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_SArray1d(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dFloat_SArray1d__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dFloat_SArray1d__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dFloat_SArray1d'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::FloatT > const *)\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::FloatT > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Size" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_Range",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Range" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->Range();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Join__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->Join((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Join__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat_Join" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->Join((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Join(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat_Join__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat_Join__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dFloat_Join'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Join(RavlN::SArray1dC< RavlN::FloatT > const *,RavlN::SArray1dC< float > const &)\n"
    "    Join(RavlN::SArray1dC< RavlN::FloatT > const *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = (RavlN::SArray1dC< float > *) &(arg1)->Append((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat_Append" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray1dC< float > *) &(arg1)->Append((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dFloat_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dFloat_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::SArray1dC< RavlN::FloatT > *,RavlN::SArray1dC< float > const &)\n"
    "    Append(RavlN::SArray1dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_From__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_From",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->From(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_From__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dFloat_From",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dFloat_From" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = (arg1)->From(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_From(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dFloat_From__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray1dFloat_From__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dFloat_From'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    From(RavlN::SArray1dC< RavlN::FloatT > *,RavlN::UIntT)\n"
    "    From(RavlN::SArray1dC< RavlN::FloatT > *,RavlN::UIntT,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_After(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_After",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_After" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat_After" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->After(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Before(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat_Before",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Before" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat_Before" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->Before(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___eq__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator ==((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray1dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___ne__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dFloat___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dFloat___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->operator !=((RavlN::SArray1dC< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_Hash" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat_DataStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat_DataStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat_DataStart" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = (float *)((RavlN::SArray1dC< RavlN::FloatT > const *)arg1)->DataStart();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dFloat___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___getitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (float *) &RavlN_SArray1dC_Sl_RavlN_FloatT_Sg____getitem__((RavlN::SArray1dC< float > const *)arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  size_t arg2 ;
  float *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  float temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dFloat___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___setitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dFloat___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dFloat___setitem__" "', argument " "3"" of type '" "float""'");
  } 
  temp3 = static_cast< float >(val3);
  arg3 = &temp3;
  RavlN_SArray1dC_Sl_RavlN_FloatT_Sg____setitem__(arg1,arg2,(float const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dFloat___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dFloat___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dFloat___str__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = (char *)RavlN_SArray1dC_Sl_RavlN_FloatT_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SArray1dFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = (RavlN::SArray1dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SArray1dFloat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SArray1dFloat" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SArray1dFloat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SArray1dIndexC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SArray1dIndexC")) SWIG_fail;
  result = (RavlN::SArray1dC< RavlN::IndexC > *)new RavlN::SArray1dC< RavlN::IndexC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dIndexC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dIndexC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SArray1dC< RavlN::IndexC > *)new RavlN::SArray1dC< RavlN::IndexC >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::UIntT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_ConstructAligned",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SArray1dIndexC_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dIndexC_ConstructAligned" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = RavlN::SArray1dC< RavlN::IndexC >::SWIGTEMPLATEDISAMBIGUATOR ConstructAligned(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dIndexC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dIndexC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::IndexC > *)new RavlN::SArray1dC< RavlN::IndexC >((RavlN::SArray1dC< RavlN::IndexC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dIndexC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dIndexC",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dIndexC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dIndexC" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray1dC< RavlN::IndexC > *)new RavlN::SArray1dC< RavlN::IndexC >((RavlN::SArray1dC< RavlN::IndexC > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dIndexC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray1dIndexC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dIndexC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *)new RavlN::SArray1dC< RavlN::IndexC >((RavlN::SArray1dC< RavlN::IndexC > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dIndexC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IndexC *arg1 = (RavlN::IndexC *) 0 ;
  RavlN::SizeT arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dIndexC",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__IndexC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::IndexC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::IndexC * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dIndexC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dIndexC" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (RavlN::SArray1dC< RavlN::IndexC > *)new RavlN::SArray1dC< RavlN::IndexC >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dIndexC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SArray1dIndexC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SArray1dIndexC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SArray1dIndexC__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SArray1dIndexC__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dIndexC__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__IndexC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dIndexC__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SArray1dIndexC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SArray1dC< RavlN::IndexC >()\n"
    "    RavlN::SArray1dC< RavlN::IndexC >(RavlN::SizeT const)\n"
    "    RavlN::SArray1dC< RavlN::IndexC >(RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    RavlN::SArray1dC< RavlN::IndexC >(RavlN::SArray1dC< RavlN::IndexC > const &,RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::IndexC >(RavlN::SArray1dC< RavlN::IndexC > const &,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::IndexC >(RavlN::IndexC *,RavlN::SizeT const,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_IsEmpty" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = (bool)((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Contains" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Fill" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC_Fill" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC_Fill" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  (arg1)->Fill((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Reverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_Reverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Reverse" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  (arg1)->Reverse();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator +((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator -((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator *((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator /((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___mul__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___mul__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator *((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___div__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___div__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator /((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___add__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___add__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator +((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___sub__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___sub__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator -((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->operator +=((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->operator -=((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->operator *=((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->operator /=((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___iadd__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___iadd__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->operator +=((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dIndexC___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    operator +=(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::IndexC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___isub__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___isub__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->operator -=((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dIndexC___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    operator -=(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::IndexC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___imul__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___imul__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->operator *=((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dIndexC___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    operator *=(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::IndexC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___idiv__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___idiv__" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->operator /=((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dIndexC___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    operator /=(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::IndexC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Sum" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->Sum();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_SumOfSqr" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->SumOfSqr();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_SArray1d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_SArray1d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_SArray1d(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dIndexC_SArray1d__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dIndexC_SArray1d__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dIndexC_SArray1d'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::IndexC > const *)\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::IndexC > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Size" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_Range",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Range" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->Range();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Join__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->Join((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Join__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC_Join" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC_Join" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->Join((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Join(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC_Join__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC_Join__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dIndexC_Join'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Join(RavlN::SArray1dC< RavlN::IndexC > const *,RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    Join(RavlN::SArray1dC< RavlN::IndexC > const *,RavlN::IndexC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->Append((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::IndexC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC_Append" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC_Append" "', argument " "2"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::IndexC > *) &(arg1)->Append((RavlN::IndexC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dIndexC_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dIndexC_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    Append(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::IndexC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_From__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_From",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dIndexC_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->From(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_From__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dIndexC_From",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dIndexC_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dIndexC_From" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = (arg1)->From(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_From(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dIndexC_From__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray1dIndexC_From__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dIndexC_From'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    From(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::UIntT)\n"
    "    From(RavlN::SArray1dC< RavlN::IndexC > *,RavlN::UIntT,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_After(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_After",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_After" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dIndexC_After" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->After(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Before(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC_Before",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Before" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dIndexC_Before" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->Before(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::IndexC >(static_cast< const RavlN::SArray1dC< RavlN::IndexC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___eq__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator ==((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___ne__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dIndexC___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->operator !=((RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_Hash" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC_DataStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC_DataStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC_DataStart" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = (RavlN::IndexC *)((RavlN::SArray1dC< RavlN::IndexC > const *)arg1)->DataStart();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dIndexC___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___getitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dIndexC___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (RavlN::IndexC *) &RavlN_SArray1dC_Sl_RavlN_IndexC_Sg____getitem__((RavlN::SArray1dC< RavlN::IndexC > const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__IndexC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  size_t arg2 ;
  RavlN::IndexC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dIndexC___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___setitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dIndexC___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray1dIndexC___setitem__" "', argument " "3"" of type '" "RavlN::IndexC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dIndexC___setitem__" "', argument " "3"" of type '" "RavlN::IndexC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::IndexC * >(argp3);
  RavlN_SArray1dC_Sl_RavlN_IndexC_Sg____setitem__(arg1,arg2,(RavlN::IndexC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dIndexC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dIndexC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dIndexC___str__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  result = (char *)RavlN_SArray1dC_Sl_RavlN_IndexC_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SArray1dIndexC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::IndexC > *arg1 = (RavlN::SArray1dC< RavlN::IndexC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SArray1dIndexC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SArray1dIndexC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::IndexC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SArray1dIndexC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SArray1dPoint2dC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SArray1dPoint2dC")) SWIG_fail;
  result = (RavlN::SArray1dC< RavlN::Point2dC > *)new RavlN::SArray1dC< RavlN::Point2dC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dPoint2dC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dPoint2dC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *)new RavlN::SArray1dC< RavlN::Point2dC >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::UIntT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_ConstructAligned",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SArray1dPoint2dC_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dPoint2dC_ConstructAligned" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = RavlN::SArray1dC< RavlN::Point2dC >::SWIGTEMPLATEDISAMBIGUATOR ConstructAligned(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dPoint2dC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dPoint2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *)new RavlN::SArray1dC< RavlN::Point2dC >((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dPoint2dC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dPoint2dC",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dPoint2dC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dPoint2dC" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *)new RavlN::SArray1dC< RavlN::Point2dC >((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dPoint2dC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray1dPoint2dC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dPoint2dC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *)new RavlN::SArray1dC< RavlN::Point2dC >((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dPoint2dC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Point2dC *arg1 = (RavlN::Point2dC *) 0 ;
  RavlN::SizeT arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dPoint2dC",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Point2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::Point2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Point2dC * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dPoint2dC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dPoint2dC" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *)new RavlN::SArray1dC< RavlN::Point2dC >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dPoint2dC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SArray1dPoint2dC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SArray1dPoint2dC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SArray1dPoint2dC__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SArray1dPoint2dC__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dPoint2dC__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__Point2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dPoint2dC__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SArray1dPoint2dC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SArray1dC< RavlN::Point2dC >()\n"
    "    RavlN::SArray1dC< RavlN::Point2dC >(RavlN::SizeT const)\n"
    "    RavlN::SArray1dC< RavlN::Point2dC >(RavlN::SArray1dC< RavlN::Point2dC > const &)\n"
    "    RavlN::SArray1dC< RavlN::Point2dC >(RavlN::SArray1dC< RavlN::Point2dC > const &,RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::Point2dC >(RavlN::SArray1dC< RavlN::Point2dC > const &,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::Point2dC >(RavlN::Point2dC *,RavlN::SizeT const,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_IsEmpty" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = (bool)((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Contains" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Fill" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC_Fill" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC_Fill" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  (arg1)->Fill((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Reverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_Reverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Reverse" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  (arg1)->Reverse();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator +((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator -((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator *((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator /((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___mul__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___mul__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator *((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___div__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___div__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator /((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___add__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___add__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator +((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___sub__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___sub__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator -((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->operator +=((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->operator -=((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->operator *=((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->operator /=((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___iadd__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___iadd__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->operator +=((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dPoint2dC___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::SArray1dC< RavlN::Point2dC > const &)\n"
    "    operator +=(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::Point2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___isub__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___isub__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->operator -=((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dPoint2dC___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::SArray1dC< RavlN::Point2dC > const &)\n"
    "    operator -=(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::Point2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___imul__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___imul__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->operator *=((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dPoint2dC___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::SArray1dC< RavlN::Point2dC > const &)\n"
    "    operator *=(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::Point2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___idiv__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___idiv__" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->operator /=((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dPoint2dC___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::SArray1dC< RavlN::Point2dC > const &)\n"
    "    operator /=(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::Point2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Sum" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->Sum();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_SumOfSqr" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->SumOfSqr();
  resultobj = SWIG_NewPointerObj((new RavlN::Point2dC(static_cast< const RavlN::Point2dC& >(result))), SWIGTYPE_p_RavlN__Point2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_SArray1d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_SArray1d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_SArray1d(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dPoint2dC_SArray1d__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dPoint2dC_SArray1d__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dPoint2dC_SArray1d'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::Point2dC > const *)\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::Point2dC > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Size" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_Range",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Range" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->Range();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Join__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->Join((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Join__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC_Join" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC_Join" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->Join((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Join(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC_Join__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC_Join__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dPoint2dC_Join'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Join(RavlN::SArray1dC< RavlN::Point2dC > const *,RavlN::SArray1dC< RavlN::Point2dC > const &)\n"
    "    Join(RavlN::SArray1dC< RavlN::Point2dC > const *,RavlN::Point2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->Append((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::Point2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC_Append" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC_Append" "', argument " "2"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Point2dC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::Point2dC > *) &(arg1)->Append((RavlN::Point2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__Point2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dPoint2dC_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dPoint2dC_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::SArray1dC< RavlN::Point2dC > const &)\n"
    "    Append(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::Point2dC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_From__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_From",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dPoint2dC_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->From(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_From__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dPoint2dC_From",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dPoint2dC_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dPoint2dC_From" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = (arg1)->From(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_From(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dPoint2dC_From__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray1dPoint2dC_From__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dPoint2dC_From'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    From(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::UIntT)\n"
    "    From(RavlN::SArray1dC< RavlN::Point2dC > *,RavlN::UIntT,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_After(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_After",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_After" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dPoint2dC_After" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->After(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Before(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC_Before",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Before" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dPoint2dC_Before" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->Before(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::Point2dC >(static_cast< const RavlN::SArray1dC< RavlN::Point2dC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___eq__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator ==((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___ne__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dPoint2dC___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->operator !=((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_Hash" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC_DataStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::Point2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC_DataStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC_DataStart" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = (RavlN::Point2dC *)((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1)->DataStart();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Point2dC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::Point2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dPoint2dC___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___getitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dPoint2dC___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (RavlN::Point2dC *) &RavlN_SArray1dC_Sl_RavlN_Point2dC_Sg____getitem__((RavlN::SArray1dC< RavlN::Point2dC > const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Point2dC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  size_t arg2 ;
  RavlN::Point2dC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dPoint2dC___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___setitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dPoint2dC___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__Point2dC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray1dPoint2dC___setitem__" "', argument " "3"" of type '" "RavlN::Point2dC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dPoint2dC___setitem__" "', argument " "3"" of type '" "RavlN::Point2dC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::Point2dC * >(argp3);
  RavlN_SArray1dC_Sl_RavlN_Point2dC_Sg____setitem__(arg1,arg2,(RavlN::Point2dC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dPoint2dC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dPoint2dC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dPoint2dC___str__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  result = (char *)RavlN_SArray1dC_Sl_RavlN_Point2dC_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SArray1dPoint2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::Point2dC > *arg1 = (RavlN::SArray1dC< RavlN::Point2dC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SArray1dPoint2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SArray1dPoint2dC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SArray1dPoint2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SArray1dVectorC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SArray1dVectorC")) SWIG_fail;
  result = (RavlN::SArray1dC< RavlN::VectorC > *)new RavlN::SArray1dC< RavlN::VectorC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dVectorC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dVectorC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SArray1dC< RavlN::VectorC > *)new RavlN::SArray1dC< RavlN::VectorC >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::UIntT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_ConstructAligned",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SArray1dVectorC_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dVectorC_ConstructAligned" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = RavlN::SArray1dC< RavlN::VectorC >::SWIGTEMPLATEDISAMBIGUATOR ConstructAligned(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dVectorC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray1dVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::VectorC > *)new RavlN::SArray1dC< RavlN::VectorC >((RavlN::SArray1dC< RavlN::VectorC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dVectorC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dVectorC",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dVectorC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dVectorC" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray1dC< RavlN::VectorC > *)new RavlN::SArray1dC< RavlN::VectorC >((RavlN::SArray1dC< RavlN::VectorC > const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dVectorC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray1dVectorC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dVectorC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *)new RavlN::SArray1dC< RavlN::VectorC >((RavlN::SArray1dC< RavlN::VectorC > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dVectorC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::SizeT arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray1dVectorC",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray1dVectorC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray1dVectorC" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (RavlN::SArray1dC< RavlN::VectorC > *)new RavlN::SArray1dC< RavlN::VectorC >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray1dVectorC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SArray1dVectorC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SArray1dVectorC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SArray1dVectorC__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SArray1dVectorC__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dVectorC__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray1dVectorC__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SArray1dVectorC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SArray1dC< RavlN::VectorC >()\n"
    "    RavlN::SArray1dC< RavlN::VectorC >(RavlN::SizeT const)\n"
    "    RavlN::SArray1dC< RavlN::VectorC >(RavlN::SArray1dC< RavlN::VectorC > const &)\n"
    "    RavlN::SArray1dC< RavlN::VectorC >(RavlN::SArray1dC< RavlN::VectorC > const &,RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::VectorC >(RavlN::SArray1dC< RavlN::VectorC > const &,RavlN::SizeT)\n"
    "    RavlN::SArray1dC< RavlN::VectorC >(RavlN::VectorC *,RavlN::SizeT const,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_IsEmpty" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (bool)((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Contains" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC_Contains" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (bool)((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->Contains(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Fill" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC_Fill" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC_Fill" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  (arg1)->Fill((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Reverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_Reverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Reverse" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  (arg1)->Reverse();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___add__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator +((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___sub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator -((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___mul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator *((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___div__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator /((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___mul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___mul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___mul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator *((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___div__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___div__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___div__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator /((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___add__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___add__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___add__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator +((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___sub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___sub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___sub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator -((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___iadd__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->operator +=((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___isub__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->operator -=((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___imul__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->operator *=((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___idiv__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->operator /=((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___iadd__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___iadd__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___iadd__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->operator +=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dVectorC___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::SArray1dC< RavlN::VectorC > const &)\n"
    "    operator +=(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::VectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___isub__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___isub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___isub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->operator -=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dVectorC___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::SArray1dC< RavlN::VectorC > const &)\n"
    "    operator -=(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::VectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___imul__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___imul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___imul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->operator *=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dVectorC___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::SArray1dC< RavlN::VectorC > const &)\n"
    "    operator *=(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::VectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___idiv__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___idiv__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___idiv__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->operator /=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dVectorC___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::SArray1dC< RavlN::VectorC > const &)\n"
    "    operator /=(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::VectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Sum" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->Sum();
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_SumOfSqr" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->SumOfSqr();
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_SArray1d__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_SArray1d__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_SArray1d",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_SArray1d" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->SArray1d();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_SArray1d(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dVectorC_SArray1d__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray1dVectorC_SArray1d__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dVectorC_SArray1d'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::VectorC > const *)\n"
    "    SArray1d(RavlN::SArray1dC< RavlN::VectorC > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Size" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRangeC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_Range",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Range" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->Range();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRangeC(static_cast< const RavlN::IndexRangeC& >(result))), SWIGTYPE_p_RavlN__IndexRangeC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Join__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC_Join" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->Join((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Join__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Join" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC_Join" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC_Join" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->Join((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Join(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC_Join__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC_Join__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dVectorC_Join'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Join(RavlN::SArray1dC< RavlN::VectorC > const *,RavlN::SArray1dC< RavlN::VectorC > const &)\n"
    "    Join(RavlN::SArray1dC< RavlN::VectorC > const *,RavlN::VectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC_Append" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->Append((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Append" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC_Append" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC_Append" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::SArray1dC< RavlN::VectorC > *) &(arg1)->Append((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray1dVectorC_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dVectorC_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::SArray1dC< RavlN::VectorC > const &)\n"
    "    Append(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::VectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_From__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_From",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dVectorC_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->From(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_From__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dVectorC_From",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_From" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dVectorC_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray1dVectorC_From" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = (arg1)->From(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_From(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray1dVectorC_From__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray1dVectorC_From__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray1dVectorC_From'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    From(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::UIntT)\n"
    "    From(RavlN::SArray1dC< RavlN::VectorC > *,RavlN::UIntT,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_After(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_After",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_After" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dVectorC_After" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->After(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Before(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC_Before",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Before" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dVectorC_Before" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->Before(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___eq__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___eq__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator ==((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  RavlN::SArray1dC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___ne__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray1dVectorC___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___ne__" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp2);
  result = (bool)((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->operator !=((RavlN::SArray1dC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_Hash" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = ((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC_DataStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC_DataStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC_DataStart" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (RavlN::VectorC *)((RavlN::SArray1dC< RavlN::VectorC > const *)arg1)->DataStart();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray1dVectorC___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___getitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dVectorC___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (RavlN::VectorC *) &RavlN_SArray1dC_Sl_RavlN_VectorC_Sg____getitem__((RavlN::SArray1dC< RavlN::VectorC > const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  size_t arg2 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray1dVectorC___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___setitem__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray1dVectorC___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray1dVectorC___setitem__" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray1dVectorC___setitem__" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  RavlN_SArray1dC_Sl_RavlN_VectorC_Sg____setitem__(arg1,arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray1dVectorC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray1dVectorC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray1dVectorC___str__" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (char *)RavlN_SArray1dC_Sl_RavlN_VectorC_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SArray1dVectorC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = (RavlN::SArray1dC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SArray1dVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SArray1dVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SArray1dVectorC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SArray2dFloat")) SWIG_fail;
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray2dFloat",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Index2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray2dFloat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Index2dC * >(argp1);
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >((RavlN::Index2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< float > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray2dFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "RavlN::SArray2dC< float > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "RavlN::SArray2dC< float > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dFloat" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< float > *arg1 = 0 ;
  RavlN::IndexRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray2dFloat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "RavlN::SArray2dC< float > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "RavlN::SArray2dC< float > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SArray2dFloat" "', argument " "2"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray2dFloat" "', argument " "2"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRange2dC * >(argp2);
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >(*arg1,(RavlN::IndexRange2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  bool arg4 ;
  bool arg5 ;
  RavlN::IntT arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_SArray2dFloat",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dFloat" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SArray2dFloat" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_SArray2dFloat" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_SArray2dFloat" "', argument " "6"" of type '" "RavlN::IntT""'");
  } 
  arg6 = static_cast< RavlN::IntT >(val6);
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_SArray2dFloat",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dFloat" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SArray2dFloat" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_SArray2dFloat" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_SArray2dFloat",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dFloat" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SArray2dFloat" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray2dC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray2dFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dFloat" "', argument " "1"" of type '" "float *""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dFloat" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray2dC< RavlN::FloatT > *)new RavlN::SArray2dC< RavlN::FloatT >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dFloat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SArray2dFloat__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__Index2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SArray2dFloat__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SArray2dFloat__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SArray2dFloat__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray2dFloat__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray2dFloat__SWIG_8(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_SArray2dFloat__SWIG_7(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_SArray2dFloat__SWIG_6(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_SArray2dFloat__SWIG_5(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SArray2dFloat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SArray2dC< RavlN::FloatT >()\n"
    "    RavlN::SArray2dC< RavlN::FloatT >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray2dC< RavlN::FloatT >(RavlN::Index2dC const &)\n"
    "    RavlN::SArray2dC< RavlN::FloatT >(RavlN::SArray2dC< float > &,RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray2dC< RavlN::FloatT >(RavlN::SArray2dC< float > &,RavlN::IndexRange2dC const &)\n"
    "    RavlN::SArray2dC< RavlN::FloatT >(float *,RavlN::SizeT,RavlN::SizeT,bool,bool,RavlN::IntT)\n"
    "    RavlN::SArray2dC< RavlN::FloatT >(float *,RavlN::SizeT,RavlN::SizeT,bool,bool)\n"
    "    RavlN::SArray2dC< RavlN::FloatT >(float *,RavlN::SizeT,RavlN::SizeT,bool)\n"
    "    RavlN::SArray2dC< RavlN::FloatT >(float *,RavlN::SizeT,RavlN::SizeT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlN::UIntT arg3 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dFloat_ConstructAligned",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SArray2dFloat_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat_ConstructAligned" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray2dFloat_ConstructAligned" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = RavlN::SArray2dC< RavlN::FloatT >::SWIGTEMPLATEDISAMBIGUATOR ConstructAligned(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_Copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Copy" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->Copy();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Size1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_Size1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Size1" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->Size1();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Size2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_Size2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Size2" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->Size2();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Contains" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat_Contains" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_Contains" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  result = (bool)((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->Contains((RavlN::Index2dC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Fill" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat_Fill" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  (arg1)->Fill((float const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Stride(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_Stride",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Stride" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = (RavlN::IntT)((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->Stride();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_IsContinuous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_IsContinuous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_IsContinuous" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = (bool)((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->IsContinuous();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Frame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_Frame",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Frame" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->Frame();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRange2dC(static_cast< const RavlN::IndexRange2dC& >(result))), SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_AsVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat_AsVector",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_AsVector" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat_AsVector" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (arg1)->AsVector(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_AsVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_AsVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_AsVector" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = (arg1)->AsVector();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_AsVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray2dFloat_AsVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat_AsVector__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dFloat_AsVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AsVector(RavlN::SArray2dC< RavlN::FloatT > *,bool)\n"
    "    AsVector(RavlN::SArray2dC< RavlN::FloatT > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___add__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___add__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___add__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator +((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___sub__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___sub__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___sub__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator -((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___mul__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___mul__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___mul__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator *((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___div__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___div__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___div__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator /((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___mul__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat___mul__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator *((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dFloat___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___div__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat___div__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator /((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dFloat___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___add__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat___add__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator +((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dFloat___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___sub__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat___sub__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator -((float const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< float >(static_cast< const RavlN::SArray2dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dFloat___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___iadd__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___iadd__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___iadd__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = (RavlN::SArray2dC< float > *) &(arg1)->operator +=((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___isub__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___isub__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___isub__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = (RavlN::SArray2dC< float > *) &(arg1)->operator -=((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___imul__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___imul__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___imul__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = (RavlN::SArray2dC< float > *) &(arg1)->operator *=((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___idiv__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___idiv__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___idiv__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = (RavlN::SArray2dC< float > *) &(arg1)->operator /=((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___iadd__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat___iadd__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray2dC< float > *) &(arg1)->operator +=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dFloat___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dFloat___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::SArray2dC< RavlN::FloatT > *,RavlN::SArray2dC< float > const &)\n"
    "    operator +=(RavlN::SArray2dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___isub__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat___isub__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray2dC< float > *) &(arg1)->operator -=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dFloat___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dFloat___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::SArray2dC< RavlN::FloatT > *,RavlN::SArray2dC< float > const &)\n"
    "    operator -=(RavlN::SArray2dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___imul__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat___imul__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray2dC< float > *) &(arg1)->operator *=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dFloat___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dFloat___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::SArray2dC< RavlN::FloatT > *,RavlN::SArray2dC< float > const &)\n"
    "    operator *=(RavlN::SArray2dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___idiv__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dFloat___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray2dC< float > *) &(arg1)->operator /=((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dFloat___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dFloat___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dFloat___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::SArray2dC< RavlN::FloatT > *,RavlN::SArray2dC< float > const &)\n"
    "    operator /=(RavlN::SArray2dC< RavlN::FloatT > *,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___eq__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___eq__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___eq__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = (bool)((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator ==((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::SArray2dC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___ne__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat___ne__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat___ne__" "', argument " "2"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp2);
  result = (bool)((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->operator !=((RavlN::SArray2dC< float > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_SumOfSqr" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->SumOfSqr();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Sum" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->Sum();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SliceRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dFloat_SliceRow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_SliceRow" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat_SliceRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SliceRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->SliceRow(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< float >(static_cast< const RavlN::SArray1dC< float >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SetColumn__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::SArray1dC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dFloat_SetColumn",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_SetColumn" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray2dFloat_SetColumn" "', argument " "3"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SetColumn" "', argument " "3"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp3);
  (arg1)->SetColumn(arg2,(RavlN::SArray1dC< float > const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SetRow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::SArray1dC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dFloat_SetRow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_SetRow" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray2dFloat_SetRow" "', argument " "3"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SetRow" "', argument " "3"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp3);
  (arg1)->SetRow(arg2,(RavlN::SArray1dC< float > const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SetColumn__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::IndexC arg2 ;
  float *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  float temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dFloat_SetColumn",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_SetColumn" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray2dFloat_SetColumn" "', argument " "3"" of type '" "float""'");
  } 
  temp3 = static_cast< float >(val3);
  arg3 = &temp3;
  (arg1)->SetColumn(arg2,(float const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SetColumn(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SArray2dFloat_SetColumn__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray2dFloat_SetColumn__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dFloat_SetColumn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetColumn(RavlN::SArray2dC< RavlN::FloatT > *,RavlN::IndexC,RavlN::SArray1dC< float > const &)\n"
    "    SetColumn(RavlN::SArray2dC< RavlN::FloatT > *,RavlN::IndexC,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SetRow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::IndexC arg2 ;
  float *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  float temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dFloat_SetRow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_SetRow" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray2dFloat_SetRow" "', argument " "3"" of type '" "float""'");
  } 
  temp3 = static_cast< float >(val3);
  arg3 = &temp3;
  (arg1)->SetRow(arg2,(float const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SetRow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SArray2dFloat_SetRow__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray2dFloat_SetRow__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dFloat_SetRow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetRow(RavlN::SArray2dC< RavlN::FloatT > *,RavlN::IndexC,RavlN::SArray1dC< float > const &)\n"
    "    SetRow(RavlN::SArray2dC< RavlN::FloatT > *,RavlN::IndexC,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_SetSubArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  RavlN::SArray2dC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dFloat_SetSubArray",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_SetSubArray" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dFloat_SetSubArray" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SetSubArray" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray2dFloat_SetSubArray" "', argument " "3"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dFloat_SetSubArray" "', argument " "3"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp3);
  (arg1)->SetSubArray((RavlN::Index2dC const &)*arg2,(RavlN::SArray2dC< float > const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat_Hash" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::FloatT > const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dFloat___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dFloat___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dFloat___str__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = (char *)RavlN_SArray2dC_Sl_RavlN_FloatT_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SArray2dFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = (RavlN::SArray2dC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SArray2dFloat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SArray2dFloat" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SArray2dFloat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SArray2dCT_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SArray2dReal")) SWIG_fail;
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray2dReal",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Index2dC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SArray2dReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Index2dC * >(argp1);
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >((RavlN::Index2dC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< double > *arg1 = 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray2dReal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "RavlN::SArray2dC< double > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "RavlN::SArray2dC< double > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dReal" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< double > *arg1 = 0 ;
  RavlN::IndexRange2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SArray2dReal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "RavlN::SArray2dC< double > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "RavlN::SArray2dC< double > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexRange2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SArray2dReal" "', argument " "2"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SArray2dReal" "', argument " "2"" of type '" "RavlN::IndexRange2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::IndexRange2dC * >(argp2);
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >(*arg1,(RavlN::IndexRange2dC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  bool arg4 ;
  bool arg5 ;
  RavlN::IntT arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_SArray2dReal",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dReal" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SArray2dReal" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_SArray2dReal" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_SArray2dReal" "', argument " "6"" of type '" "RavlN::IntT""'");
  } 
  arg6 = static_cast< RavlN::IntT >(val6);
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_SArray2dReal",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dReal" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SArray2dReal" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_SArray2dReal" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_SArray2dReal",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dReal" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SArray2dReal" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray2dC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SArray2dReal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SArray2dReal" "', argument " "1"" of type '" "double *""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SArray2dReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SArray2dReal" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (RavlN::SArray2dC< RavlN::RealT > *)new RavlN::SArray2dC< RavlN::RealT >(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SArray2dReal(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SArray2dReal__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__Index2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SArray2dReal__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexRange2dC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SArray2dReal__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SArray2dReal__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray2dReal__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SArray2dReal__SWIG_8(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_SArray2dReal__SWIG_7(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_SArray2dReal__SWIG_6(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_SArray2dReal__SWIG_5(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SArray2dReal'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SArray2dC< RavlN::RealT >()\n"
    "    RavlN::SArray2dC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray2dC< RavlN::RealT >(RavlN::Index2dC const &)\n"
    "    RavlN::SArray2dC< RavlN::RealT >(RavlN::SArray2dC< double > &,RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::SArray2dC< RavlN::RealT >(RavlN::SArray2dC< double > &,RavlN::IndexRange2dC const &)\n"
    "    RavlN::SArray2dC< RavlN::RealT >(double *,RavlN::SizeT,RavlN::SizeT,bool,bool,RavlN::IntT)\n"
    "    RavlN::SArray2dC< RavlN::RealT >(double *,RavlN::SizeT,RavlN::SizeT,bool,bool)\n"
    "    RavlN::SArray2dC< RavlN::RealT >(double *,RavlN::SizeT,RavlN::SizeT,bool)\n"
    "    RavlN::SArray2dC< RavlN::RealT >(double *,RavlN::SizeT,RavlN::SizeT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlN::UIntT arg3 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dReal_ConstructAligned",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SArray2dReal_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal_ConstructAligned" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray2dReal_ConstructAligned" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = RavlN::SArray2dC< RavlN::RealT >::SWIGTEMPLATEDISAMBIGUATOR ConstructAligned(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_Copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Copy" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->Copy();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Size1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_Size1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Size1" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->Size1();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Size2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_Size2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Size2" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->Size2();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Contains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal_Contains",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Contains" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal_Contains" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_Contains" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  result = (bool)((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->Contains((RavlN::Index2dC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Fill" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal_Fill" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  (arg1)->Fill((double const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Stride(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_Stride",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Stride" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = (RavlN::IntT)((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->Stride();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_IsContinuous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_IsContinuous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_IsContinuous" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = (bool)((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->IsContinuous();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Frame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexRange2dC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_Frame",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Frame" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->Frame();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexRange2dC(static_cast< const RavlN::IndexRange2dC& >(result))), SWIGTYPE_p_RavlN__IndexRange2dC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_AsVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal_AsVector",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_AsVector" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal_AsVector" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (arg1)->AsVector(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_AsVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_AsVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_AsVector" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = (arg1)->AsVector();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_AsVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SArray2dReal_AsVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal_AsVector__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dReal_AsVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AsVector(RavlN::SArray2dC< RavlN::RealT > *,bool)\n"
    "    AsVector(RavlN::SArray2dC< RavlN::RealT > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___add__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___add__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___add__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator +((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___sub__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___sub__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___sub__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator -((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___mul__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___mul__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___mul__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator *((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___div__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___div__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___div__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator /((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___mul__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal___mul__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator *((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dReal___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___div__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal___div__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator /((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dReal___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___add__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal___add__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator +((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dReal___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___sub__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal___sub__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator -((double const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray2dC< double >(static_cast< const RavlN::SArray2dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dReal___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___iadd__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___iadd__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___iadd__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = (RavlN::SArray2dC< double > *) &(arg1)->operator +=((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___isub__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___isub__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___isub__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = (RavlN::SArray2dC< double > *) &(arg1)->operator -=((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___imul__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___imul__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___imul__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = (RavlN::SArray2dC< double > *) &(arg1)->operator *=((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___idiv__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___idiv__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___idiv__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = (RavlN::SArray2dC< double > *) &(arg1)->operator /=((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___iadd__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal___iadd__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray2dC< double > *) &(arg1)->operator +=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dReal___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dReal___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::SArray2dC< RavlN::RealT > *,RavlN::SArray2dC< double > const &)\n"
    "    operator +=(RavlN::SArray2dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___isub__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal___isub__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray2dC< double > *) &(arg1)->operator -=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dReal___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dReal___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::SArray2dC< RavlN::RealT > *,RavlN::SArray2dC< double > const &)\n"
    "    operator -=(RavlN::SArray2dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___imul__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal___imul__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray2dC< double > *) &(arg1)->operator *=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dReal___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dReal___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::SArray2dC< RavlN::RealT > *,RavlN::SArray2dC< double > const &)\n"
    "    operator *=(RavlN::SArray2dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray2dC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___idiv__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SArray2dReal___idiv__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::SArray2dC< double > *) &(arg1)->operator /=((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SArray2dReal___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SArray2dReal___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dReal___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::SArray2dC< RavlN::RealT > *,RavlN::SArray2dC< double > const &)\n"
    "    operator /=(RavlN::SArray2dC< RavlN::RealT > *,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___eq__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___eq__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___eq__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = (bool)((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator ==((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::SArray2dC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___ne__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal___ne__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal___ne__" "', argument " "2"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp2);
  result = (bool)((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->operator !=((RavlN::SArray2dC< double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_SumOfSqr" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->SumOfSqr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Sum" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->Sum();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SliceRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SArray1dC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SArray2dReal_SliceRow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_SliceRow" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal_SliceRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SliceRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->SliceRow(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< double >(static_cast< const RavlN::SArray1dC< double >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SetColumn__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::SArray1dC< double > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dReal_SetColumn",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_SetColumn" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray2dReal_SetColumn" "', argument " "3"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SetColumn" "', argument " "3"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp3);
  (arg1)->SetColumn(arg2,(RavlN::SArray1dC< double > const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SetRow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::SArray1dC< double > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dReal_SetRow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_SetRow" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray2dReal_SetRow" "', argument " "3"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SetRow" "', argument " "3"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp3);
  (arg1)->SetRow(arg2,(RavlN::SArray1dC< double > const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SetColumn__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::IndexC arg2 ;
  double *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dReal_SetColumn",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_SetColumn" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray2dReal_SetColumn" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  (arg1)->SetColumn(arg2,(double const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SetColumn(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SArray2dReal_SetColumn__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray2dReal_SetColumn__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dReal_SetColumn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetColumn(RavlN::SArray2dC< RavlN::RealT > *,RavlN::IndexC,RavlN::SArray1dC< double > const &)\n"
    "    SetColumn(RavlN::SArray2dC< RavlN::RealT > *,RavlN::IndexC,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SetRow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::IndexC arg2 ;
  double *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dReal_SetRow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_SetRow" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SArray2dReal_SetRow" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  (arg1)->SetRow(arg2,(double const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SetRow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SArray2dReal_SetRow__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SArray2dReal_SetRow__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SArray2dReal_SetRow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetRow(RavlN::SArray2dC< RavlN::RealT > *,RavlN::IndexC,RavlN::SArray1dC< double > const &)\n"
    "    SetRow(RavlN::SArray2dC< RavlN::RealT > *,RavlN::IndexC,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_SetSubArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  RavlN::SArray2dC< double > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SArray2dReal_SetSubArray",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_SetSubArray" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SArray2dReal_SetSubArray" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SetSubArray" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SArray2dReal_SetSubArray" "', argument " "3"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SArray2dReal_SetSubArray" "', argument " "3"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp3);
  (arg1)->SetSubArray((RavlN::Index2dC const &)*arg2,(RavlN::SArray2dC< double > const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal_Hash" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = ((RavlN::SArray2dC< RavlN::RealT > const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SArray2dReal___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SArray2dReal___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SArray2dReal___str__" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = (char *)RavlN_SArray2dC_Sl_RavlN_RealT_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SArray2dReal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = (RavlN::SArray2dC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SArray2dReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SArray2dReal" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SArray2dReal_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SArray2dCT_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TVectorReal_Product(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_Product",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_Product" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->Product();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_SumOfSqr" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->SumOfSqr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_SumOfAbs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_SumOfAbs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_SumOfAbs" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->SumOfAbs();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MaxValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MaxValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MaxValue" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MaxValue();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MaxMagnitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MaxMagnitude",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MaxMagnitude" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MaxMagnitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MaxAbsValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MaxAbsValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MaxAbsValue" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MaxAbsValue();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MinValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MinValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MinValue" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MinValue();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MinAbsValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MinAbsValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MinAbsValue" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MinAbsValue();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_Reciprocal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TVectorC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_Reciprocal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_Reciprocal" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (RavlN::TVectorC< double > *) &(arg1)->Reciprocal();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_Modulus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_Modulus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_Modulus" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->Modulus();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_TMul(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorReal_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_TMul" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_TMul" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_TMul" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->TMul((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_Dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorReal_Dot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_Dot" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_Dot" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_Dot" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->Dot((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_Dot2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  RavlN::TVectorC< double > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorReal_Dot2",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_Dot2" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_Dot2" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_Dot2" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TVectorReal_Dot2" "', argument " "3"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_Dot2" "', argument " "3"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< double > * >(argp3);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->Dot2((RavlN::TVectorC< double > const &)*arg2,(RavlN::TVectorC< double > const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_ElemMul(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  RavlN::TVectorC< double > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorReal_ElemMul",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_ElemMul" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_ElemMul" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_ElemMul" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TVectorReal_ElemMul" "', argument " "3"" of type '" "RavlN::TVectorC< double > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_ElemMul" "', argument " "3"" of type '" "RavlN::TVectorC< double > &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< double > * >(argp3);
  ((RavlN::TVectorC< RavlN::RealT > const *)arg1)->ElemMul((RavlN::TVectorC< double > const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_ElemSum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  RavlN::TVectorC< double > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorReal_ElemSum",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_ElemSum" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_ElemSum" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_ElemSum" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TVectorReal_ElemSum" "', argument " "3"" of type '" "RavlN::TVectorC< double > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_ElemSum" "', argument " "3"" of type '" "RavlN::TVectorC< double > &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< double > * >(argp3);
  ((RavlN::TVectorC< RavlN::RealT > const *)arg1)->ElemSum((RavlN::TVectorC< double > const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_ElemSubtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  RavlN::TVectorC< double > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorReal_ElemSubtract",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_ElemSubtract" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_ElemSubtract" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_ElemSubtract" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TVectorReal_ElemSubtract" "', argument " "3"" of type '" "RavlN::TVectorC< double > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_ElemSubtract" "', argument " "3"" of type '" "RavlN::TVectorC< double > &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< double > * >(argp3);
  ((RavlN::TVectorC< RavlN::RealT > const *)arg1)->ElemSubtract((RavlN::TVectorC< double > const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_SetSmallToBeZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TVectorC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorReal_SetSmallToBeZero",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_SetSmallToBeZero" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TVectorReal_SetSmallToBeZero" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::TVectorC< double > *) &(arg1)->SetSmallToBeZero((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_Unit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TVectorC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_Unit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_Unit" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::RealT > const *)arg1)->Unit();
  resultobj = SWIG_NewPointerObj((new RavlN::TVectorC< double >(static_cast< const RavlN::TVectorC< double >& >(result))), SWIGTYPE_p_RavlN__TVectorCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MakeUnit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TVectorC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MakeUnit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MakeUnit" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (RavlN::TVectorC< double > *) &(arg1)->MakeUnit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MulAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TVectorC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorReal_MulAdd",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MulAdd" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_MulAdd" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_MulAdd" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TVectorReal_MulAdd" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (RavlN::TVectorC< double > *) &(arg1)->MulAdd((RavlN::TVectorC< double > const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MaxValueDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorReal_MaxValueDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MaxValueDistance" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_MaxValueDistance" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_MaxValueDistance" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MaxValueDistance((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_CityBlockDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorReal_CityBlockDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_CityBlockDistance" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_CityBlockDistance" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_CityBlockDistance" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->CityBlockDistance((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_SqrEuclidDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorReal_SqrEuclidDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_SqrEuclidDistance" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_SqrEuclidDistance" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_SqrEuclidDistance" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->SqrEuclidDistance((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_EuclidDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorReal_EuclidDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_EuclidDistance" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorReal_EuclidDistance" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorReal_EuclidDistance" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = (double)((RavlN::TVectorC< RavlN::RealT > const *)arg1)->EuclidDistance((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MaxIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MaxIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MaxIndex" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MaxIndex();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MaxAbsIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MaxAbsIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MaxAbsIndex" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MaxAbsIndex();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MinIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MinIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MinIndex" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MinIndex();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal_MinAbsIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal_MinAbsIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal_MinAbsIndex" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::RealT > const *)arg1)->MinAbsIndex();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorReal___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorReal___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorReal___str__" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (char *)RavlN_TVectorC_Sl_RavlN_RealT_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TVectorReal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TVectorReal")) SWIG_fail;
  result = (RavlN::TVectorC< RavlN::RealT > *)new RavlN::TVectorC< RavlN::RealT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TVectorReal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = (RavlN::TVectorC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TVectorReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TVectorReal" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TVectorReal_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__TVectorCT_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TVectorFloat_Product(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_Product",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_Product" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->Product();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_SumOfSqr" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->SumOfSqr();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_SumOfAbs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_SumOfAbs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_SumOfAbs" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->SumOfAbs();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MaxValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MaxValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MaxValue" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MaxValue();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MaxMagnitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MaxMagnitude",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MaxMagnitude" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MaxMagnitude();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MaxAbsValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MaxAbsValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MaxAbsValue" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MaxAbsValue();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MinValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MinValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MinValue" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MinValue();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MinAbsValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MinAbsValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MinAbsValue" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MinAbsValue();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_Reciprocal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TVectorC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_Reciprocal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_Reciprocal" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (RavlN::TVectorC< float > *) &(arg1)->Reciprocal();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_Modulus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_Modulus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_Modulus" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->Modulus();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_TMul(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorFloat_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_TMul" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_TMul" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_TMul" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->TMul((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_Dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorFloat_Dot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_Dot" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_Dot" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_Dot" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->Dot((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_Dot2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  RavlN::TVectorC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorFloat_Dot2",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_Dot2" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_Dot2" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_Dot2" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TVectorFloat_Dot2" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_Dot2" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< float > * >(argp3);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->Dot2((RavlN::TVectorC< float > const &)*arg2,(RavlN::TVectorC< float > const &)*arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_ElemMul(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  RavlN::TVectorC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorFloat_ElemMul",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_ElemMul" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_ElemMul" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_ElemMul" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TVectorFloat_ElemMul" "', argument " "3"" of type '" "RavlN::TVectorC< float > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_ElemMul" "', argument " "3"" of type '" "RavlN::TVectorC< float > &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< float > * >(argp3);
  ((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->ElemMul((RavlN::TVectorC< float > const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_ElemSum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  RavlN::TVectorC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorFloat_ElemSum",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_ElemSum" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_ElemSum" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_ElemSum" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TVectorFloat_ElemSum" "', argument " "3"" of type '" "RavlN::TVectorC< float > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_ElemSum" "', argument " "3"" of type '" "RavlN::TVectorC< float > &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< float > * >(argp3);
  ((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->ElemSum((RavlN::TVectorC< float > const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_ElemSubtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  RavlN::TVectorC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorFloat_ElemSubtract",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_ElemSubtract" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_ElemSubtract" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_ElemSubtract" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TVectorFloat_ElemSubtract" "', argument " "3"" of type '" "RavlN::TVectorC< float > &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_ElemSubtract" "', argument " "3"" of type '" "RavlN::TVectorC< float > &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< float > * >(argp3);
  ((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->ElemSubtract((RavlN::TVectorC< float > const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_SetSmallToBeZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TVectorC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorFloat_SetSmallToBeZero",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_SetSmallToBeZero" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TVectorFloat_SetSmallToBeZero" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::TVectorC< float > *) &(arg1)->SetSmallToBeZero((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_Unit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TVectorC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_Unit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_Unit" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->Unit();
  resultobj = SWIG_NewPointerObj((new RavlN::TVectorC< float >(static_cast< const RavlN::TVectorC< float >& >(result))), SWIGTYPE_p_RavlN__TVectorCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MakeUnit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TVectorC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MakeUnit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MakeUnit" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (RavlN::TVectorC< float > *) &(arg1)->MakeUnit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MulAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TVectorC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TVectorFloat_MulAdd",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MulAdd" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_MulAdd" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_MulAdd" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TVectorFloat_MulAdd" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (RavlN::TVectorC< float > *) &(arg1)->MulAdd((RavlN::TVectorC< float > const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MaxValueDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorFloat_MaxValueDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MaxValueDistance" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_MaxValueDistance" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_MaxValueDistance" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MaxValueDistance((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_CityBlockDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorFloat_CityBlockDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_CityBlockDistance" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_CityBlockDistance" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_CityBlockDistance" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->CityBlockDistance((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_SqrEuclidDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorFloat_SqrEuclidDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_SqrEuclidDistance" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_SqrEuclidDistance" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_SqrEuclidDistance" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->SqrEuclidDistance((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_EuclidDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TVectorFloat_EuclidDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_EuclidDistance" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TVectorFloat_EuclidDistance" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TVectorFloat_EuclidDistance" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = (float)((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->EuclidDistance((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MaxIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MaxIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MaxIndex" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MaxIndex();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MaxAbsIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MaxAbsIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MaxAbsIndex" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MaxAbsIndex();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MinIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MinIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MinIndex" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MinIndex();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat_MinAbsIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat_MinAbsIndex",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat_MinAbsIndex" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TVectorC< RavlN::FloatT > const *)arg1)->MinAbsIndex();
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TVectorFloat___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TVectorFloat___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TVectorFloat___str__" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  result = (char *)RavlN_TVectorC_Sl_RavlN_FloatT_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TVectorFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TVectorFloat")) SWIG_fail;
  result = (RavlN::TVectorC< RavlN::FloatT > *)new RavlN::TVectorC< RavlN::FloatT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TVectorCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TVectorFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::FloatT > *arg1 = (RavlN::TVectorC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TVectorFloat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TVectorCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TVectorFloat" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::FloatT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TVectorFloat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__TVectorCT_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_VectorC")) SWIG_fail;
  result = (RavlN::VectorC *)new RavlN::VectorC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VectorC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::VectorC *)new RavlN::VectorC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::RealT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::RealT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::RealT > * >(argp1);
  result = (RavlN::VectorC *)new RavlN::VectorC((RavlN::SArray1dC< RavlN::RealT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< RavlN::RealT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::TVectorC< RavlN::RealT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< RavlN::RealT > * >(argp1);
  result = (RavlN::VectorC *)new RavlN::VectorC((RavlN::TVectorC< RavlN::RealT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::FloatT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::FloatT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::FloatT > * >(argp1);
  result = (RavlN::VectorC *)new RavlN::VectorC((RavlN::SArray1dC< RavlN::FloatT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_ConstructAligned(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::UIntT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_ConstructAligned",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "VectorC_ConstructAligned" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC_ConstructAligned" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = RavlN::VectorC::ConstructAligned(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_VectorC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::VectorC *)new RavlN::VectorC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_VectorC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  result = (RavlN::VectorC *)new RavlN::VectorC(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  RavlN::RealT arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_VectorC",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_VectorC" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  result = (RavlN::VectorC *)new RavlN::VectorC(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  RavlN::RealT arg4 ;
  RavlN::RealT arg5 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_VectorC",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_VectorC" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_VectorC" "', argument " "5"" of type '" "RavlN::RealT""'");
  } 
  arg5 = static_cast< RavlN::RealT >(val5);
  result = (RavlN::VectorC *)new RavlN::VectorC(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  RavlN::RealT arg4 ;
  RavlN::RealT arg5 ;
  RavlN::RealT arg6 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_VectorC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_VectorC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_VectorC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_VectorC" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_VectorC" "', argument " "5"" of type '" "RavlN::RealT""'");
  } 
  arg5 = static_cast< RavlN::RealT >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_VectorC" "', argument " "6"" of type '" "RavlN::RealT""'");
  } 
  arg6 = static_cast< RavlN::RealT >(val6);
  result = (RavlN::VectorC *)new RavlN::VectorC(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_VectorC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__TVectorCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorC__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorC__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_VectorC__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_VectorC__SWIG_5(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_VectorC__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_VectorC__SWIG_7(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_VectorC__SWIG_8(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_VectorC__SWIG_9(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_VectorC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::VectorC()\n"
    "    RavlN::VectorC(RavlN::SizeT)\n"
    "    RavlN::VectorC(RavlN::SArray1dC< RavlN::RealT > const &)\n"
    "    RavlN::VectorC(RavlN::TVectorC< RavlN::RealT > const &)\n"
    "    RavlN::VectorC(RavlN::SArray1dC< RavlN::FloatT > const &)\n"
    "    RavlN::VectorC(RavlN::RealT,RavlN::RealT)\n"
    "    RavlN::VectorC(RavlN::RealT,RavlN::RealT,RavlN::RealT)\n"
    "    RavlN::VectorC(RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT)\n"
    "    RavlN::VectorC(RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT)\n"
    "    RavlN::VectorC(RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_IsReal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorC_IsReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_IsReal" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = (bool)((RavlN::VectorC const *)arg1)->IsReal();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___add__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___add__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___add__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::VectorC const *)arg1)->operator +((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___sub__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___sub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___sub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::VectorC const *)arg1)->operator -((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___mul__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___mul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___mul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::VectorC const *)arg1)->operator *((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___div__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___div__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___div__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::VectorC const *)arg1)->operator /((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___mul__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC___mul__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::VectorC const *)arg1)->operator *((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_VectorC___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___div__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC___div__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::VectorC const *)arg1)->operator /((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_VectorC___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___add__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC___add__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::VectorC const *)arg1)->operator +((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_VectorC___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___sub__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC___sub__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::VectorC const *)arg1)->operator -((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_VectorC___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___iadd__" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___iadd__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___iadd__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::VectorC *) &(arg1)->operator +=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___isub__" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___isub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___isub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::VectorC *) &(arg1)->operator -=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___imul__" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___imul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___imul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::VectorC *) &(arg1)->operator *=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___idiv__" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___idiv__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___idiv__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::VectorC *) &(arg1)->operator /=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___iadd__" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC___iadd__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::VectorC *) &(arg1)->operator +=((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorC___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::VectorC *,RavlN::VectorC const &)\n"
    "    operator +=(RavlN::VectorC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___isub__" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC___isub__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::VectorC *) &(arg1)->operator -=((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorC___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::VectorC *,RavlN::VectorC const &)\n"
    "    operator -=(RavlN::VectorC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___imul__" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC___imul__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::VectorC *) &(arg1)->operator *=((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorC___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::VectorC *,RavlN::VectorC const &)\n"
    "    operator *=(RavlN::VectorC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___idiv__" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC___idiv__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::VectorC *) &(arg1)->operator /=((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorC___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::VectorC *,RavlN::VectorC const &)\n"
    "    operator /=(RavlN::VectorC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Join__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Join" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_Join" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_Join" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::VectorC const *)arg1)->Join((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Join__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_Join",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Join" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC_Join" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::VectorC const *)arg1)->Join((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Join(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC_Join__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC_Join__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorC_Join'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Join(RavlN::VectorC const *,RavlN::VectorC const &)\n"
    "    Join(RavlN::VectorC const *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Append" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_Append" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_Append" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::VectorC *) &(arg1)->Append((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Append" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC_Append" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::VectorC *) &(arg1)->Append((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorC_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::VectorC *,RavlN::VectorC const &)\n"
    "    Append(RavlN::VectorC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_From__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_From",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_From" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->From(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_From__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorC_From",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_From" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC_From" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorC_From" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = (arg1)->From(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_From(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_VectorC_From__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorC_From__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorC_From'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    From(RavlN::VectorC *,RavlN::UIntT)\n"
    "    From(RavlN::VectorC *,RavlN::UIntT,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_After(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_After",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_After" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC_After" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->After(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Before(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_Before",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Before" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC_Before" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->Before(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___eq__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___eq__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___eq__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (bool)((RavlN::VectorC const *)arg1)->operator ==((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC___ne__" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC___ne__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC___ne__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (bool)((RavlN::VectorC const *)arg1)->operator !=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Reciprocal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorC_Reciprocal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Reciprocal" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = (RavlN::VectorC *) &(arg1)->Reciprocal();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_TMul(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_TMul" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_TMul" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_TMul" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)((RavlN::VectorC const *)arg1)->TMul((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_Dot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Dot" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_Dot" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_Dot" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)((RavlN::VectorC const *)arg1)->Dot((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Dot2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorC_Dot2",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Dot2" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_Dot2" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_Dot2" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorC_Dot2" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_Dot2" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  result = (RavlN::RealT)((RavlN::VectorC const *)arg1)->Dot2((RavlN::VectorC const &)*arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_ElemMul(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorC_ElemMul",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_ElemMul" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_ElemMul" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_ElemMul" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorC_ElemMul" "', argument " "3"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_ElemMul" "', argument " "3"" of type '" "RavlN::VectorC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  ((RavlN::VectorC const *)arg1)->ElemMul((RavlN::VectorC const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_ElemSum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorC_ElemSum",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_ElemSum" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_ElemSum" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_ElemSum" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorC_ElemSum" "', argument " "3"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_ElemSum" "', argument " "3"" of type '" "RavlN::VectorC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  ((RavlN::VectorC const *)arg1)->ElemSum((RavlN::VectorC const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_ElemSubtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorC_ElemSubtract",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_ElemSubtract" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_ElemSubtract" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_ElemSubtract" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorC_ElemSubtract" "', argument " "3"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_ElemSubtract" "', argument " "3"" of type '" "RavlN::VectorC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  ((RavlN::VectorC const *)arg1)->ElemSubtract((RavlN::VectorC const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_SetSmallToBeZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_SetSmallToBeZero",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_SetSmallToBeZero" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VectorC_SetSmallToBeZero" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::VectorC *) &(arg1)->SetSmallToBeZero((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_OuterProduct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_OuterProduct",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_OuterProduct" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_OuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_OuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::VectorC const *)arg1)->OuterProduct((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_OuterProduct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::RealT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorC_OuterProduct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_OuterProduct" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_OuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_OuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorC_OuterProduct" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  result = ((RavlN::VectorC const *)arg1)->OuterProduct((RavlN::VectorC const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_OuterProduct__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorC_OuterProduct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_OuterProduct" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = ((RavlN::VectorC const *)arg1)->OuterProduct();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_OuterProduct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_VectorC_OuterProduct__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorC_OuterProduct__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_VectorC_OuterProduct__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorC_OuterProduct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    OuterProduct(RavlN::VectorC const *,RavlN::VectorC const &)\n"
    "    OuterProduct(RavlN::VectorC const *,RavlN::VectorC const &,RavlN::RealT)\n"
    "    OuterProduct(RavlN::VectorC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_Unit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorC_Unit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_Unit" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = ((RavlN::VectorC const *)arg1)->Unit();
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_MakeUnit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorC_MakeUnit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_MakeUnit" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = (RavlN::VectorC *) &(arg1)->MakeUnit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_MulAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::RealT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:VectorC_MulAdd",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_MulAdd" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_MulAdd" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_MulAdd" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VectorC_MulAdd" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  result = (RavlN::VectorC *) &(arg1)->MulAdd((RavlN::VectorC const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_MaxValueDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_MaxValueDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_MaxValueDistance" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_MaxValueDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_MaxValueDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)((RavlN::VectorC const *)arg1)->MaxValueDistance((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_CityBlockDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_CityBlockDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_CityBlockDistance" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_CityBlockDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_CityBlockDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)((RavlN::VectorC const *)arg1)->CityBlockDistance((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_SqrEuclidDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_SqrEuclidDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_SqrEuclidDistance" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_SqrEuclidDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_SqrEuclidDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)((RavlN::VectorC const *)arg1)->SqrEuclidDistance((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorC_EuclidDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:VectorC_EuclidDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorC_EuclidDistance" "', argument " "1"" of type '" "RavlN::VectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorC_EuclidDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorC_EuclidDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)((RavlN::VectorC const *)arg1)->EuclidDistance((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = (RavlN::VectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorC" "', argument " "1"" of type '" "RavlN::VectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__VectorC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_RandomVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  RavlN::RealT arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "RandomVector" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomVector" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = RavlN::RandomVector(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "RandomVector" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = RavlN::RandomVector(arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_RandomVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_RandomVector__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RandomVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::RandomVector(int,RavlN::RealT)\n"
    "    RavlN::RandomVector(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SetZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SetZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SetZero" "', argument " "1"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SetZero" "', argument " "1"" of type '" "RavlN::VectorC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  RavlN::SetZero(*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sigmoid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Sigmoid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sigmoid" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Sigmoid" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = RavlN::Sigmoid((RavlN::VectorC const &)*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SigmoidIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SigmoidIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SigmoidIP" "', argument " "1"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SigmoidIP" "', argument " "1"" of type '" "RavlN::VectorC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  RavlN::SigmoidIP(*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Log(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Log",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Log" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Log" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = RavlN::Log((RavlN::VectorC const &)*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogIP" "', argument " "1"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LogIP" "', argument " "1"" of type '" "RavlN::VectorC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  RavlN::LogIP(*arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Exp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Exp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Exp" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Exp" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = RavlN::Exp((RavlN::VectorC const &)*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TMatrixReal")) SWIG_fail;
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< double > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_TMatrixReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SArray2dC< double > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< double > * >(argp1);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >((RavlN::SArray2dC< double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< double > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_TMatrixReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< double > * >(argp1);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >((RavlN::TVectorC< double > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_TMatrixReal",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  double *arg3 = (double *) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TMatrixReal",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "double const *""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2,(double const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  double *arg3 = (double *) 0 ;
  bool arg4 ;
  bool arg5 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_TMatrixReal",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "double *""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixReal" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_TMatrixReal" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  double *arg3 = (double *) 0 ;
  bool arg4 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_TMatrixReal",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "double *""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixReal" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  double *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TMatrixReal",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2,(double const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlN::SArray1dC< double > *arg3 = 0 ;
  RavlN::SizeT arg4 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_TMatrixReal",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixReal" "', argument " "4"" of type '" "RavlN::SizeT""'");
  } 
  arg4 = static_cast< RavlN::SizeT >(val4);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2,(RavlN::SArray1dC< double > const &)*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlN::SArray1dC< double > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TMatrixReal",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray1dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "RavlN::SArray1dC< double > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray1dC< double > * >(argp3);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2,(RavlN::SArray1dC< double > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_TMatrixReal",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixReal" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_TMatrixReal",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixReal" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixReal" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TMatrixReal" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixReal" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_TMatrixReal" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_TMatrixReal" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_TMatrixReal" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_TMatrixReal" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_TMatrixReal" "', argument " "9"" of type '" "double""'");
  } 
  arg9 = static_cast< double >(val9);
  result = (RavlN::TMatrixC< RavlN::RealT > *)new RavlN::TMatrixC< RavlN::RealT >(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixReal(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_TMatrixReal__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_TMatrixReal__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__TVectorCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_TMatrixReal__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_TMatrixReal__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_TMatrixReal__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_TMatrixReal__SWIG_9(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_TMatrixReal__SWIG_7(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SArray1dCT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_size_t(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_TMatrixReal__SWIG_8(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_TMatrixReal__SWIG_6(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_TMatrixReal__SWIG_10(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_TMatrixReal__SWIG_5(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_TMatrixReal__SWIG_11(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_TMatrixReal'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::TMatrixC< RavlN::RealT >()\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::SArray2dC< double > const &)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::TVectorC< double > const &)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT,double const *)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT,double *,bool,bool)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT,double *,bool)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT,double const &)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT,RavlN::SArray1dC< double > const &,RavlN::SizeT)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(RavlN::SizeT,RavlN::SizeT,RavlN::SArray1dC< double > const &)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(double,double,double,double)\n"
    "    RavlN::TMatrixC< RavlN::RealT >(double,double,double,double,double,double,double,double,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_Rows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixReal_Rows",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_Rows" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->Rows();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_Cols(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixReal_Cols",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_Cols" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->Cols();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal___mul__" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TMatrixReal___mul__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->operator *(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TVectorC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal___mul__" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal___mul__" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal___mul__" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->operator *((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TVectorC< double >(static_cast< const RavlN::TVectorC< double >& >(result))), SWIGTYPE_p_RavlN__TVectorCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal___mul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TMatrixC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal___mul__" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TMatrixCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal___mul__" "', argument " "2"" of type '" "RavlN::TMatrixC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal___mul__" "', argument " "2"" of type '" "RavlN::TMatrixC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TMatrixC< double > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->operator *((RavlN::TMatrixC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TMatrixReal___mul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TMatrixReal___mul____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TMatrixReal___mul____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_MulT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TMatrixC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal_MulT",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_MulT" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TMatrixCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal_MulT" "', argument " "2"" of type '" "RavlN::TMatrixC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_MulT" "', argument " "2"" of type '" "RavlN::TMatrixC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TMatrixC< double > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->MulT((RavlN::TMatrixC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_TMul__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TMatrixC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_TMul" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TMatrixCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal_TMul" "', argument " "2"" of type '" "RavlN::TMatrixC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_TMul" "', argument " "2"" of type '" "RavlN::TMatrixC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TMatrixC< double > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->TMul((RavlN::TMatrixC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_TMul__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TVectorC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_TMul" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal_TMul" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_TMul" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->TMul((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TVectorC< double >(static_cast< const RavlN::TVectorC< double >& >(result))), SWIGTYPE_p_RavlN__TVectorCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_TMul(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TMatrixReal_TMul__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TMatrixReal_TMul__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'TMatrixReal_TMul'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TMul(RavlN::TMatrixC< RavlN::RealT > const *,RavlN::TMatrixC< double > const &)\n"
    "    TMul(RavlN::TMatrixC< RavlN::RealT > const *,RavlN::TVectorC< double > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_AAT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixReal_AAT",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_AAT" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->AAT();
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_ATA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixReal_ATA",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_ATA" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->ATA();
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_T(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixReal_T",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_T" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->T();
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_Identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixReal_Identity",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TMatrixReal_Identity" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = RavlN::TMatrixC< RavlN::RealT >::SWIGTEMPLATEDISAMBIGUATOR Identity(arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_SetDiagonal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal_SetDiagonal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_SetDiagonal" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal_SetDiagonal" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_SetDiagonal" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = (RavlN::TMatrixC< double > *) &(arg1)->SetDiagonal((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_AddDiagonal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal_AddDiagonal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_AddDiagonal" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal_AddDiagonal" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_AddDiagonal" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  result = (RavlN::TMatrixC< double > *) &(arg1)->AddDiagonal((RavlN::TVectorC< double > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_SubMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< double > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TMatrixReal_SubMatrix",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_SubMatrix" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TMatrixReal_SubMatrix" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TMatrixReal_SubMatrix" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (arg1)->SubMatrix(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< double >(static_cast< const RavlN::TMatrixC< double >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_SumOfAbs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixReal_SumOfAbs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_SumOfAbs" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  result = (double)((RavlN::TMatrixC< RavlN::RealT > const *)arg1)->SumOfAbs();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_AddOuterProduct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  RavlN::TVectorC< double > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TMatrixReal_AddOuterProduct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_AddOuterProduct" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TMatrixReal_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< double > * >(argp3);
  result = (RavlN::TMatrixC< double > *) &(arg1)->AddOuterProduct((RavlN::TVectorC< double > const &)*arg2,(RavlN::TVectorC< double > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_AddOuterProduct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TVectorC< double > *arg2 = 0 ;
  RavlN::TVectorC< double > *arg3 = 0 ;
  double *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:TMatrixReal_AddOuterProduct",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_AddOuterProduct" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< double > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TMatrixReal_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< double > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< double > * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TMatrixReal_AddOuterProduct" "', argument " "4"" of type '" "double""'");
  } 
  temp4 = static_cast< double >(val4);
  arg4 = &temp4;
  result = (RavlN::TMatrixC< double > *) &(arg1)->AddOuterProduct((RavlN::TVectorC< double > const &)*arg2,(RavlN::TVectorC< double > const &)*arg3,(double const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_AddOuterProduct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__TVectorCT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_TMatrixReal_AddOuterProduct__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__TVectorCT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TMatrixReal_AddOuterProduct__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'TMatrixReal_AddOuterProduct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddOuterProduct(RavlN::TMatrixC< RavlN::RealT > *,RavlN::TVectorC< double > const &,RavlN::TVectorC< double > const &)\n"
    "    AddOuterProduct(RavlN::TMatrixC< RavlN::RealT > *,RavlN::TVectorC< double > const &,RavlN::TVectorC< double > const &,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_SetSmallToBeZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  double *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixReal_SetSmallToBeZero",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_SetSmallToBeZero" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TMatrixReal_SetSmallToBeZero" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  result = (RavlN::TMatrixC< double > *) &(arg1)->SetSmallToBeZero((double const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_MulAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  RavlN::TMatrixC< double > *arg2 = 0 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< double > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TMatrixReal_MulAdd",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_MulAdd" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TMatrixCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixReal_MulAdd" "', argument " "2"" of type '" "RavlN::TMatrixC< double > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixReal_MulAdd" "', argument " "2"" of type '" "RavlN::TMatrixC< double > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TMatrixC< double > * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TMatrixReal_MulAdd" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (RavlN::TMatrixC< double > *) &(arg1)->MulAdd((RavlN::TMatrixC< double > const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixReal_SwapRows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TMatrixReal_SwapRows",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixReal_SwapRows" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TMatrixReal_SwapRows" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TMatrixReal_SwapRows" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SwapRows(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TMatrixReal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = (RavlN::TMatrixC< RavlN::RealT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TMatrixReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TMatrixReal" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TMatrixReal_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__TMatrixCT_double_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TMatrixFloat")) SWIG_fail;
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< float > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_TMatrixFloat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SArray2dC< float > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< float > * >(argp1);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >((RavlN::SArray2dC< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TVectorC< float > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_TMatrixFloat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TVectorC< float > * >(argp1);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >((RavlN::TVectorC< float > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_TMatrixFloat",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  float *arg3 = (float *) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TMatrixFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "float const *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2,(float const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  float *arg3 = (float *) 0 ;
  bool arg4 ;
  bool arg5 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_TMatrixFloat",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixFloat" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_TMatrixFloat" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  float *arg3 = (float *) 0 ;
  bool arg4 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_TMatrixFloat",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixFloat" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  float *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  float temp3 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TMatrixFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "float""'");
  } 
  temp3 = static_cast< float >(val3);
  arg3 = &temp3;
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2,(float const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlN::SArray1dC< float > *arg3 = 0 ;
  RavlN::SizeT arg4 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_TMatrixFloat",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp3);
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixFloat" "', argument " "4"" of type '" "RavlN::SizeT""'");
  } 
  arg4 = static_cast< RavlN::SizeT >(val4);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2,(RavlN::SArray1dC< float > const &)*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlN::SArray1dC< float > *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TMatrixFloat",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SArray1dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "RavlN::SArray1dC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SArray1dC< float > * >(argp3);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2,(RavlN::SArray1dC< float > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_TMatrixFloat",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixFloat" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  RavlN::TMatrixC< RavlN::FloatT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_TMatrixFloat",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMatrixFloat" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TMatrixFloat" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TMatrixFloat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_TMatrixFloat" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_TMatrixFloat" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_TMatrixFloat" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_TMatrixFloat" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_TMatrixFloat" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_TMatrixFloat" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  result = (RavlN::TMatrixC< RavlN::FloatT > *)new RavlN::TMatrixC< RavlN::FloatT >(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMatrixFloat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_TMatrixFloat__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_TMatrixFloat__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_TMatrixFloat__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_TMatrixFloat__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_TMatrixFloat__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_TMatrixFloat__SWIG_9(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_TMatrixFloat__SWIG_7(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SArray1dCT_float_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_size_t(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_TMatrixFloat__SWIG_8(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_TMatrixFloat__SWIG_6(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_TMatrixFloat__SWIG_10(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_TMatrixFloat__SWIG_5(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_float(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_float(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_float(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_TMatrixFloat__SWIG_11(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_TMatrixFloat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::TMatrixC< RavlN::FloatT >()\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::SArray2dC< float > const &)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::TVectorC< float > const &)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::SizeT,RavlN::SizeT)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::SizeT,RavlN::SizeT,float const *)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::SizeT,RavlN::SizeT,float *,bool,bool)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::SizeT,RavlN::SizeT,float *,bool)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::SizeT,RavlN::SizeT,float const &)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::SizeT,RavlN::SizeT,RavlN::SArray1dC< float > const &,RavlN::SizeT)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(RavlN::SizeT,RavlN::SizeT,RavlN::SArray1dC< float > const &)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(float,float,float,float)\n"
    "    RavlN::TMatrixC< RavlN::FloatT >(float,float,float,float,float,float,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_Rows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixFloat_Rows",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_Rows" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->Rows();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_Cols(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixFloat_Cols",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_Cols" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->Cols();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat___mul__" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TMatrixFloat___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->operator *(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TVectorC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat___mul__" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat___mul__" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat___mul__" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->operator *((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TVectorC< float >(static_cast< const RavlN::TVectorC< float >& >(result))), SWIGTYPE_p_RavlN__TVectorCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat___mul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TMatrixC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat___mul__" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TMatrixCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat___mul__" "', argument " "2"" of type '" "RavlN::TMatrixC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat___mul__" "', argument " "2"" of type '" "RavlN::TMatrixC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TMatrixC< float > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->operator *((RavlN::TMatrixC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TMatrixFloat___mul____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TMatrixFloat___mul____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_TMatrixFloat___mul____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_MulT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TMatrixC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat_MulT",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_MulT" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TMatrixCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat_MulT" "', argument " "2"" of type '" "RavlN::TMatrixC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_MulT" "', argument " "2"" of type '" "RavlN::TMatrixC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TMatrixC< float > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->MulT((RavlN::TMatrixC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_TMul__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TMatrixC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_TMul" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TMatrixCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat_TMul" "', argument " "2"" of type '" "RavlN::TMatrixC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_TMul" "', argument " "2"" of type '" "RavlN::TMatrixC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TMatrixC< float > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->TMul((RavlN::TMatrixC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_TMul__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TVectorC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_TMul" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat_TMul" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_TMul" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->TMul((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::TVectorC< float >(static_cast< const RavlN::TVectorC< float >& >(result))), SWIGTYPE_p_RavlN__TVectorCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_TMul(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TMatrixFloat_TMul__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TMatrixFloat_TMul__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'TMatrixFloat_TMul'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TMul(RavlN::TMatrixC< RavlN::FloatT > const *,RavlN::TMatrixC< float > const &)\n"
    "    TMul(RavlN::TMatrixC< RavlN::FloatT > const *,RavlN::TVectorC< float > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_AAT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixFloat_AAT",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_AAT" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->AAT();
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_ATA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixFloat_ATA",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_ATA" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->ATA();
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_T(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixFloat_T",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_T" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  result = ((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->T();
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_Identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixFloat_Identity",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TMatrixFloat_Identity" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = RavlN::TMatrixC< RavlN::FloatT >::SWIGTEMPLATEDISAMBIGUATOR Identity(arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_SetDiagonal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat_SetDiagonal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_SetDiagonal" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat_SetDiagonal" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_SetDiagonal" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = (RavlN::TMatrixC< float > *) &(arg1)->SetDiagonal((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_AddDiagonal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat_AddDiagonal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_AddDiagonal" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat_AddDiagonal" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_AddDiagonal" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  result = (RavlN::TMatrixC< float > *) &(arg1)->AddDiagonal((RavlN::TVectorC< float > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_SubMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< float > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TMatrixFloat_SubMatrix",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_SubMatrix" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TMatrixFloat_SubMatrix" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TMatrixFloat_SubMatrix" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (arg1)->SubMatrix(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::TMatrixC< float >(static_cast< const RavlN::TMatrixC< float >& >(result))), SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_SumOfAbs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMatrixFloat_SumOfAbs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_SumOfAbs" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  result = (float)((RavlN::TMatrixC< RavlN::FloatT > const *)arg1)->SumOfAbs();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_AddOuterProduct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  RavlN::TVectorC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TMatrixFloat_AddOuterProduct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< float > * >(argp3);
  result = (RavlN::TMatrixC< float > *) &(arg1)->AddOuterProduct((RavlN::TVectorC< float > const &)*arg2,(RavlN::TVectorC< float > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_AddOuterProduct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  RavlN::TVectorC< float > *arg3 = 0 ;
  float *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float temp4 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:TMatrixFloat_AddOuterProduct",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< float > * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TMatrixFloat_AddOuterProduct" "', argument " "4"" of type '" "float""'");
  } 
  temp4 = static_cast< float >(val4);
  arg4 = &temp4;
  result = (RavlN::TMatrixC< float > *) &(arg1)->AddOuterProduct((RavlN::TVectorC< float > const &)*arg2,(RavlN::TVectorC< float > const &)*arg3,(float const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_AddOuterProduct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_TMatrixFloat_AddOuterProduct__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_TMatrixFloat_AddOuterProduct__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'TMatrixFloat_AddOuterProduct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddOuterProduct(RavlN::TMatrixC< RavlN::FloatT > *,RavlN::TVectorC< float > const &,RavlN::TVectorC< float > const &)\n"
    "    AddOuterProduct(RavlN::TMatrixC< RavlN::FloatT > *,RavlN::TVectorC< float > const &,RavlN::TVectorC< float > const &,float const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_SetSmallToBeZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  float *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float temp2 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::TMatrixC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TMatrixFloat_SetSmallToBeZero",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_SetSmallToBeZero" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TMatrixFloat_SetSmallToBeZero" "', argument " "2"" of type '" "float""'");
  } 
  temp2 = static_cast< float >(val2);
  arg2 = &temp2;
  result = (RavlN::TMatrixC< float > *) &(arg1)->SetSmallToBeZero((float const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_MulAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  RavlN::TMatrixC< float > *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< float > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TMatrixFloat_MulAdd",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_MulAdd" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TMatrixCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TMatrixFloat_MulAdd" "', argument " "2"" of type '" "RavlN::TMatrixC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TMatrixFloat_MulAdd" "', argument " "2"" of type '" "RavlN::TMatrixC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TMatrixC< float > * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TMatrixFloat_MulAdd" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (RavlN::TMatrixC< float > *) &(arg1)->MulAdd((RavlN::TMatrixC< float > const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMatrixFloat_SwapRows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TMatrixFloat_SwapRows",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMatrixFloat_SwapRows" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TMatrixFloat_SwapRows" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TMatrixFloat_SwapRows" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->SwapRows(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TMatrixFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::FloatT > *arg1 = (RavlN::TMatrixC< RavlN::FloatT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TMatrixFloat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TMatrixFloat" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::FloatT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::FloatT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TMatrixFloat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__TMatrixCT_float_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MatrixC")) SWIG_fail;
  result = (RavlN::MatrixC *)new RavlN::MatrixC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_IsReal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_IsReal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_IsReal" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = (bool)((RavlN::MatrixC const *)arg1)->IsReal();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MatrixC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = (RavlN::MatrixC *)new RavlN::MatrixC((RavlN::VectorC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MatrixC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MatrixC" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (RavlN::MatrixC *)new RavlN::MatrixC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  RavlN::RealT *arg3 = (RavlN::RealT *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_MatrixC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MatrixC" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MatrixC" "', argument " "3"" of type '" "RavlN::RealT const *""'"); 
  }
  arg3 = reinterpret_cast< RavlN::RealT * >(argp3);
  result = (RavlN::MatrixC *)new RavlN::MatrixC(arg1,arg2,(RavlN::RealT const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  RavlN::RealT *arg3 = 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  RavlN::RealT temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_MatrixC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MatrixC" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MatrixC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  temp3 = static_cast< RavlN::RealT >(val3);
  arg3 = &temp3;
  result = (RavlN::MatrixC *)new RavlN::MatrixC(arg1,arg2,(RavlN::RealT const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  RavlN::VectorC *arg3 = 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_MatrixC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MatrixC" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MatrixC" "', argument " "3"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MatrixC" "', argument " "3"" of type '" "RavlN::VectorC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  result = (RavlN::MatrixC *)new RavlN::MatrixC(arg1,arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  RavlN::SizeT arg2 ;
  RavlN::VectorC *arg3 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_MatrixC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MatrixC" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MatrixC" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MatrixC" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  result = (RavlN::MatrixC *)new RavlN::MatrixC(arg1,arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::TMatrixC< RavlN::RealT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MatrixC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__TMatrixCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::TMatrixC< RavlN::RealT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::TMatrixC< RavlN::RealT > * >(argp1);
  result = (RavlN::MatrixC *)new RavlN::MatrixC((RavlN::TMatrixC< RavlN::RealT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MatrixC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = (RavlN::MatrixC *)new RavlN::MatrixC((RavlN::SArray2dC< RavlN::RealT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  RavlN::RealT arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_MatrixC",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MatrixC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MatrixC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_MatrixC" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  result = (RavlN::MatrixC *)new RavlN::MatrixC(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  RavlN::RealT arg4 ;
  RavlN::RealT arg5 ;
  RavlN::RealT arg6 ;
  RavlN::RealT arg7 ;
  RavlN::RealT arg8 ;
  RavlN::RealT arg9 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_MatrixC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MatrixC" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MatrixC" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_MatrixC" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_MatrixC" "', argument " "5"" of type '" "RavlN::RealT""'");
  } 
  arg5 = static_cast< RavlN::RealT >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_MatrixC" "', argument " "6"" of type '" "RavlN::RealT""'");
  } 
  arg6 = static_cast< RavlN::RealT >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_MatrixC" "', argument " "7"" of type '" "RavlN::RealT""'");
  } 
  arg7 = static_cast< RavlN::RealT >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_MatrixC" "', argument " "8"" of type '" "RavlN::RealT""'");
  } 
  arg8 = static_cast< RavlN::RealT >(val8);
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_MatrixC" "', argument " "9"" of type '" "RavlN::RealT""'");
  } 
  arg9 = static_cast< RavlN::RealT >(val9);
  result = (RavlN::MatrixC *)new RavlN::MatrixC(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::FloatT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MatrixC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MatrixC" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::FloatT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::FloatT > * >(argp1);
  result = (RavlN::MatrixC *)new RavlN::MatrixC((RavlN::SArray2dC< RavlN::FloatT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MatrixC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MatrixC__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MatrixC__SWIG_7(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MatrixC__SWIG_8(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray2dCT_float_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MatrixC__SWIG_11(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_MatrixC__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_MatrixC__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_MatrixC__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_MatrixC__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__VectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_MatrixC__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_MatrixC__SWIG_9(self, args);
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_MatrixC__SWIG_10(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MatrixC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::MatrixC()\n"
    "    RavlN::MatrixC(RavlN::VectorC const &)\n"
    "    RavlN::MatrixC(RavlN::UIntT,RavlN::UIntT)\n"
    "    RavlN::MatrixC(RavlN::UIntT,RavlN::UIntT,RavlN::RealT const *)\n"
    "    RavlN::MatrixC(RavlN::UIntT,RavlN::UIntT,RavlN::RealT const &)\n"
    "    RavlN::MatrixC(RavlN::UIntT,RavlN::UIntT,RavlN::VectorC &)\n"
    "    RavlN::MatrixC(RavlN::SizeT,RavlN::SizeT,RavlN::VectorC const &)\n"
    "    RavlN::MatrixC(RavlN::TMatrixC< RavlN::RealT > const &)\n"
    "    RavlN::MatrixC(RavlN::SArray2dC< RavlN::RealT > const &)\n"
    "    RavlN::MatrixC(RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT)\n"
    "    RavlN::MatrixC(RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT,RavlN::RealT)\n"
    "    RavlN::MatrixC(RavlN::SArray2dC< RavlN::FloatT > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_Inverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_Inverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_Inverse" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = ((RavlN::MatrixC const *)arg1)->Inverse();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_InverseIP__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_InverseIP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_InverseIP" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_InverseIP" "', argument " "2"" of type '" "RavlN::RealT &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_InverseIP" "', argument " "2"" of type '" "RavlN::RealT &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealT * >(argp2);
  result = (bool)(arg1)->InverseIP(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_InverseIP__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_InverseIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_InverseIP" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = (bool)(arg1)->InverseIP();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_InverseIP(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MatrixC_InverseIP__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_double, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC_InverseIP__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC_InverseIP'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    InverseIP(RavlN::MatrixC *,RavlN::RealT &)\n"
    "    InverseIP(RavlN::MatrixC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_PseudoInverse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_PseudoInverse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_PseudoInverse" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC_PseudoInverse" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::MatrixC const *)arg1)->PseudoInverse(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_PseudoInverse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_PseudoInverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_PseudoInverse" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = ((RavlN::MatrixC const *)arg1)->PseudoInverse();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_PseudoInverse(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MatrixC_PseudoInverse__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC_PseudoInverse__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC_PseudoInverse'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    PseudoInverse(RavlN::MatrixC const *,RavlN::RealT)\n"
    "    PseudoInverse(RavlN::MatrixC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_Det(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_Det",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_Det" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = (RavlN::RealT)((RavlN::MatrixC const *)arg1)->Det();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_NormaliseRows(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_NormaliseRows",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_NormaliseRows" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  (arg1)->NormaliseRows();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_NormaliseColumns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_NormaliseColumns",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_NormaliseColumns" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  (arg1)->NormaliseColumns();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AddOuterProduct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  RavlN::TVectorC< float > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_AddOuterProduct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_AddOuterProduct" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MatrixC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< float > * >(argp3);
  result = (RavlN::TMatrixC< RavlN::RealT > *) &(arg1)->AddOuterProduct((RavlN::TVectorC< float > const &)*arg2,(RavlN::TVectorC< float > const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AddOuterProduct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::TVectorC< float > *arg2 = 0 ;
  RavlN::TVectorC< float > *arg3 = 0 ;
  float *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float temp4 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::TMatrixC< RavlN::RealT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:MatrixC_AddOuterProduct",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_AddOuterProduct" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::TVectorC< float > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__TVectorCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MatrixC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::TVectorC< float > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::TVectorC< float > * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MatrixC_AddOuterProduct" "', argument " "4"" of type '" "float""'");
  } 
  temp4 = static_cast< float >(val4);
  arg4 = &temp4;
  result = (RavlN::TMatrixC< RavlN::RealT > *) &(arg1)->AddOuterProduct((RavlN::TVectorC< float > const &)*arg2,(RavlN::TVectorC< float > const &)*arg3,(float const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__TMatrixCT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AsVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_AsVector",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_AsVector" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC_AsVector" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (arg1)->AsVector(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AsVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_AsVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_AsVector" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = (arg1)->AsVector();
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AsVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MatrixC_AsVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC_AsVector__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC_AsVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AsVector(RavlN::MatrixC *,bool)\n"
    "    AsVector(RavlN::MatrixC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___add__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___add__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___add__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = ((RavlN::MatrixC const *)arg1)->operator +((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___sub__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___sub__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___sub__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = ((RavlN::MatrixC const *)arg1)->operator -((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___mul__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___mul__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___mul__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = ((RavlN::MatrixC const *)arg1)->operator *((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___div__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___div__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___div__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = ((RavlN::MatrixC const *)arg1)->operator /((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___mul__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC___mul__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::MatrixC const *)arg1)->operator *((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___div__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC___div__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::MatrixC const *)arg1)->operator /((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_MatrixC___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___add__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC___add__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::MatrixC const *)arg1)->operator +((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_MatrixC___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___sub__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC___sub__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = ((RavlN::MatrixC const *)arg1)->operator -((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_MatrixC___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___iadd__" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___iadd__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___iadd__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = (RavlN::MatrixC *) &(arg1)->operator +=((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___isub__" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___isub__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___isub__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = (RavlN::MatrixC *) &(arg1)->operator -=((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___imul__" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___imul__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___imul__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = (RavlN::MatrixC *) &(arg1)->operator *=((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___idiv__" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___idiv__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___idiv__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = (RavlN::MatrixC *) &(arg1)->operator /=((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___iadd__" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC___iadd__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::MatrixC *) &(arg1)->operator +=((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::MatrixC *,RavlN::MatrixC const &)\n"
    "    operator +=(RavlN::MatrixC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___isub__" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC___isub__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::MatrixC *) &(arg1)->operator -=((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::MatrixC *,RavlN::MatrixC const &)\n"
    "    operator -=(RavlN::MatrixC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___imul__" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC___imul__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::MatrixC *) &(arg1)->operator *=((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC___imul__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator *=(RavlN::MatrixC *,RavlN::MatrixC const &)\n"
    "    operator *=(RavlN::MatrixC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___idiv__" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC___idiv__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::MatrixC *) &(arg1)->operator /=((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC___idiv__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator /=(RavlN::MatrixC *,RavlN::MatrixC const &)\n"
    "    operator /=(RavlN::MatrixC *,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___eq__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___eq__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___eq__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = (bool)((RavlN::MatrixC const *)arg1)->operator ==((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___ne__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___ne__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___ne__" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = (bool)((RavlN::MatrixC const *)arg1)->operator !=((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SumOfSqr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_SumOfSqr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SumOfSqr" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = (RavlN::RealT)((RavlN::MatrixC const *)arg1)->SumOfSqr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_Sum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_Sum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_Sum" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = (RavlN::RealT)((RavlN::MatrixC const *)arg1)->Sum();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SliceRow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::IndexC arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_SliceRow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SliceRow" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_SliceRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SliceRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->SliceRow(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetColumn__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_SetColumn",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SetColumn" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MatrixC_SetColumn" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetColumn" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  (arg1)->SetColumn(arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetRow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_SetRow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SetRow" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MatrixC_SetRow" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetRow" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  (arg1)->SetRow(arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetColumn__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::RealT *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  RavlN::RealT temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_SetColumn",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SetColumn" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetColumn" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MatrixC_SetColumn" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  temp3 = static_cast< RavlN::RealT >(val3);
  arg3 = &temp3;
  (arg1)->SetColumn(arg2,(RavlN::RealT const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetColumn(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__VectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MatrixC_SetColumn__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_MatrixC_SetColumn__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC_SetColumn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetColumn(RavlN::MatrixC *,RavlN::IndexC,RavlN::VectorC const &)\n"
    "    SetColumn(RavlN::MatrixC *,RavlN::IndexC,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetRow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::RealT *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  RavlN::RealT temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_SetRow",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SetRow" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetRow" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MatrixC_SetRow" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  temp3 = static_cast< RavlN::RealT >(val3);
  arg3 = &temp3;
  (arg1)->SetRow(arg2,(RavlN::RealT const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetRow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__VectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MatrixC_SetRow__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_MatrixC_SetRow__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC_SetRow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetRow(RavlN::MatrixC *,RavlN::IndexC,RavlN::VectorC const &)\n"
    "    SetRow(RavlN::MatrixC *,RavlN::IndexC,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetSubArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::Index2dC *arg2 = 0 ;
  RavlN::MatrixC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_SetSubArray",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SetSubArray" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__Index2dC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_SetSubArray" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetSubArray" "', argument " "2"" of type '" "RavlN::Index2dC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::Index2dC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MatrixC_SetSubArray" "', argument " "3"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetSubArray" "', argument " "3"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::MatrixC * >(argp3);
  (arg1)->SetSubArray((RavlN::Index2dC const &)*arg2,(RavlN::MatrixC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_Hash" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = ((RavlN::MatrixC const *)arg1)->Hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___mul____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC___mul__" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC___mul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC___mul__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::MatrixC const *)arg1)->operator *((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC___mul____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MatrixC___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_MatrixC_MulT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_MulT",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_MulT" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_MulT" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_MulT" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = ((RavlN::MatrixC const *)arg1)->MulT((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_TMul__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_TMul" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_TMul" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_TMul" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = ((RavlN::MatrixC const *)arg1)->TMul((RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_TMul__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_TMul" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_TMul" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_TMul" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::MatrixC const *)arg1)->TMul((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_TMul(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC_TMul__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixC_TMul__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC_TMul'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TMul(RavlN::MatrixC const *,RavlN::MatrixC const &)\n"
    "    TMul(RavlN::MatrixC const *,RavlN::VectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AAT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_AAT",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_AAT" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = ((RavlN::MatrixC const *)arg1)->AAT();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_ATA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_ATA",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_ATA" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = ((RavlN::MatrixC const *)arg1)->ATA();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_T(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_T",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_T" "', argument " "1"" of type '" "RavlN::MatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = ((RavlN::MatrixC const *)arg1)->T();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_Identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixC_Identity",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MatrixC_Identity" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = RavlN::MatrixC::Identity(arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetDiagonal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_SetDiagonal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SetDiagonal" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_SetDiagonal" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_SetDiagonal" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::MatrixC *) &(arg1)->SetDiagonal((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AddDiagonal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_AddDiagonal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_AddDiagonal" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_AddDiagonal" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddDiagonal" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::MatrixC *) &(arg1)->AddDiagonal((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SubMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::SizeT arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_SubMatrix",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SubMatrix" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC_SubMatrix" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MatrixC_SubMatrix" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (arg1)->SubMatrix(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AddOuterProduct__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_AddOuterProduct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_AddOuterProduct" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MatrixC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  result = (RavlN::MatrixC *) &(arg1)->AddOuterProduct((RavlN::VectorC const &)*arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AddOuterProduct__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::VectorC *arg3 = 0 ;
  RavlN::RealT *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  RavlN::RealT temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:MatrixC_AddOuterProduct",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_AddOuterProduct" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MatrixC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MatrixC_AddOuterProduct" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  temp4 = static_cast< RavlN::RealT >(val4);
  arg4 = &temp4;
  result = (RavlN::MatrixC *) &(arg1)->AddOuterProduct((RavlN::VectorC const &)*arg2,(RavlN::VectorC const &)*arg3,(RavlN::RealT const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_AddOuterProduct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MatrixC_AddOuterProduct__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__VectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MatrixC_AddOuterProduct__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__TVectorCT_float_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_MatrixC_AddOuterProduct__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__VectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_MatrixC_AddOuterProduct__SWIG_3(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixC_AddOuterProduct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddOuterProduct(RavlN::MatrixC *,RavlN::TVectorC< float > const &,RavlN::TVectorC< float > const &)\n"
    "    AddOuterProduct(RavlN::MatrixC *,RavlN::TVectorC< float > const &,RavlN::TVectorC< float > const &,float const &)\n"
    "    AddOuterProduct(RavlN::MatrixC *,RavlN::VectorC const &,RavlN::VectorC const &)\n"
    "    AddOuterProduct(RavlN::MatrixC *,RavlN::VectorC const &,RavlN::VectorC const &,RavlN::RealT const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_SetSmallToBeZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::RealT *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  RavlN::RealT temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixC_SetSmallToBeZero",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_SetSmallToBeZero" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixC_SetSmallToBeZero" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  temp2 = static_cast< RavlN::RealT >(val2);
  arg2 = &temp2;
  result = (RavlN::MatrixC *) &(arg1)->SetSmallToBeZero((RavlN::RealT const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixC_MulAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  RavlN::RealT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixC_MulAdd",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixC_MulAdd" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixC_MulAdd" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixC_MulAdd" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MatrixC_MulAdd" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  result = (RavlN::MatrixC *) &(arg1)->MulAdd((RavlN::MatrixC const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MatrixC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = (RavlN::MatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MatrixC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MatrixC" "', argument " "1"" of type '" "RavlN::MatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MatrixC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__MatrixC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Solve__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Solve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Solve" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Solve" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Solve" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Solve" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = RavlN::Solve((RavlN::MatrixC const &)*arg1,(RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SolveIP__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SolveIP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SolveIP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SolveIP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SolveIP" "', argument " "2"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SolveIP" "', argument " "2"" of type '" "RavlN::VectorC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (bool)RavlN::SolveIP(*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Solve__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Solve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Solve" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Solve" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Solve" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Solve" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = RavlN::Solve((RavlN::MatrixC const &)*arg1,(RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SolveIP__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SolveIP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SolveIP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SolveIP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SolveIP" "', argument " "2"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SolveIP" "', argument " "2"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = (bool)RavlN::SolveIP(*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SVD__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SVD",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SVD" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SVD" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = RavlN::SVD((RavlN::MatrixC const &)*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SVD_IP__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SVD_IP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SVD_IP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SVD_IP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = RavlN::SVD_IP(*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SVD__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  RavlN::MatrixC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SVD",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SVD" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SVD" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SVD" "', argument " "2"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SVD" "', argument " "2"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SVD" "', argument " "3"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SVD" "', argument " "3"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::MatrixC * >(argp3);
  result = RavlN::SVD((RavlN::MatrixC const &)*arg1,*arg2,*arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SVD(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SVD__SWIG_0(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SVD__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SVD'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SVD(RavlN::MatrixC const &)\n"
    "    RavlN::SVD(RavlN::MatrixC const &,RavlN::MatrixC &,RavlN::MatrixC &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SVD_IP__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  RavlN::MatrixC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SVD_IP",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SVD_IP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SVD_IP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SVD_IP" "', argument " "2"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SVD_IP" "', argument " "2"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SVD_IP" "', argument " "3"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SVD_IP" "', argument " "3"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::MatrixC * >(argp3);
  result = RavlN::SVD_IP(*arg1,*arg2,*arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SVD_IP(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SVD_IP__SWIG_0(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SVD_IP__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SVD_IP'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SVD_IP(RavlN::MatrixC &)\n"
    "    RavlN::SVD_IP(RavlN::MatrixC &,RavlN::MatrixC &,RavlN::MatrixC &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_EigenValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EigenValues",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EigenValues" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EigenValues" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = RavlN::EigenValues((RavlN::MatrixC const &)*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EigenValuesIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EigenValuesIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EigenValuesIP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EigenValuesIP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = RavlN::EigenValuesIP(*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FastEigenValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FastEigenValues",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastEigenValues" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FastEigenValues" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = RavlN::FastEigenValues(*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EigenVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EigenVectors",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EigenVectors" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EigenVectors" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EigenVectors" "', argument " "2"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EigenVectors" "', argument " "2"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = RavlN::EigenVectors((RavlN::MatrixC const &)*arg1,*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EigenVectorsIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EigenVectorsIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EigenVectorsIP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EigenVectorsIP" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = RavlN::EigenVectorsIP(*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FastEigenVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FastEigenVectors",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastEigenVectors" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FastEigenVectors" "', argument " "1"" of type '" "RavlN::MatrixC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = RavlN::FastEigenVectors(*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaxEigenValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MaxEigenValue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaxEigenValue" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MaxEigenValue" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaxEigenValue" "', argument " "2"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MaxEigenValue" "', argument " "2"" of type '" "RavlN::VectorC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)RavlN::MaxEigenValue((RavlN::MatrixC const &)*arg1,*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomMatrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  RavlN::RealT arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomMatrix",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "RandomMatrix" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomMatrix" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomMatrix" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  result = RavlN::RandomMatrix(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomMatrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomMatrix",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "RandomMatrix" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomMatrix" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = RavlN::RandomMatrix(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomMatrix(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_RandomMatrix__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RandomMatrix__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RandomMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::RandomMatrix(int,int,RavlN::RealT)\n"
    "    RavlN::RandomMatrix(int,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomSymmetricMatrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  RavlN::RealT arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomSymmetricMatrix",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "RandomSymmetricMatrix" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomSymmetricMatrix" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = RavlN::RandomSymmetricMatrix(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomSymmetricMatrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomSymmetricMatrix",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "RandomSymmetricMatrix" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = RavlN::RandomSymmetricMatrix(arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomSymmetricMatrix(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_RandomSymmetricMatrix__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_RandomSymmetricMatrix__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RandomSymmetricMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::RandomSymmetricMatrix(int,RavlN::RealT)\n"
    "    RavlN::RandomSymmetricMatrix(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomPositiveDefiniteMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomPositiveDefiniteMatrix",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "RandomPositiveDefiniteMatrix" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = RavlN::RandomPositiveDefiniteMatrix(arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixRUTC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MatrixRUTC")) SWIG_fail;
  result = (RavlN::MatrixRUTC *)new RavlN::MatrixRUTC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixRUTC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixRUTC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MatrixRUTC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MatrixRUTC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::MatrixRUTC *)new RavlN::MatrixRUTC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixRUTC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixRUTC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MatrixRUTC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MatrixRUTC" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MatrixRUTC" "', argument " "1"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixC * >(argp1);
  result = (RavlN::MatrixRUTC *)new RavlN::MatrixRUTC((RavlN::MatrixC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixRUTC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray2dC< RavlN::RealT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixRUTC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MatrixRUTC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray2dCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MatrixRUTC" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MatrixRUTC" "', argument " "1"" of type '" "RavlN::SArray2dC< RavlN::RealT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray2dC< RavlN::RealT > * >(argp1);
  result = (RavlN::MatrixRUTC *)new RavlN::MatrixRUTC((RavlN::SArray2dC< RavlN::RealT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MatrixRUTC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MatrixRUTC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MatrixRUTC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray2dCT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MatrixRUTC__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_MatrixRUTC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MatrixRUTC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::MatrixRUTC()\n"
    "    RavlN::MatrixRUTC(RavlN::SizeT)\n"
    "    RavlN::MatrixRUTC(RavlN::MatrixC const &)\n"
    "    RavlN::MatrixRUTC(RavlN::SArray2dC< RavlN::RealT > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_Inverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixRUTC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixRUTC_Inverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_Inverse" "', argument " "1"" of type '" "RavlN::MatrixRUTC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  result = ((RavlN::MatrixRUTC const *)arg1)->Inverse();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixRUTC(static_cast< const RavlN::MatrixRUTC& >(result))), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_InverseIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixRUTC_InverseIP",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_InverseIP" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  result = (bool)(arg1)->InverseIP();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_AddOuterProduct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixRUTC_AddOuterProduct",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_AddOuterProduct" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixRUTC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixRUTC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  (arg1)->AddOuterProduct((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_AddOuterProduct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::RealT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixRUTC_AddOuterProduct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_AddOuterProduct" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixRUTC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixRUTC_AddOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MatrixRUTC_AddOuterProduct" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  (arg1)->AddOuterProduct((RavlN::VectorC const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_AddOuterProduct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixRUTC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixRUTC_AddOuterProduct__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixRUTC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_MatrixRUTC_AddOuterProduct__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixRUTC_AddOuterProduct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddOuterProduct(RavlN::MatrixRUTC *,RavlN::VectorC const &)\n"
    "    AddOuterProduct(RavlN::MatrixRUTC *,RavlN::VectorC const &,RavlN::RealT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_SubtractOuterProduct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixRUTC_SubtractOuterProduct",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_SubtractOuterProduct" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixRUTC_SubtractOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixRUTC_SubtractOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  (arg1)->SubtractOuterProduct((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_SubtractOuterProduct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::RealT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MatrixRUTC_SubtractOuterProduct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_SubtractOuterProduct" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixRUTC_SubtractOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixRUTC_SubtractOuterProduct" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MatrixRUTC_SubtractOuterProduct" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  (arg1)->SubtractOuterProduct((RavlN::VectorC const &)*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_SubtractOuterProduct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixRUTC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MatrixRUTC_SubtractOuterProduct__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixRUTC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_MatrixRUTC_SubtractOuterProduct__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MatrixRUTC_SubtractOuterProduct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SubtractOuterProduct(RavlN::MatrixRUTC *,RavlN::VectorC const &)\n"
    "    SubtractOuterProduct(RavlN::MatrixRUTC *,RavlN::VectorC const &,RavlN::RealT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  RavlN::MatrixRUTC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixRUTC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixRUTC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC___iadd__" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixRUTC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixRUTC___iadd__" "', argument " "2"" of type '" "RavlN::MatrixRUTC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixRUTC___iadd__" "', argument " "2"" of type '" "RavlN::MatrixRUTC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixRUTC * >(argp2);
  result = (RavlN::MatrixRUTC *) &(arg1)->operator +=((RavlN::MatrixRUTC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  RavlN::MatrixRUTC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixRUTC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixRUTC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC___isub__" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixRUTC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MatrixRUTC___isub__" "', argument " "2"" of type '" "RavlN::MatrixRUTC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MatrixRUTC___isub__" "', argument " "2"" of type '" "RavlN::MatrixRUTC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixRUTC * >(argp2);
  result = (RavlN::MatrixRUTC *) &(arg1)->operator -=((RavlN::MatrixRUTC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixRUTC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixRUTC___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC___imul__" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixRUTC___imul__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::MatrixRUTC *) &(arg1)->operator *=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixRUTC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MatrixRUTC___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC___idiv__" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MatrixRUTC___idiv__" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (RavlN::MatrixRUTC *) &(arg1)->operator /=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_ZeroLowerLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixRUTC_ZeroLowerLeft",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_ZeroLowerLeft" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  (arg1)->ZeroLowerLeft();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_MakeSymmetric(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixRUTC_MakeSymmetric",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_MakeSymmetric" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  (arg1)->MakeSymmetric();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MatrixRUTC_Det(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MatrixRUTC_Det",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MatrixRUTC_Det" "', argument " "1"" of type '" "RavlN::MatrixRUTC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  result = (RavlN::RealT)((RavlN::MatrixRUTC const *)arg1)->Det();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MatrixRUTC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = (RavlN::MatrixRUTC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MatrixRUTC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MatrixRUTC" "', argument " "1"" of type '" "RavlN::MatrixRUTC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MatrixRUTC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OuterProductRUT__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixRUTC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OuterProductRUT",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OuterProductRUT" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OuterProductRUT" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = RavlN::OuterProductRUT((RavlN::VectorC const &)*arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixRUTC(static_cast< const RavlN::MatrixRUTC& >(result))), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OuterProductRUT__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixRUTC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OuterProductRUT",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OuterProductRUT" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OuterProductRUT" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OuterProductRUT" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = RavlN::OuterProductRUT((RavlN::VectorC const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixRUTC(static_cast< const RavlN::MatrixRUTC& >(result))), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OuterProductRUT(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_OuterProductRUT__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_OuterProductRUT__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'OuterProductRUT'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::OuterProductRUT(RavlN::VectorC const &)\n"
    "    RavlN::OuterProductRUT(RavlN::VectorC const &,RavlN::RealT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SolveIP__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SolveIP",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixRUTC,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SolveIP" "', argument " "1"" of type '" "RavlN::MatrixRUTC &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SolveIP" "', argument " "1"" of type '" "RavlN::MatrixRUTC &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SolveIP" "', argument " "2"" of type '" "RavlN::VectorC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SolveIP" "', argument " "2"" of type '" "RavlN::VectorC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (bool)RavlN::SolveIP(*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SolveIP(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixRUTC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SolveIP__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SolveIP__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SolveIP__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SolveIP'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SolveIP(RavlN::MatrixC &,RavlN::VectorC &)\n"
    "    RavlN::SolveIP(RavlN::MatrixC &,RavlN::MatrixC &)\n"
    "    RavlN::SolveIP(RavlN::MatrixRUTC &,RavlN::VectorC &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Solve__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MatrixRUTC *arg1 = 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Solve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MatrixRUTC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Solve" "', argument " "1"" of type '" "RavlN::MatrixRUTC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Solve" "', argument " "1"" of type '" "RavlN::MatrixRUTC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MatrixRUTC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Solve" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Solve" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = RavlN::Solve((RavlN::MatrixRUTC const &)*arg1,(RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Solve(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__MatrixRUTC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Solve__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Solve__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Solve__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Solve'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Solve(RavlN::MatrixC const &,RavlN::VectorC const &)\n"
    "    RavlN::Solve(RavlN::MatrixC const &,RavlN::MatrixC const &)\n"
    "    RavlN::Solve(RavlN::MatrixRUTC const &,RavlN::VectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMatrixC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_VectorMatrixC")) SWIG_fail;
  result = (RavlN::VectorMatrixC *)new RavlN::VectorMatrixC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorMatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMatrixC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorMatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VectorMatrixC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VectorMatrixC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = (RavlN::VectorMatrixC *)new RavlN::VectorMatrixC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorMatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMatrixC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  RavlN::MatrixC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorMatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_VectorMatrixC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorMatrixC" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorMatrixC" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VectorMatrixC" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorMatrixC" "', argument " "2"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MatrixC * >(argp2);
  result = (RavlN::VectorMatrixC *)new RavlN::VectorMatrixC((RavlN::VectorC const &)*arg1,(RavlN::MatrixC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorMatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMatrixC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorMatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_VectorMatrixC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorMatrixC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorMatrixC" "', argument " "1"" of type '" "RavlN::VectorMatrixC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorMatrixC" "', argument " "1"" of type '" "RavlN::VectorMatrixC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  result = (RavlN::VectorMatrixC *)new RavlN::VectorMatrixC((RavlN::VectorMatrixC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorMatrixC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMatrixC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_VectorMatrixC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__VectorMatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorMatrixC__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_VectorMatrixC__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_VectorMatrixC__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_VectorMatrixC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::VectorMatrixC()\n"
    "    RavlN::VectorMatrixC(RavlN::UIntT const)\n"
    "    RavlN::VectorMatrixC(RavlN::VectorC const &,RavlN::MatrixC const &)\n"
    "    RavlN::VectorMatrixC(RavlN::VectorMatrixC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_Vector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorMatrixC_Vector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMatrixC_Vector" "', argument " "1"" of type '" "RavlN::VectorMatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  result = (RavlN::VectorC *) &((RavlN::VectorMatrixC const *)arg1)->Vector();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_Matrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorMatrixC_Matrix",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMatrixC_Matrix" "', argument " "1"" of type '" "RavlN::VectorMatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  result = (RavlN::MatrixC *) &((RavlN::VectorMatrixC const *)arg1)->Matrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_Vector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorMatrixC_Vector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMatrixC_Vector" "', argument " "1"" of type '" "RavlN::VectorMatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  result = (RavlN::VectorC *) &(arg1)->Vector();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_Vector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorMatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_VectorMatrixC_Vector__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorMatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_VectorMatrixC_Vector__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorMatrixC_Vector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Vector(RavlN::VectorMatrixC const *)\n"
    "    Vector(RavlN::VectorMatrixC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_Matrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorMatrixC_Matrix",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMatrixC_Matrix" "', argument " "1"" of type '" "RavlN::VectorMatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  result = (RavlN::MatrixC *) &(arg1)->Matrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_Matrix(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorMatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_VectorMatrixC_Matrix__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__VectorMatrixC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_VectorMatrixC_Matrix__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'VectorMatrixC_Matrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Matrix(RavlN::VectorMatrixC const *)\n"
    "    Matrix(RavlN::VectorMatrixC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorMatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorMatrixC_Copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMatrixC_Copy" "', argument " "1"" of type '" "RavlN::VectorMatrixC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  result = ((RavlN::VectorMatrixC const *)arg1)->Copy();
  resultobj = SWIG_NewPointerObj((new RavlN::VectorMatrixC(static_cast< const RavlN::VectorMatrixC& >(result))), SWIGTYPE_p_RavlN__VectorMatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_SetZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorMatrixC_SetZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMatrixC_SetZero" "', argument " "1"" of type '" "RavlN::VectorMatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  (arg1)->SetZero();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC_Sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorMatrixC_Sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMatrixC_Sort" "', argument " "1"" of type '" "RavlN::VectorMatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  (arg1)->Sort();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMatrixC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VectorMatrixC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMatrixC___str__" "', argument " "1"" of type '" "RavlN::VectorMatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  result = (char *)RavlN_VectorMatrixC___str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorMatrixC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorMatrixC *arg1 = (RavlN::VectorMatrixC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VectorMatrixC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__VectorMatrixC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorMatrixC" "', argument " "1"" of type '" "RavlN::VectorMatrixC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorMatrixC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorMatrixC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__VectorMatrixC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MeanCovarianceC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MeanCovarianceC")) SWIG_fail;
  result = (RavlN::MeanCovarianceC *)new RavlN::MeanCovarianceC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MeanCovarianceC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MeanCovarianceC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::MeanCovarianceC *)new RavlN::MeanCovarianceC((RavlN::MeanCovarianceC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MeanCovarianceC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MeanCovarianceC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::MeanCovarianceC *)new RavlN::MeanCovarianceC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MeanCovarianceC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MeanCovarianceC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (RavlN::MeanCovarianceC *)new RavlN::MeanCovarianceC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MeanCovarianceC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::VectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MeanCovarianceC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::VectorC * >(argp1);
  result = (RavlN::MeanCovarianceC *)new RavlN::MeanCovarianceC((RavlN::VectorC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MeanCovarianceC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::MatrixC *arg3 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_MeanCovarianceC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MeanCovarianceC" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MeanCovarianceC" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__MatrixC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MeanCovarianceC" "', argument " "3"" of type '" "RavlN::MatrixC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MeanCovarianceC" "', argument " "3"" of type '" "RavlN::MatrixC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::MatrixC * >(argp3);
  result = (RavlN::MeanCovarianceC *)new RavlN::MeanCovarianceC(arg1,(RavlN::VectorC const &)*arg2,(RavlN::MatrixC const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MeanCovarianceC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_Copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Copy" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = ((RavlN::MeanCovarianceC const *)arg1)->Copy();
  resultobj = SWIG_NewPointerObj((new RavlN::MeanCovarianceC(static_cast< const RavlN::MeanCovarianceC& >(result))), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MeanCovarianceC__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MeanCovarianceC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MeanCovarianceC" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::MeanCovarianceC *)new RavlN::MeanCovarianceC((RavlN::SArray1dC< RavlN::VectorC > const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MeanCovarianceC__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MeanCovarianceC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (RavlN::MeanCovarianceC *)new RavlN::MeanCovarianceC((RavlN::SArray1dC< RavlN::VectorC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MeanCovarianceC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MeanCovarianceC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MeanCovarianceC__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__VectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MeanCovarianceC__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MeanCovarianceC__SWIG_7(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_MeanCovarianceC__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_MeanCovarianceC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_MeanCovarianceC__SWIG_6(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__MatrixC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_MeanCovarianceC__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MeanCovarianceC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::MeanCovarianceC()\n"
    "    RavlN::MeanCovarianceC(RavlN::MeanCovarianceC const &)\n"
    "    RavlN::MeanCovarianceC(RavlN::SizeT const)\n"
    "    RavlN::MeanCovarianceC(unsigned int const)\n"
    "    RavlN::MeanCovarianceC(RavlN::VectorC const &)\n"
    "    RavlN::MeanCovarianceC(RavlN::RealT,RavlN::VectorC const &,RavlN::MatrixC const &)\n"
    "    RavlN::MeanCovarianceC(RavlN::SArray1dC< RavlN::VectorC > const &,bool)\n"
    "    RavlN::MeanCovarianceC(RavlN::SArray1dC< RavlN::VectorC > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Number(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_Number",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Number" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::RealT)((RavlN::MeanCovarianceC const *)arg1)->Number();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Mean__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_Mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Mean" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::VectorC *) &((RavlN::MeanCovarianceC const *)arg1)->Mean();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Mean__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_Mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Mean" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::VectorC *) &(arg1)->Mean();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Mean(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MeanCovarianceC_Mean__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MeanCovarianceC_Mean__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MeanCovarianceC_Mean'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Mean(RavlN::MeanCovarianceC const *)\n"
    "    Mean(RavlN::MeanCovarianceC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Covariance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_Covariance",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Covariance" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::MatrixC *) &((RavlN::MeanCovarianceC const *)arg1)->Covariance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Covariance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_Covariance",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Covariance" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::MatrixC *) &(arg1)->Covariance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MatrixC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Covariance(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MeanCovarianceC_Covariance__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MeanCovarianceC_Covariance__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MeanCovarianceC_Covariance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Covariance(RavlN::MeanCovarianceC const *)\n"
    "    Covariance(RavlN::MeanCovarianceC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_SetZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_SetZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_SetZero" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::MeanCovarianceC *) &(arg1)->SetZero();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MeanCovarianceC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC___iadd__" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC___iadd__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC___iadd__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::MeanCovarianceC *) &(arg1)->operator +=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MeanCovarianceC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC___isub__" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC___isub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC___isub__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::MeanCovarianceC *) &(arg1)->operator -=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MeanCovarianceC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC___iadd__" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC___iadd__" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC___iadd__" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  result = (RavlN::MeanCovarianceC *) &(arg1)->operator +=((RavlN::MeanCovarianceC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MeanCovarianceC___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MeanCovarianceC___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MeanCovarianceC___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::MeanCovarianceC *,RavlN::VectorC const &)\n"
    "    operator +=(RavlN::MeanCovarianceC *,RavlN::MeanCovarianceC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MeanCovarianceC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC___isub__" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC___isub__" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC___isub__" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  result = (RavlN::MeanCovarianceC *) &(arg1)->operator -=((RavlN::MeanCovarianceC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MeanCovarianceC___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MeanCovarianceC___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MeanCovarianceC___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::MeanCovarianceC *,RavlN::VectorC const &)\n"
    "    operator -=(RavlN::MeanCovarianceC *,RavlN::MeanCovarianceC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MeanCovarianceC_Add",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Add" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC_Add" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC_Add" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MeanCovarianceC_Add" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC_Add" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  result = (RavlN::MeanCovarianceC *) &(arg1)->Add((RavlN::VectorC const &)*arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Remove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MeanCovarianceC_Remove",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Remove" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC_Remove" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC_Remove" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MeanCovarianceC_Remove" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC_Remove" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  result = (RavlN::MeanCovarianceC *) &(arg1)->Remove((RavlN::VectorC const &)*arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_SetSum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  RavlN::MeanCovarianceC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MeanCovarianceC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MeanCovarianceC_SetSum",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_SetSum" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC_SetSum" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC_SetSum" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MeanCovarianceC_SetSum" "', argument " "3"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC_SetSum" "', argument " "3"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp3);
  result = (RavlN::MeanCovarianceC *) &(arg1)->SetSum((RavlN::MeanCovarianceC const &)*arg2,(RavlN::MeanCovarianceC const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MeanCovarianceC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MeanCovarianceC___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC___mul__" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC___mul__" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC___mul__" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  result = ((RavlN::MeanCovarianceC const *)arg1)->operator *((RavlN::MeanCovarianceC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MeanCovarianceC(static_cast< const RavlN::MeanCovarianceC& >(result))), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Gauss(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MeanCovarianceC_Gauss",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Gauss" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC_Gauss" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC_Gauss" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)((RavlN::MeanCovarianceC const *)arg1)->Gauss((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_MahalanobisDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MeanCovarianceC_MahalanobisDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_MahalanobisDistance" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MeanCovarianceC_MahalanobisDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MeanCovarianceC_MahalanobisDistance" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::RealT)((RavlN::MeanCovarianceC const *)arg1)->MahalanobisDistance((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_ClearCache(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_ClearCache",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_ClearCache" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  (arg1)->ClearCache();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC_Hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC_Hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC_Hash" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::UIntT)((RavlN::MeanCovarianceC const *)arg1)->Hash();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MeanCovarianceC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MeanCovarianceC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MeanCovarianceC___str__" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (char *)RavlN_MeanCovarianceC___str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MeanCovarianceC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = (RavlN::MeanCovarianceC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MeanCovarianceC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MeanCovarianceC" "', argument " "1"" of type '" "RavlN::MeanCovarianceC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MeanCovarianceC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Affine2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Affine2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Affine2dC")) SWIG_fail;
  result = (RavlN::Affine2dC *)new RavlN::Affine2dC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__Affine2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Affine2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::Affine2dC *arg1 = (RavlN::Affine2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Affine2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__Affine2dC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Affine2dC" "', argument " "1"" of type '" "RavlN::Affine2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::Affine2dC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Affine2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__Affine2dC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DateC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DateC")) SWIG_fail;
  result = (RavlN::DateC *)new RavlN::DateC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_NowUTC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC result;
  
  if (!PyArg_ParseTuple(args,(char *)":DateC_NowUTC")) SWIG_fail;
  result = RavlN::DateC::NowUTC();
  resultobj = SWIG_NewPointerObj((new RavlN::DateC(static_cast< const RavlN::DateC& >(result))), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_NowLocal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC result;
  
  if (!PyArg_ParseTuple(args,(char *)":DateC_NowLocal")) SWIG_fail;
  result = RavlN::DateC::NowLocal();
  resultobj = SWIG_NewPointerObj((new RavlN::DateC(static_cast< const RavlN::DateC& >(result))), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_NowVirtual(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC result;
  
  if (!PyArg_ParseTuple(args,(char *)":DateC_NowVirtual")) SWIG_fail;
  result = RavlN::DateC::NowVirtual();
  resultobj = SWIG_NewPointerObj((new RavlN::DateC(static_cast< const RavlN::DateC& >(result))), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_TimeZoneOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC result;
  
  if (!PyArg_ParseTuple(args,(char *)":DateC_TimeZoneOffset")) SWIG_fail;
  result = RavlN::DateC::TimeZoneOffset();
  resultobj = SWIG_NewPointerObj((new RavlN::DateC(static_cast< const RavlN::DateC& >(result))), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool arg2 ;
  bool val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_DateC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DateC" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DateC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (RavlN::DateC *)new RavlN::DateC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DateC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  result = (RavlN::DateC *)new RavlN::DateC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  RavlN::IntT arg4 ;
  RavlN::IntT arg5 ;
  RavlN::IntT arg6 ;
  RavlN::IntT arg7 ;
  bool arg8 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_DateC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DateC" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DateC" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DateC" "', argument " "4"" of type '" "RavlN::IntT""'");
  } 
  arg4 = static_cast< RavlN::IntT >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DateC" "', argument " "5"" of type '" "RavlN::IntT""'");
  } 
  arg5 = static_cast< RavlN::IntT >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_DateC" "', argument " "6"" of type '" "RavlN::IntT""'");
  } 
  arg6 = static_cast< RavlN::IntT >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_DateC" "', argument " "7"" of type '" "RavlN::IntT""'");
  } 
  arg7 = static_cast< RavlN::IntT >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_DateC" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  RavlN::IntT arg4 ;
  RavlN::IntT arg5 ;
  RavlN::IntT arg6 ;
  RavlN::IntT arg7 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_DateC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DateC" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DateC" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DateC" "', argument " "4"" of type '" "RavlN::IntT""'");
  } 
  arg4 = static_cast< RavlN::IntT >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DateC" "', argument " "5"" of type '" "RavlN::IntT""'");
  } 
  arg5 = static_cast< RavlN::IntT >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_DateC" "', argument " "6"" of type '" "RavlN::IntT""'");
  } 
  arg6 = static_cast< RavlN::IntT >(val6);
  ecode7 = SWIG_AsVal_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_DateC" "', argument " "7"" of type '" "RavlN::IntT""'");
  } 
  arg7 = static_cast< RavlN::IntT >(val7);
  result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  RavlN::IntT arg4 ;
  RavlN::IntT arg5 ;
  RavlN::IntT arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_DateC",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DateC" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DateC" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DateC" "', argument " "4"" of type '" "RavlN::IntT""'");
  } 
  arg4 = static_cast< RavlN::IntT >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DateC" "', argument " "5"" of type '" "RavlN::IntT""'");
  } 
  arg5 = static_cast< RavlN::IntT >(val5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_DateC" "', argument " "6"" of type '" "RavlN::IntT""'");
  } 
  arg6 = static_cast< RavlN::IntT >(val6);
  result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  RavlN::IntT arg4 ;
  RavlN::IntT arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_DateC",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DateC" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DateC" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DateC" "', argument " "4"" of type '" "RavlN::IntT""'");
  } 
  arg4 = static_cast< RavlN::IntT >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DateC" "', argument " "5"" of type '" "RavlN::IntT""'");
  } 
  arg5 = static_cast< RavlN::IntT >(val5);
  result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  RavlN::IntT arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_DateC",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DateC" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DateC" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DateC" "', argument " "4"" of type '" "RavlN::IntT""'");
  } 
  arg4 = static_cast< RavlN::IntT >(val4);
  result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::IntT arg1 ;
  RavlN::IntT arg2 ;
  RavlN::IntT arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_DateC",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::IntT""'");
  } 
  arg1 = static_cast< RavlN::IntT >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DateC" "', argument " "2"" of type '" "RavlN::IntT""'");
  } 
  arg2 = static_cast< RavlN::IntT >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DateC" "', argument " "3"" of type '" "RavlN::IntT""'");
  } 
  arg3 = static_cast< RavlN::IntT >(val3);
  result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  long arg1 ;
  long arg2 ;
  long val1 ;
  int ecode1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_DateC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DateC" "', argument " "1"" of type '" "long""'");
  } 
  arg1 = static_cast< long >(val1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DateC" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DateC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DateC" "', argument " "1"" of type '" "RavlN::DateC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::DateC *)new RavlN::DateC((RavlN::DateC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC__SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DateC",&obj0)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  result = (RavlN::DateC *)new RavlN::DateC((RavlN::StringC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DateC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 8); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DateC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DateC__SWIG_11(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_DateC__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DateC__SWIG_12(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_DateC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_DateC__SWIG_10(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_DateC__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_DateC__SWIG_9(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_DateC__SWIG_8(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_DateC__SWIG_7(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_DateC__SWIG_6(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_DateC__SWIG_5(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_DateC__SWIG_4(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DateC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DateC()\n"
    "    RavlN::DateC(bool,bool)\n"
    "    RavlN::DateC(bool)\n"
    "    RavlN::DateC(RavlN::RealT)\n"
    "    RavlN::DateC(RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,bool)\n"
    "    RavlN::DateC(RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT)\n"
    "    RavlN::DateC(RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT)\n"
    "    RavlN::DateC(RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT)\n"
    "    RavlN::DateC(RavlN::IntT,RavlN::IntT,RavlN::IntT,RavlN::IntT)\n"
    "    RavlN::DateC(RavlN::IntT,RavlN::IntT,RavlN::IntT)\n"
    "    RavlN::DateC(long,long)\n"
    "    RavlN::DateC(RavlN::DateC const &)\n"
    "    RavlN::DateC(RavlN::StringC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_IsLeapYear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_IsLeapYear",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DateC_IsLeapYear" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (bool)RavlN::DateC::IsLeapYear(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_YearToDaysSince1970(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_YearToDaysSince1970",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DateC_YearToDaysSince1970" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)RavlN::DateC::YearToDaysSince1970(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_IsValid" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (bool)((RavlN::DateC const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_IsZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_IsZero",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_IsZero" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (bool)((RavlN::DateC const *)arg1)->IsZero();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_SetInvalid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_SetInvalid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_SetInvalid" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  (arg1)->SetInvalid();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_SetToNow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_SetToNow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_SetToNow" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_SetToNow" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetToNow(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_SetToNow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_SetToNow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_SetToNow" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  (arg1)->SetToNow();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_SetToNow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_SetToNow__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_SetToNow__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_SetToNow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetToNow(RavlN::DateC *,bool)\n"
    "    SetToNow(RavlN::DateC *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_MaxUSeconds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_MaxUSeconds",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_MaxUSeconds" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (long)((RavlN::DateC const *)arg1)->MaxUSeconds();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Resolution(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Resolution",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Resolution" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (long)((RavlN::DateC const *)arg1)->Resolution();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_NormalisePos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_NormalisePos",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_NormalisePos" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  (arg1)->NormalisePos();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_NormaliseNeg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_NormaliseNeg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_NormaliseNeg" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  (arg1)->NormaliseNeg();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___eq__" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___eq__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___eq__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = (bool)((RavlN::DateC const *)arg1)->operator ==((RavlN::DateC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___ne__" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___ne__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___ne__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = (bool)((RavlN::DateC const *)arg1)->operator !=((RavlN::DateC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___gt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___gt__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___gt__" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___gt__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___gt__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = (bool)((RavlN::DateC const *)arg1)->operator >((RavlN::DateC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___lt__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___lt__" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___lt__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___lt__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = (bool)((RavlN::DateC const *)arg1)->operator <((RavlN::DateC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___ge__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___ge__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___ge__" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___ge__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___ge__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = (bool)((RavlN::DateC const *)arg1)->operator >=((RavlN::DateC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___le__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___le__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___le__" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___le__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___le__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = (bool)((RavlN::DateC const *)arg1)->operator <=((RavlN::DateC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DateC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___add__" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___add__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___add__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = ((RavlN::DateC const *)arg1)->operator +((RavlN::DateC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::DateC(static_cast< const RavlN::DateC& >(result))), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DateC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___sub__" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___sub__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___sub__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = ((RavlN::DateC const *)arg1)->operator -((RavlN::DateC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::DateC(static_cast< const RavlN::DateC& >(result))), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___isub__" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___isub__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___isub__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = (RavlN::DateC *) &(arg1)->operator -=((RavlN::DateC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___isub__" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC___isub__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (RavlN::DateC *) &(arg1)->operator -=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DateC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DateC___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC___isub__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator -=(RavlN::DateC *,RavlN::DateC const &)\n"
    "    operator -=(RavlN::DateC *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::DateC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___iadd__" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DateC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DateC___iadd__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DateC___iadd__" "', argument " "2"" of type '" "RavlN::DateC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DateC * >(argp2);
  result = (RavlN::DateC *) &(arg1)->operator +=((RavlN::DateC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DateC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC___iadd__" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC___iadd__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (RavlN::DateC *) &(arg1)->operator +=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DateC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DateC___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC___iadd__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    operator +=(RavlN::DateC *,RavlN::DateC const &)\n"
    "    operator +=(RavlN::DateC *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Text",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Text" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = ((RavlN::DateC const *)arg1)->Text();
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_ODBC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_ODBC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_ODBC" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_ODBC" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((RavlN::DateC const *)arg1)->ODBC(arg2);
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_ODBC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_ODBC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_ODBC" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = ((RavlN::DateC const *)arg1)->ODBC();
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_ODBC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_ODBC__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_ODBC__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_ODBC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ODBC(RavlN::DateC const *,bool)\n"
    "    ODBC(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_SetODBC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  RavlN::StringC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_SetODBC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_SetODBC" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  result = (bool)(arg1)->SetODBC((RavlN::StringC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_CTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_CTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_CTime" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_CTime" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((RavlN::DateC const *)arg1)->CTime(arg2);
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_CTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_CTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_CTime" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = ((RavlN::DateC const *)arg1)->CTime();
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_CTime(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_CTime__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_CTime__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_CTime'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTime(RavlN::DateC const *,bool)\n"
    "    CTime(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_CTimeShort__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_CTimeShort",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_CTimeShort" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_CTimeShort" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((RavlN::DateC const *)arg1)->CTimeShort(arg2);
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_CTimeShort__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_CTimeShort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_CTimeShort" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = ((RavlN::DateC const *)arg1)->CTimeShort();
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_CTimeShort(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_CTimeShort__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_CTimeShort__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_CTimeShort'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CTimeShort(RavlN::DateC const *,bool)\n"
    "    CTimeShort(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_USeconds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_USeconds",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_USeconds" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (long)((RavlN::DateC const *)arg1)->USeconds();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_TotalSeconds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_TotalSeconds",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_TotalSeconds" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (long)((RavlN::DateC const *)arg1)->TotalSeconds();
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Double(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Double",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Double" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (double)((RavlN::DateC const *)arg1)->Double();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Seconds__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_Seconds",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Seconds" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_Seconds" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Seconds(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Seconds__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Seconds",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Seconds" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Seconds();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Seconds(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_Seconds__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_Seconds__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_Seconds'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Seconds(RavlN::DateC const *,bool)\n"
    "    Seconds(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Minute__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_Minute",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Minute" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_Minute" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Minute(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Minute__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Minute",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Minute" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Minute();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Minute(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_Minute__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_Minute__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_Minute'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Minute(RavlN::DateC const *,bool)\n"
    "    Minute(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Hour__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_Hour",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Hour" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_Hour" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Hour(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Hour__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Hour",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Hour" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Hour();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Hour(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_Hour__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_Hour__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_Hour'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Hour(RavlN::DateC const *,bool)\n"
    "    Hour(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Month__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_Month",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Month" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_Month" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Month(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Month__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Month",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Month" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Month();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Month(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_Month__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_Month__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_Month'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Month(RavlN::DateC const *,bool)\n"
    "    Month(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Year__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_Year",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Year" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_Year" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Year(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Year__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Year",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Year" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Year();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Year(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_Year__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_Year__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_Year'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Year(RavlN::DateC const *,bool)\n"
    "    Year(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInMonth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_DayInMonth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_DayInMonth" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_DayInMonth" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInMonth(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInMonth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_DayInMonth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_DayInMonth" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInMonth();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInMonth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_DayInMonth__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_DayInMonth__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_DayInMonth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    DayInMonth(RavlN::DateC const *,bool)\n"
    "    DayInMonth(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInYear__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_DayInYear",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_DayInYear" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_DayInYear" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInYear(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInYear__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_DayInYear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_DayInYear" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInYear();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInYear(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_DayInYear__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_DayInYear__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_DayInYear'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    DayInYear(RavlN::DateC const *,bool)\n"
    "    DayInYear(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInWeek__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_DayInWeek",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_DayInWeek" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_DayInWeek" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInWeek(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInWeek__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::IntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_DayInWeek",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_DayInWeek" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInWeek();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DayInWeek(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_DayInWeek__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_DayInWeek__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_DayInWeek'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    DayInWeek(RavlN::DateC const *,bool)\n"
    "    DayInWeek(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_TextDayInWeek__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DateC_TextDayInWeek",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_TextDayInWeek" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DateC_TextDayInWeek" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((RavlN::DateC const *)arg1)->TextDayInWeek(arg2);
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_TextDayInWeek__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::StringC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_TextDayInWeek",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_TextDayInWeek" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = ((RavlN::DateC const *)arg1)->TextDayInWeek();
  {
    resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_TextDayInWeek(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DateC_TextDayInWeek__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DateC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DateC_TextDayInWeek__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DateC_TextDayInWeek'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TextDayInWeek(RavlN::DateC const *,bool)\n"
    "    TextDayInWeek(RavlN::DateC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_DaylightSaving(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_DaylightSaving",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_DaylightSaving" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (bool)((RavlN::DateC const *)arg1)->DaylightSaving();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DateC_Wait(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DateC_Wait",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DateC_Wait" "', argument " "1"" of type '" "RavlN::DateC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  result = (bool)((RavlN::DateC const *)arg1)->Wait();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DateC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DateC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DateC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DateC" "', argument " "1"" of type '" "RavlN::DateC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DateC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DateC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DateC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_HashInt64Int64C__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_HashInt64Int64C",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_HashInt64Int64C" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashC< RavlN::Int64T,RavlN::Int64T >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__HashCT_long_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HashInt64Int64C__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_HashInt64Int64C")) SWIG_fail;
  result = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashC< RavlN::Int64T,RavlN::Int64T >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__HashCT_long_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HashInt64Int64C(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_HashInt64Int64C__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_HashInt64Int64C__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_HashInt64Int64C'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::HashC< RavlN::Int64T,RavlN::Int64T >(RavlN::UIntT)\n"
    "    RavlN::HashC< RavlN::Int64T,RavlN::Int64T >()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Lookup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  long *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  long temp3 ;
  int res3 = SWIG_TMPOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  arg3 = &temp3;
  if (!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Lookup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Lookup" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Lookup" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (bool)((RavlN::HashC< RavlN::Int64T,RavlN::Int64T > const *)arg1)->Lookup((long const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsTmpObj(res3)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_long((*arg3)));
  } else {
    int new_flags = SWIG_IsNewObj(res3) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_long, new_flags));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Update__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  long *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  long temp3 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:HashInt64Int64C_Update",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Update" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Update" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HashInt64Int64C_Update" "', argument " "3"" of type '" "long""'");
  } 
  temp3 = static_cast< long >(val3);
  arg3 = &temp3;
  result = (bool)(arg1)->Update((long const &)*arg2,(long const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Update__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Update",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Update" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Update" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (long *) &(arg1)->Update((long const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Update(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_HashInt64Int64C_Update__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_HashInt64Int64C_Update__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'HashInt64Int64C_Update'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Update(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &,long const &)\n"
    "    Update(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Insert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  long *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  long temp3 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:HashInt64Int64C_Insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Insert" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Insert" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HashInt64Int64C_Insert" "', argument " "3"" of type '" "long""'");
  } 
  temp3 = static_cast< long >(val3);
  arg3 = &temp3;
  result = (bool)(arg1)->Insert((long const &)*arg2,(long const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Access__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  long *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  long temp3 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:HashInt64Int64C_Access",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Access" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Access" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HashInt64Int64C_Access" "', argument " "3"" of type '" "long""'");
  } 
  temp3 = static_cast< long >(val3);
  arg3 = &temp3;
  result = (long *) &(arg1)->Access((long const &)*arg2,(long const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Access__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Access",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Access" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Access" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (long *) &(arg1)->Access((long const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Access(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_HashInt64Int64C_Access__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_HashInt64Int64C_Access__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'HashInt64Int64C_Access'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Access(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &,long const &)\n"
    "    Access(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_AccessCopy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  long *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  long temp3 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:HashInt64Int64C_AccessCopy",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_AccessCopy" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_AccessCopy" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HashInt64Int64C_AccessCopy" "', argument " "3"" of type '" "long""'");
  } 
  temp3 = static_cast< long >(val3);
  arg3 = &temp3;
  result = (long *) &(arg1)->AccessCopy((long const &)*arg2,(long const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_AccessCopy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_AccessCopy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_AccessCopy" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_AccessCopy" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (long *) &(arg1)->AccessCopy((long const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_AccessCopy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_HashInt64Int64C_AccessCopy__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_HashInt64Int64C_AccessCopy__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'HashInt64Int64C_AccessCopy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AccessCopy(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &,long const &)\n"
    "    AccessCopy(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Del__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:HashInt64Int64C_Del",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Del" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Del" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HashInt64Int64C_Del" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)(arg1)->Del((long const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Del__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Del",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Del" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Del" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (bool)(arg1)->Del((long const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Del(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_HashInt64Int64C_Del__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_HashInt64Int64C_Del__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'HashInt64Int64C_Del'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Del(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &,bool)\n"
    "    Del(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:HashInt64Int64C_Get",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Get" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Get" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HashInt64Int64C_Get" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (long)(arg1)->Get((long const &)*arg2,arg3);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Get",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Get" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Get" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (long)(arg1)->Get((long const &)*arg2);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_HashInt64Int64C_Get__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_HashInt64Int64C_Get__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'HashInt64Int64C_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Get(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &,bool)\n"
    "    Get(RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *,long const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  long *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long temp2 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_IsElm",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_IsElm" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_IsElm" "', argument " "2"" of type '" "long""'");
  } 
  temp2 = static_cast< long >(val2);
  arg2 = &temp2;
  result = (bool)((RavlN::HashC< RavlN::Int64T,RavlN::Int64T > const *)arg1)->IsElm((long const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64C_Empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Empty" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  (arg1)->Empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Bins(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64C_Bins",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Bins" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  result = (RavlN::UIntT)((RavlN::HashC< RavlN::Int64T,RavlN::Int64T > const *)arg1)->Bins();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64C_Resize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  RavlN::SizeT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64C_Resize" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HashInt64Int64C_Resize" "', argument " "2"" of type '" "RavlN::SizeT""'");
  } 
  arg2 = static_cast< RavlN::SizeT >(val2);
  (arg1)->Resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_HashInt64Int64C(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_HashInt64Int64C",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashCT_long_long_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HashInt64Int64C" "', argument " "1"" of type '" "RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *HashInt64Int64C_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__HashCT_long_long_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_HashInt64Int64IterC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_HashInt64Int64IterC")) SWIG_fail;
  result = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__HashIterCT_long_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HashInt64Int64IterC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashC< long,long > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_HashInt64Int64IterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__HashCT_long_long_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_HashInt64Int64IterC" "', argument " "1"" of type '" "RavlN::HashC< long,long > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_HashInt64Int64IterC" "', argument " "1"" of type '" "RavlN::HashC< long,long > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashC< long,long > * >(argp1);
  result = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T >((RavlN::HashC< long,long > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__HashIterCT_long_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HashInt64Int64IterC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< long,long > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_HashInt64Int64IterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__HashIterCT_long_long_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_HashInt64Int64IterC" "', argument " "1"" of type '" "RavlN::HashIterC< long,long > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_HashInt64Int64IterC" "', argument " "1"" of type '" "RavlN::HashIterC< long,long > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< long,long > * >(argp1);
  result = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T >((RavlN::HashIterC< long,long > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__HashIterCT_long_long_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HashInt64Int64IterC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_HashInt64Int64IterC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__HashCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_HashInt64Int64IterC__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_HashInt64Int64IterC__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_HashInt64Int64IterC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T >()\n"
    "    RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T >(RavlN::HashC< long,long > const &)\n"
    "    RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T >(RavlN::HashIterC< long,long > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64IterC_First(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64IterC_First" "', argument " "1"" of type '" "RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  result = (bool)(arg1)->First();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64IterC_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64IterC_Next" "', argument " "1"" of type '" "RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  result = (bool)(arg1)->Next();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64IterC_IsElm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_IsElm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64IterC_IsElm" "', argument " "1"" of type '" "RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  result = (bool)((RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > const *)arg1)->IsElm();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64IterC_Key(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Key",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64IterC_Key" "', argument " "1"" of type '" "RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  result = (long *) &((RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > const *)arg1)->Key();
  resultobj = SWIG_From_long(static_cast< long >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64IterC_Data__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64IterC_Data" "', argument " "1"" of type '" "RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  result = (long *) &((RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > const *)arg1)->Data();
  resultobj = SWIG_From_long(static_cast< long >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64IterC_Data__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64IterC_Data" "', argument " "1"" of type '" "RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  result = (long *) &(arg1)->Data();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64IterC_Data(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_HashInt64Int64IterC_Data__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_HashInt64Int64IterC_Data__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'HashInt64Int64IterC_Data'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Data(RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > const *)\n"
    "    Data(RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_HashInt64Int64IterC_Del(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Del",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashIterCT_long_long_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HashInt64Int64IterC_Del" "', argument " "1"" of type '" "RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  result = (bool)(arg1)->Del();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_HashInt64Int64IterC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_HashInt64Int64IterC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__HashIterCT_long_long_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HashInt64Int64IterC" "', argument " "1"" of type '" "RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *HashInt64Int64IterC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__HashIterCT_long_long_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DPIPortImageByteC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DPIPortImageByteC")) SWIG_fail;
  result = (RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *)new RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DPIPortImageByteC_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *arg1 = (RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *) 0 ;
  RavlImageN::ImageC< RavlN::ByteT > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DPIPortImageByteC_Get",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DPIPortImageByteC_Get" "', argument " "1"" of type '" "RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DPIPortImageByteC_Get" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::ByteT > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DPIPortImageByteC_Get" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::ByteT > &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp2);
  result = (bool)(arg1)->Get(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DPIPortImageByteC_SetAttr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *arg1 = (RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *) 0 ;
  RavlN::StringC *arg2 = 0 ;
  RavlN::StringC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DPIPortImageByteC_SetAttr",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DPIPortImageByteC_SetAttr" "', argument " "1"" of type '" "RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  {
    arg3 = new RavlN::StringC(PyString_AsString(obj2));
  }
  result = (bool)(arg1)->SetAttr((RavlN::StringC const &)*arg2,(RavlN::StringC const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DPIPortImageByteC_GetAttr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *arg1 = (RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *) 0 ;
  RavlN::StringC *arg2 = 0 ;
  RavlN::StringC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DPIPortImageByteC_GetAttr",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DPIPortImageByteC_GetAttr" "', argument " "1"" of type '" "RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__StringC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DPIPortImageByteC_GetAttr" "', argument " "3"" of type '" "RavlN::StringC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DPIPortImageByteC_GetAttr" "', argument " "3"" of type '" "RavlN::StringC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::StringC * >(argp3);
  result = (bool)(arg1)->GetAttr((RavlN::StringC const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DPIPortImageByteC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *arg1 = (RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DPIPortImageByteC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DPIPortImageByteC" "', argument " "1"" of type '" "RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DPIPortImageByteC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OpenISequence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *arg1 = 0 ;
  RavlN::StringC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OpenISequence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpenISequence" "', argument " "1"" of type '" "RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpenISequence" "', argument " "1"" of type '" "RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  result = (bool)RavlN::OpenISequence(*arg1,(RavlN::StringC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysLogOpen__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  int arg5 ;
  bool arg6 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:SysLogOpen",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysLogOpen" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SysLogOpen" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SysLogOpen" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "SysLogOpen" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "SysLogOpen" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (bool)RavlN::SysLogOpen((RavlN::StringC const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysLogOpen__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  int arg5 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:SysLogOpen",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysLogOpen" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SysLogOpen" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SysLogOpen" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "SysLogOpen" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (bool)RavlN::SysLogOpen((RavlN::StringC const &)*arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysLogOpen__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SysLogOpen",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysLogOpen" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SysLogOpen" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SysLogOpen" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)RavlN::SysLogOpen((RavlN::StringC const &)*arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysLogOpen__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SysLogOpen",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysLogOpen" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SysLogOpen" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)RavlN::SysLogOpen((RavlN::StringC const &)*arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysLogOpen__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  bool arg2 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SysLogOpen",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysLogOpen" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)RavlN::SysLogOpen((RavlN::StringC const &)*arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysLogOpen__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SysLogOpen",&obj0)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  result = (bool)RavlN::SysLogOpen((RavlN::StringC const &)*arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysLogOpen(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SysLogOpen__SWIG_5(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SysLogOpen__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SysLogOpen__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_SysLogOpen__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_SysLogOpen__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_SysLogOpen__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SysLogOpen'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SysLogOpen(RavlN::StringC const &,bool,bool,bool,int,bool)\n"
    "    RavlN::SysLogOpen(RavlN::StringC const &,bool,bool,bool,int)\n"
    "    RavlN::SysLogOpen(RavlN::StringC const &,bool,bool,bool)\n"
    "    RavlN::SysLogOpen(RavlN::StringC const &,bool,bool)\n"
    "    RavlN::SysLogOpen(RavlN::StringC const &,bool)\n"
    "    RavlN::SysLogOpen(RavlN::StringC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionC_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::FunctionC *arg1 = (RavlN::FunctionC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:FunctionC_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__FunctionC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionC_Apply" "', argument " "1"" of type '" "RavlN::FunctionC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::FunctionC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FunctionC_Apply" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FunctionC_Apply" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::FunctionC const *)arg1)->Apply((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionC_InputSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::FunctionC *arg1 = (RavlN::FunctionC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FunctionC_InputSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__FunctionC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionC_InputSize" "', argument " "1"" of type '" "RavlN::FunctionC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::FunctionC * >(argp1);
  result = (RavlN::UIntT)((RavlN::FunctionC const *)arg1)->InputSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionC_OutputSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::FunctionC *arg1 = (RavlN::FunctionC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FunctionC_OutputSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__FunctionC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionC_OutputSize" "', argument " "1"" of type '" "RavlN::FunctionC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::FunctionC * >(argp1);
  result = (RavlN::UIntT)((RavlN::FunctionC const *)arg1)->OutputSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::FunctionC *arg1 = (RavlN::FunctionC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FunctionC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__FunctionC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionC___str__" "', argument " "1"" of type '" "RavlN::FunctionC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::FunctionC * >(argp1);
  result = (char *)RavlN_FunctionC___str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FunctionC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::FunctionC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_FunctionC")) SWIG_fail;
  result = (RavlN::FunctionC *)new RavlN::FunctionC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__FunctionC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FunctionC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::FunctionC *arg1 = (RavlN::FunctionC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_FunctionC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__FunctionC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FunctionC" "', argument " "1"" of type '" "RavlN::FunctionC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::FunctionC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FunctionC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__FunctionC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SampleOfUInt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleOfUInt",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SampleOfUInt" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SampleC< RavlN::UIntT > *)new RavlN::SampleC< RavlN::UIntT >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleOfUInt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SampleOfUInt")) SWIG_fail;
  result = (RavlN::SampleC< RavlN::UIntT > *)new RavlN::SampleC< RavlN::UIntT >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleOfUInt__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< unsigned int > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleC< RavlN::UIntT > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleOfUInt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SampleOfUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleOfUInt" "', argument " "1"" of type '" "RavlN::SArray1dC< unsigned int > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< unsigned int > * >(argp1);
  result = (RavlN::SampleC< RavlN::UIntT > *)new RavlN::SampleC< RavlN::UIntT >((RavlN::SArray1dC< unsigned int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleOfUInt(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SampleOfUInt__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SampleOfUInt__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SampleOfUInt__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SampleOfUInt'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SampleC< RavlN::UIntT >(RavlN::SizeT)\n"
    "    RavlN::SampleC< RavlN::UIntT >()\n"
    "    RavlN::SampleC< RavlN::UIntT >(RavlN::SArray1dC< unsigned int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_Copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Copy" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (arg1)->Copy();
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< unsigned int >(static_cast< const RavlN::SampleC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_CompactFrom__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SampleC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleOfUInt_CompactFrom",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_CompactFrom" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfUInt_CompactFrom" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfUInt_CompactFrom" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SampleOfUInt_CompactFrom" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (arg1)->CompactFrom(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< unsigned int >(static_cast< const RavlN::SampleC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_CompactFrom__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SampleC< unsigned int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleOfUInt_CompactFrom",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_CompactFrom" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfUInt_CompactFrom" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfUInt_CompactFrom" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SampleOfUInt_CompactFrom" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = ((RavlN::SampleC< RavlN::UIntT > const *)arg1)->CompactFrom(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< unsigned int >(static_cast< const RavlN::SampleC< unsigned int >& >(result))), SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_CompactFrom(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SampleOfUInt_CompactFrom__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SampleOfUInt_CompactFrom__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfUInt_CompactFrom'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CompactFrom(RavlN::SampleC< RavlN::UIntT > *,RavlN::IndexC,RavlN::SizeT)\n"
    "    CompactFrom(RavlN::SampleC< RavlN::UIntT > const *,RavlN::IndexC,RavlN::SizeT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_ExtractEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt_ExtractEntry",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_ExtractEntry" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt_ExtractEntry" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (unsigned int)(arg1)->ExtractEntry(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Append" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt_Append" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (arg1)->Append((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Fill" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt_Fill" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  (arg1)->Fill((unsigned int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  RavlN::SampleC< unsigned int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Append" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfUInt_Append" "', argument " "2"" of type '" "RavlN::SampleC< unsigned int > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfUInt_Append" "', argument " "2"" of type '" "RavlN::SampleC< unsigned int > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< unsigned int > * >(argp2);
  result = (arg1)->Append((RavlN::SampleC< unsigned int > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleOfUInt_Append__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SampleOfUInt_Append__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfUInt_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::SampleC< RavlN::UIntT > *,unsigned int const &)\n"
    "    Append(RavlN::SampleC< RavlN::UIntT > *,RavlN::SampleC< unsigned int > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  unsigned int *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt___iadd__" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt___iadd__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  temp2 = static_cast< unsigned int >(val2);
  arg2 = &temp2;
  result = (arg1)->operator +=((unsigned int const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Size" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = ((RavlN::SampleC< RavlN::UIntT > const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_PickElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt_PickElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_PickElement" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt_PickElement" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (unsigned int)(arg1)->PickElement(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Nth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Nth" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt_Nth" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (unsigned int *) &(arg1)->Nth(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Nth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Nth" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt_Nth" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (unsigned int *) &((RavlN::SampleC< RavlN::UIntT > const *)arg1)->Nth(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Nth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SampleOfUInt_Nth__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SampleOfUInt_Nth__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfUInt_Nth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Nth(RavlN::SampleC< RavlN::UIntT > *,RavlN::UIntT)\n"
    "    Nth(RavlN::SampleC< RavlN::UIntT > const *,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Pick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_Pick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Pick" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (unsigned int)(arg1)->Pick();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Sample__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_Sample",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Sample" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (unsigned int *) &((RavlN::SampleC< RavlN::UIntT > const *)arg1)->Sample();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Sample__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_Sample",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Sample" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (unsigned int *) &(arg1)->Sample();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Sample(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfUInt_Sample__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfUInt_Sample__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfUInt_Sample'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Sample(RavlN::SampleC< RavlN::UIntT > const *)\n"
    "    Sample(RavlN::SampleC< RavlN::UIntT > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_First__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_First" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (unsigned int *) &(arg1)->First();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_First__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_First" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (unsigned int *) &((RavlN::SampleC< RavlN::UIntT > const *)arg1)->First();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_First(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfUInt_First__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfUInt_First__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfUInt_First'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    First(RavlN::SampleC< RavlN::UIntT > *)\n"
    "    First(RavlN::SampleC< RavlN::UIntT > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Last__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Last" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (unsigned int *) &(arg1)->Last();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Last__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_Last" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (unsigned int *) &((RavlN::SampleC< RavlN::UIntT > const *)arg1)->Last();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_Last(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfUInt_Last__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfUInt_Last__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfUInt_Last'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Last(RavlN::SampleC< RavlN::UIntT > *)\n"
    "    Last(RavlN::SampleC< RavlN::UIntT > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_IsEmpty" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (bool)((RavlN::SampleC< RavlN::UIntT > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt_IsValid" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (bool)((RavlN::SampleC< RavlN::UIntT > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfUInt___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt___getitem__" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (unsigned int *) &RavlN_SampleC_Sl_RavlN_UIntT_Sg____getitem__((RavlN::SampleC< unsigned int > const *)arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  size_t arg2 ;
  unsigned int *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  unsigned int temp3 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleOfUInt___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt___setitem__" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfUInt___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SampleOfUInt___setitem__" "', argument " "3"" of type '" "unsigned int""'");
  } 
  temp3 = static_cast< unsigned int >(val3);
  arg3 = &temp3;
  RavlN_SampleC_Sl_RavlN_UIntT_Sg____setitem__(arg1,arg2,(unsigned int const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfUInt___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfUInt___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfUInt___str__" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (char *)RavlN_SampleC_Sl_RavlN_UIntT_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SampleOfUInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = (RavlN::SampleC< RavlN::UIntT > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SampleOfUInt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SampleOfUInt" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SampleOfUInt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SampleOfVectorC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleOfVectorC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SampleOfVectorC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SampleC< RavlN::VectorC > *)new RavlN::SampleC< RavlN::VectorC >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleOfVectorC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SampleOfVectorC")) SWIG_fail;
  result = (RavlN::SampleC< RavlN::VectorC > *)new RavlN::SampleC< RavlN::VectorC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleOfVectorC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleC< RavlN::VectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleOfVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SampleOfVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleOfVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (RavlN::SampleC< RavlN::VectorC > *)new RavlN::SampleC< RavlN::VectorC >((RavlN::SArray1dC< RavlN::VectorC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleOfVectorC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SampleOfVectorC__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SampleOfVectorC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SampleOfVectorC__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SampleOfVectorC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SampleC< RavlN::VectorC >(RavlN::SizeT)\n"
    "    RavlN::SampleC< RavlN::VectorC >()\n"
    "    RavlN::SampleC< RavlN::VectorC >(RavlN::SArray1dC< RavlN::VectorC > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_Copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Copy" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (arg1)->Copy();
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< RavlN::VectorC >(static_cast< const RavlN::SampleC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_CompactFrom__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SampleC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleOfVectorC_CompactFrom",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_CompactFrom" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfVectorC_CompactFrom" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfVectorC_CompactFrom" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SampleOfVectorC_CompactFrom" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = (arg1)->CompactFrom(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< RavlN::VectorC >(static_cast< const RavlN::SampleC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_CompactFrom__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::IndexC arg2 ;
  RavlN::SizeT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SampleC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleOfVectorC_CompactFrom",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_CompactFrom" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__IndexC,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfVectorC_CompactFrom" "', argument " "2"" of type '" "RavlN::IndexC""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfVectorC_CompactFrom" "', argument " "2"" of type '" "RavlN::IndexC""'");
    } else {
      RavlN::IndexC * temp = reinterpret_cast< RavlN::IndexC * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SampleOfVectorC_CompactFrom" "', argument " "3"" of type '" "RavlN::SizeT""'");
  } 
  arg3 = static_cast< RavlN::SizeT >(val3);
  result = ((RavlN::SampleC< RavlN::VectorC > const *)arg1)->CompactFrom(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< RavlN::VectorC >(static_cast< const RavlN::SampleC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_CompactFrom(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SampleOfVectorC_CompactFrom__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__IndexC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SampleOfVectorC_CompactFrom__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfVectorC_CompactFrom'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CompactFrom(RavlN::SampleC< RavlN::VectorC > *,RavlN::IndexC,RavlN::SizeT)\n"
    "    CompactFrom(RavlN::SampleC< RavlN::VectorC > const *,RavlN::IndexC,RavlN::SizeT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_ExtractEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC_ExtractEntry",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_ExtractEntry" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfVectorC_ExtractEntry" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (arg1)->ExtractEntry(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Append" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfVectorC_Append" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfVectorC_Append" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (arg1)->Append((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC_Fill",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Fill" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfVectorC_Fill" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfVectorC_Fill" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  (arg1)->Fill((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Append" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfVectorC_Append" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfVectorC_Append" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  result = (arg1)->Append((RavlN::SampleC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__VectorC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleOfVectorC_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleOfVectorC_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfVectorC_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::SampleC< RavlN::VectorC > *,RavlN::VectorC const &)\n"
    "    Append(RavlN::SampleC< RavlN::VectorC > *,RavlN::SampleC< RavlN::VectorC > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC___iadd__" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleOfVectorC___iadd__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfVectorC___iadd__" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (arg1)->operator +=((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SizeT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Size" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = ((RavlN::SampleC< RavlN::VectorC > const *)arg1)->Size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_PickElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC_PickElement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_PickElement" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfVectorC_PickElement" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (arg1)->PickElement(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Nth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Nth" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfVectorC_Nth" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (RavlN::VectorC *) &(arg1)->Nth(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Nth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC_Nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Nth" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfVectorC_Nth" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = (RavlN::VectorC *) &((RavlN::SampleC< RavlN::VectorC > const *)arg1)->Nth(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Nth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SampleOfVectorC_Nth__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SampleOfVectorC_Nth__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfVectorC_Nth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Nth(RavlN::SampleC< RavlN::VectorC > *,RavlN::UIntT)\n"
    "    Nth(RavlN::SampleC< RavlN::VectorC > const *,RavlN::UIntT)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Pick(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_Pick",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Pick" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (arg1)->Pick();
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Sample__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_Sample",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Sample" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (RavlN::VectorC *) &((RavlN::SampleC< RavlN::VectorC > const *)arg1)->Sample();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Sample__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_Sample",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Sample" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (RavlN::VectorC *) &(arg1)->Sample();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Sample(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfVectorC_Sample__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfVectorC_Sample__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfVectorC_Sample'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Sample(RavlN::SampleC< RavlN::VectorC > const *)\n"
    "    Sample(RavlN::SampleC< RavlN::VectorC > *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_First__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_First" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (RavlN::VectorC *) &(arg1)->First();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_First__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_First",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_First" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (RavlN::VectorC *) &((RavlN::SampleC< RavlN::VectorC > const *)arg1)->First();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_First(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfVectorC_First__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfVectorC_First__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfVectorC_First'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    First(RavlN::SampleC< RavlN::VectorC > *)\n"
    "    First(RavlN::SampleC< RavlN::VectorC > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Last__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Last" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (RavlN::VectorC *) &(arg1)->Last();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Last__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_Last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_Last" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (RavlN::VectorC *) &((RavlN::SampleC< RavlN::VectorC > const *)arg1)->Last();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_Last(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfVectorC_Last__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleOfVectorC_Last__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleOfVectorC_Last'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Last(RavlN::SampleC< RavlN::VectorC > *)\n"
    "    Last(RavlN::SampleC< RavlN::VectorC > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_IsEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_IsEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_IsEmpty" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (bool)((RavlN::SampleC< RavlN::VectorC > const *)arg1)->IsEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC_IsValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC_IsValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC_IsValid" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (bool)((RavlN::SampleC< RavlN::VectorC > const *)arg1)->IsValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleOfVectorC___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC___getitem__" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfVectorC___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (RavlN::VectorC *) &RavlN_SampleC_Sl_RavlN_VectorC_Sg____getitem__((RavlN::SampleC< RavlN::VectorC > const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__VectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  size_t arg2 ;
  RavlN::VectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleOfVectorC___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC___setitem__" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleOfVectorC___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SampleOfVectorC___setitem__" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleOfVectorC___setitem__" "', argument " "3"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::VectorC * >(argp3);
  RavlN_SampleC_Sl_RavlN_VectorC_Sg____setitem__(arg1,arg2,(RavlN::VectorC const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleOfVectorC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleOfVectorC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleOfVectorC___str__" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (char *)RavlN_SampleC_Sl_RavlN_VectorC_Sg____str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SampleOfVectorC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = (RavlN::SampleC< RavlN::VectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SampleOfVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SampleOfVectorC" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SampleOfVectorC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SampleVectorC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleVectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleVectorC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SampleVectorC *)new RavlN::SampleVectorC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleVectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleVectorC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SampleVectorC")) SWIG_fail;
  result = (RavlN::SampleVectorC *)new RavlN::SampleVectorC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleVectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleVectorC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::VectorC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleVectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::VectorC > * >(argp1);
  result = (RavlN::SampleVectorC *)new RavlN::SampleVectorC((RavlN::SArray1dC< RavlN::VectorC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleVectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleVectorC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleVectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  result = (RavlN::SampleVectorC *)new RavlN::SampleVectorC((RavlN::SampleC< RavlN::VectorC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleVectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleVectorC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::VectorC > *arg1 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SampleVectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SampleVectorC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SampleVectorC" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleVectorC" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp2);
  result = (RavlN::SampleVectorC *)new RavlN::SampleVectorC((RavlN::SampleC< RavlN::VectorC > const &)*arg1,(RavlN::SArray1dC< RavlN::IndexC > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleVectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleVectorC__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::MeanCovarianceC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleVectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleVectorC" "', argument " "1"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp1);
  result = (RavlN::SampleVectorC *)new RavlN::SampleVectorC((RavlN::MeanCovarianceC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleVectorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleVectorC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SampleVectorC__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SampleVectorC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SampleVectorC__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SampleVectorC__SWIG_5(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SampleVectorC__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SampleVectorC__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SampleVectorC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SampleVectorC(RavlN::SizeT)\n"
    "    RavlN::SampleVectorC()\n"
    "    RavlN::SampleVectorC(RavlN::SArray1dC< RavlN::VectorC > const &)\n"
    "    RavlN::SampleVectorC(RavlN::SampleC< RavlN::VectorC > const &)\n"
    "    RavlN::SampleVectorC(RavlN::SampleC< RavlN::VectorC > const &,RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    RavlN::SampleVectorC(RavlN::MeanCovarianceC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_VectorSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleVectorC_VectorSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_VectorSize" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  result = (RavlN::UIntT)((RavlN::SampleVectorC const *)arg1)->VectorSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_Mean__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleVectorC_Mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_Mean" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  result = ((RavlN::SampleVectorC const *)arg1)->Mean();
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_Mean__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::SampleC< RavlN::RealT > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleVectorC_Mean",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_Mean" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_Mean" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_Mean" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::RealT > * >(argp2);
  result = ((RavlN::SampleVectorC const *)arg1)->Mean((RavlN::SampleC< RavlN::RealT > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_Mean(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleVectorC_Mean__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleVectorC_Mean__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleVectorC_Mean'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Mean(RavlN::SampleVectorC const *)\n"
    "    Mean(RavlN::SampleVectorC const *,RavlN::SampleC< RavlN::RealT > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_MeanCovariance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MeanCovarianceC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleVectorC_MeanCovariance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_MeanCovariance" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleVectorC_MeanCovariance" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((RavlN::SampleVectorC const *)arg1)->MeanCovariance(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MeanCovarianceC(static_cast< const RavlN::MeanCovarianceC& >(result))), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_MeanCovariance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MeanCovarianceC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleVectorC_MeanCovariance",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_MeanCovariance" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  result = ((RavlN::SampleVectorC const *)arg1)->MeanCovariance();
  resultobj = SWIG_NewPointerObj((new RavlN::MeanCovarianceC(static_cast< const RavlN::MeanCovarianceC& >(result))), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_MeanCovariance__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::SampleC< RavlN::RealT > *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MeanCovarianceC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleVectorC_MeanCovariance",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_MeanCovariance" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_MeanCovariance" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_MeanCovariance" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::RealT > * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SampleVectorC_MeanCovariance" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = ((RavlN::SampleVectorC const *)arg1)->MeanCovariance((RavlN::SampleC< RavlN::RealT > const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::MeanCovarianceC(static_cast< const RavlN::MeanCovarianceC& >(result))), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_MeanCovariance__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::SampleC< RavlN::RealT > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MeanCovarianceC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleVectorC_MeanCovariance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_MeanCovariance" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_MeanCovariance" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_MeanCovariance" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::RealT > * >(argp2);
  result = ((RavlN::SampleVectorC const *)arg1)->MeanCovariance((RavlN::SampleC< RavlN::RealT > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MeanCovarianceC(static_cast< const RavlN::MeanCovarianceC& >(result))), SWIGTYPE_p_RavlN__MeanCovarianceC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_MeanCovariance(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleVectorC_MeanCovariance__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleVectorC_MeanCovariance__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SampleVectorC_MeanCovariance__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SampleVectorC_MeanCovariance__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleVectorC_MeanCovariance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    MeanCovariance(RavlN::SampleVectorC const *,bool)\n"
    "    MeanCovariance(RavlN::SampleVectorC const *)\n"
    "    MeanCovariance(RavlN::SampleVectorC const *,RavlN::SampleC< RavlN::RealT > const &,bool)\n"
    "    MeanCovariance(RavlN::SampleVectorC const *,RavlN::SampleC< RavlN::RealT > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_SumOuterProducts__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixRUTC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleVectorC_SumOuterProducts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_SumOuterProducts" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  result = ((RavlN::SampleVectorC const *)arg1)->SumOuterProducts();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixRUTC(static_cast< const RavlN::MatrixRUTC& >(result))), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_TMul__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleVectorC_TMul",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_TMul" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_TMul" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_TMul" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  result = ((RavlN::SampleVectorC const *)arg1)->TMul((RavlN::SampleC< RavlN::VectorC > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_SumOuterProducts__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::SampleC< RavlN::RealT > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixRUTC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleVectorC_SumOuterProducts",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_SumOuterProducts" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_SumOuterProducts" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_SumOuterProducts" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::RealT > * >(argp2);
  result = ((RavlN::SampleVectorC const *)arg1)->SumOuterProducts((RavlN::SampleC< RavlN::RealT > const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixRUTC(static_cast< const RavlN::MatrixRUTC& >(result))), SWIGTYPE_p_RavlN__MatrixRUTC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_SumOuterProducts(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleVectorC_SumOuterProducts__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleVectorC_SumOuterProducts__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleVectorC_SumOuterProducts'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SumOuterProducts(RavlN::SampleVectorC const *)\n"
    "    SumOuterProducts(RavlN::SampleVectorC const *,RavlN::SampleC< RavlN::RealT > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_TMul__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  RavlN::SampleC< RavlN::RealT > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleVectorC_TMul",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_TMul" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_TMul" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_TMul" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SampleVectorC_TMul" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_TMul" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::RealT > * >(argp3);
  result = ((RavlN::SampleVectorC const *)arg1)->TMul((RavlN::SampleC< RavlN::VectorC > const &)*arg2,(RavlN::SampleC< RavlN::RealT > const &)*arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_TMul(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleVectorC_TMul__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SampleVectorC_TMul__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleVectorC_TMul'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TMul(RavlN::SampleVectorC const *,RavlN::SampleC< RavlN::VectorC > const &)\n"
    "    TMul(RavlN::SampleVectorC const *,RavlN::SampleC< RavlN::VectorC > const &,RavlN::SampleC< RavlN::RealT > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_Normalise__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleVectorC_Normalise",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_Normalise" "', argument " "1"" of type '" "RavlN::SampleVectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_Normalise" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_Normalise" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  (arg1)->Normalise((RavlN::MeanCovarianceC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_Normalise__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::FunctionC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleVectorC_Normalise",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_Normalise" "', argument " "1"" of type '" "RavlN::SampleVectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__FunctionC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_Normalise" "', argument " "2"" of type '" "RavlN::FunctionC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_Normalise" "', argument " "2"" of type '" "RavlN::FunctionC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::FunctionC * >(argp2);
  (arg1)->Normalise((RavlN::FunctionC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_UndoNormalisation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleVectorC_UndoNormalisation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "1"" of type '" "RavlN::SampleVectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_UndoNormalisation" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  (arg1)->UndoNormalisation((RavlN::MeanCovarianceC const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_Normalise__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  RavlN::SampleVectorC *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SampleVectorC_Normalise",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_Normalise" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_Normalise" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_Normalise" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleVectorC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SampleVectorC_Normalise" "', argument " "3"" of type '" "RavlN::SampleVectorC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_Normalise" "', argument " "3"" of type '" "RavlN::SampleVectorC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleVectorC * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SampleVectorC_Normalise" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ((RavlN::SampleVectorC const *)arg1)->Normalise((RavlN::MeanCovarianceC const &)*arg2,*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_Normalise__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  RavlN::SampleVectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleVectorC_Normalise",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_Normalise" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_Normalise" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_Normalise" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleVectorC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SampleVectorC_Normalise" "', argument " "3"" of type '" "RavlN::SampleVectorC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_Normalise" "', argument " "3"" of type '" "RavlN::SampleVectorC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleVectorC * >(argp3);
  ((RavlN::SampleVectorC const *)arg1)->Normalise((RavlN::MeanCovarianceC const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_Normalise(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleVectorC_Normalise__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__FunctionC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleVectorC_Normalise__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SampleVectorC_Normalise__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_SampleVectorC_Normalise__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleVectorC_Normalise'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Normalise(RavlN::SampleVectorC *,RavlN::MeanCovarianceC const &)\n"
    "    Normalise(RavlN::SampleVectorC *,RavlN::FunctionC const &)\n"
    "    Normalise(RavlN::SampleVectorC const *,RavlN::MeanCovarianceC const &,RavlN::SampleVectorC &,bool)\n"
    "    Normalise(RavlN::SampleVectorC const *,RavlN::MeanCovarianceC const &,RavlN::SampleVectorC &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_UndoNormalisation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  RavlN::SampleVectorC *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SampleVectorC_UndoNormalisation",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_UndoNormalisation" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleVectorC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "3"" of type '" "RavlN::SampleVectorC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_UndoNormalisation" "', argument " "3"" of type '" "RavlN::SampleVectorC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleVectorC * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ((RavlN::SampleVectorC const *)arg1)->UndoNormalisation((RavlN::MeanCovarianceC const &)*arg2,*arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_UndoNormalisation__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  RavlN::MeanCovarianceC *arg2 = 0 ;
  RavlN::SampleVectorC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleVectorC_UndoNormalisation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "1"" of type '" "RavlN::SampleVectorC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__MeanCovarianceC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_UndoNormalisation" "', argument " "2"" of type '" "RavlN::MeanCovarianceC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::MeanCovarianceC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleVectorC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SampleVectorC_UndoNormalisation" "', argument " "3"" of type '" "RavlN::SampleVectorC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleVectorC_UndoNormalisation" "', argument " "3"" of type '" "RavlN::SampleVectorC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleVectorC * >(argp3);
  ((RavlN::SampleVectorC const *)arg1)->UndoNormalisation((RavlN::MeanCovarianceC const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleVectorC_UndoNormalisation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SampleVectorC_UndoNormalisation__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SampleVectorC_UndoNormalisation__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__MeanCovarianceC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_RavlN__SampleVectorC, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_SampleVectorC_UndoNormalisation__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleVectorC_UndoNormalisation'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    UndoNormalisation(RavlN::SampleVectorC *,RavlN::MeanCovarianceC const &)\n"
    "    UndoNormalisation(RavlN::SampleVectorC const *,RavlN::MeanCovarianceC const &,RavlN::SampleVectorC &,bool)\n"
    "    UndoNormalisation(RavlN::SampleVectorC const *,RavlN::MeanCovarianceC const &,RavlN::SampleVectorC &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SampleVectorC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = (RavlN::SampleVectorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SampleVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleVectorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SampleVectorC" "', argument " "1"" of type '" "RavlN::SampleVectorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SampleVectorC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SampleVectorC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SampleLabelC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SizeT arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleLabelC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SampleLabelC" "', argument " "1"" of type '" "RavlN::SizeT""'");
  } 
  arg1 = static_cast< RavlN::SizeT >(val1);
  result = (RavlN::SampleLabelC *)new RavlN::SampleLabelC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleLabelC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SampleLabelC")) SWIG_fail;
  result = (RavlN::SampleLabelC *)new RavlN::SampleLabelC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleLabelC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::UIntT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleLabelC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SampleLabelC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleLabelC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::UIntT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::UIntT > * >(argp1);
  result = (RavlN::SampleLabelC *)new RavlN::SampleLabelC((RavlN::SArray1dC< RavlN::UIntT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleLabelC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleC< RavlN::UIntT > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SampleLabelC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SampleLabelC" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SampleLabelC" "', argument " "1"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp1);
  result = (RavlN::SampleLabelC *)new RavlN::SampleLabelC((RavlN::SampleC< RavlN::UIntT > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SampleLabelC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SampleLabelC__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SampleLabelC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SampleLabelC__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SampleLabelC__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SampleLabelC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::SampleLabelC(RavlN::SizeT)\n"
    "    RavlN::SampleLabelC()\n"
    "    RavlN::SampleLabelC(RavlN::SArray1dC< RavlN::UIntT > const &)\n"
    "    RavlN::SampleLabelC(RavlN::SampleC< RavlN::UIntT > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_MaxValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleLabelC_MaxValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_MaxValue" "', argument " "1"" of type '" "RavlN::SampleLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  result = (RavlN::UIntT)((RavlN::SampleLabelC const *)arg1)->MaxValue();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_LabelSums(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::UIntT > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleLabelC_LabelSums",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_LabelSums" "', argument " "1"" of type '" "RavlN::SampleLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  result = ((RavlN::SampleLabelC const *)arg1)->LabelSums();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::UIntT >(static_cast< const RavlN::SArray1dC< RavlN::UIntT >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_SampleVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  RavlN::IntT arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::SampleC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SampleLabelC_SampleVector",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_SampleVector" "', argument " "1"" of type '" "RavlN::SampleLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleLabelC_SampleVector" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SampleLabelC_SampleVector" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SampleLabelC_SampleVector" "', argument " "4"" of type '" "RavlN::IntT""'");
  } 
  arg4 = static_cast< RavlN::IntT >(val4);
  result = ((RavlN::SampleLabelC const *)arg1)->SampleVector(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< RavlN::VectorC >(static_cast< const RavlN::SampleC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_SampleVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  RavlN::RealT arg2 ;
  RavlN::RealT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::SampleC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleLabelC_SampleVector",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_SampleVector" "', argument " "1"" of type '" "RavlN::SampleLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleLabelC_SampleVector" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SampleLabelC_SampleVector" "', argument " "3"" of type '" "RavlN::RealT""'");
  } 
  arg3 = static_cast< RavlN::RealT >(val3);
  result = ((RavlN::SampleLabelC const *)arg1)->SampleVector(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< RavlN::VectorC >(static_cast< const RavlN::SampleC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_SampleVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::SampleC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SampleLabelC_SampleVector",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_SampleVector" "', argument " "1"" of type '" "RavlN::SampleLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleLabelC_SampleVector" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = ((RavlN::SampleLabelC const *)arg1)->SampleVector(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< RavlN::VectorC >(static_cast< const RavlN::SampleC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_SampleVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleLabelC_SampleVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_SampleVector" "', argument " "1"" of type '" "RavlN::SampleLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  result = ((RavlN::SampleLabelC const *)arg1)->SampleVector();
  resultobj = SWIG_NewPointerObj((new RavlN::SampleC< RavlN::VectorC >(static_cast< const RavlN::SampleC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_SampleVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleLabelC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SampleLabelC_SampleVector__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleLabelC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SampleLabelC_SampleVector__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleLabelC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SampleLabelC_SampleVector__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__SampleLabelC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_SampleLabelC_SampleVector__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'SampleLabelC_SampleVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SampleVector(RavlN::SampleLabelC const *,RavlN::RealT,RavlN::RealT,RavlN::IntT)\n"
    "    SampleVector(RavlN::SampleLabelC const *,RavlN::RealT,RavlN::RealT)\n"
    "    SampleVector(RavlN::SampleLabelC const *,RavlN::RealT)\n"
    "    SampleVector(RavlN::SampleLabelC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_SetClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::StringC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleLabelC_SetClassName",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_SetClassName" "', argument " "1"" of type '" "RavlN::SampleLabelC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleLabelC_SetClassName" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  {
    arg3 = new RavlN::StringC(PyString_AsString(obj2));
  }
  result = (bool)(arg1)->SetClassName(arg2,(RavlN::StringC const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_GetClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  RavlN::UIntT arg2 ;
  RavlN::StringC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SampleLabelC_GetClassName",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_GetClassName" "', argument " "1"" of type '" "RavlN::SampleLabelC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SampleLabelC_GetClassName" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__StringC,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SampleLabelC_GetClassName" "', argument " "3"" of type '" "RavlN::StringC &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SampleLabelC_GetClassName" "', argument " "3"" of type '" "RavlN::StringC &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::StringC * >(argp3);
  result = (bool)(arg1)->GetClassName(arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SampleLabelC_Label2ClassNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::RCHashC< RavlN::UIntT,RavlN::StringC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SampleLabelC_Label2ClassNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SampleLabelC_Label2ClassNames" "', argument " "1"" of type '" "RavlN::SampleLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  result = (RavlN::RCHashC< RavlN::UIntT,RavlN::StringC > *) &((RavlN::SampleLabelC const *)arg1)->Label2ClassNames();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__RCHashCT_unsigned_int_RavlN__StringC_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SampleLabelC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleLabelC *arg1 = (RavlN::SampleLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SampleLabelC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__SampleLabelC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SampleLabelC" "', argument " "1"" of type '" "RavlN::SampleLabelC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleLabelC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SampleLabelC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__SampleLabelC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DataSetBaseC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetBaseC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DataSetBaseC")) SWIG_fail;
  result = (RavlN::DataSetBaseC *)new RavlN::DataSetBaseC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSetBaseC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetBaseC_Shuffle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetBaseC *arg1 = (RavlN::DataSetBaseC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetBaseC_Shuffle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetBaseC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetBaseC_Shuffle" "', argument " "1"" of type '" "RavlN::DataSetBaseC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetBaseC * >(argp1);
  (arg1)->Shuffle();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DataSetBaseC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetBaseC *arg1 = (RavlN::DataSetBaseC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DataSetBaseC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetBaseC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DataSetBaseC" "', argument " "1"" of type '" "RavlN::DataSetBaseC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetBaseC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DataSetBaseC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DataSetBaseC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DataSet1SampleVectorC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet1C< RavlN::SampleVectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DataSet1SampleVectorC")) SWIG_fail;
  result = (RavlN::DataSet1C< RavlN::SampleVectorC > *)new RavlN::DataSet1C< RavlN::SampleVectorC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSet1SampleVectorC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DataSet1C< RavlN::SampleVectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DataSet1SampleVectorC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DataSet1SampleVectorC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = (RavlN::DataSet1C< RavlN::SampleVectorC > *)new RavlN::DataSet1C< RavlN::SampleVectorC >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSet1SampleVectorC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DataSet1C< RavlN::SampleVectorC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DataSet1SampleVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SampleVectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DataSet1SampleVectorC" "', argument " "1"" of type '" "RavlN::SampleVectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DataSet1SampleVectorC" "', argument " "1"" of type '" "RavlN::SampleVectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  result = (RavlN::DataSet1C< RavlN::SampleVectorC > *)new RavlN::DataSet1C< RavlN::SampleVectorC >((RavlN::SampleVectorC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSet1SampleVectorC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DataSet1SampleVectorC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DataSet1SampleVectorC__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_DataSet1SampleVectorC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DataSet1SampleVectorC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DataSet1C< RavlN::SampleVectorC >()\n"
    "    RavlN::DataSet1C< RavlN::SampleVectorC >(RavlN::UIntT)\n"
    "    RavlN::DataSet1C< RavlN::SampleVectorC >(RavlN::SampleVectorC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet1SampleVectorC_Sample1__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet1C< RavlN::SampleVectorC > *arg1 = (RavlN::DataSet1C< RavlN::SampleVectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleVectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSet1SampleVectorC_Sample1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet1SampleVectorC_Sample1" "', argument " "1"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC > * >(argp1);
  result = (RavlN::SampleVectorC *) &(arg1)->Sample1();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet1SampleVectorC_Sample1__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet1C< RavlN::SampleVectorC > *arg1 = (RavlN::DataSet1C< RavlN::SampleVectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleVectorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSet1SampleVectorC_Sample1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet1SampleVectorC_Sample1" "', argument " "1"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC > * >(argp1);
  result = (RavlN::SampleVectorC *) &((RavlN::DataSet1C< RavlN::SampleVectorC > const *)arg1)->Sample1();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleVectorC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet1SampleVectorC_Sample1(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DataSet1SampleVectorC_Sample1__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DataSet1SampleVectorC_Sample1__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DataSet1SampleVectorC_Sample1'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Sample1(RavlN::DataSet1C< RavlN::SampleVectorC > *)\n"
    "    Sample1(RavlN::DataSet1C< RavlN::SampleVectorC > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet1SampleVectorC_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet1C< RavlN::SampleVectorC > *arg1 = (RavlN::DataSet1C< RavlN::SampleVectorC > *) 0 ;
  RavlN::DataSet1C< RavlN::SampleVectorC >::Element1T *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DataSet1SampleVectorC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet1SampleVectorC_Append" "', argument " "1"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleVectorC__ElementT,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSet1SampleVectorC_Append" "', argument " "2"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC >::Element1T const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DataSet1SampleVectorC_Append" "', argument " "2"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC >::Element1T const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC >::Element1T * >(argp2);
  result = (arg1)->Append((RavlN::DataSet1C< RavlN::SampleVectorC >::Element1T const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet1SampleVectorC_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet1C< RavlN::SampleVectorC > *arg1 = (RavlN::DataSet1C< RavlN::SampleVectorC > *) 0 ;
  RavlN::DataSet1C< RavlN::SampleVectorC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DataSet1SampleVectorC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet1SampleVectorC_Append" "', argument " "1"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSet1SampleVectorC_Append" "', argument " "2"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DataSet1SampleVectorC_Append" "', argument " "2"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC > * >(argp2);
  (arg1)->Append((RavlN::DataSet1C< RavlN::SampleVectorC > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet1SampleVectorC_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleVectorC__ElementT, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DataSet1SampleVectorC_Append__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DataSet1SampleVectorC_Append__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DataSet1SampleVectorC_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::DataSet1C< RavlN::SampleVectorC > *,RavlN::DataSet1C< RavlN::SampleVectorC >::Element1T const &)\n"
    "    Append(RavlN::DataSet1C< RavlN::SampleVectorC > *,RavlN::DataSet1C< RavlN::SampleVectorC > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet1SampleVectorC_ExtractSample(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet1C< RavlN::SampleVectorC > *arg1 = (RavlN::DataSet1C< RavlN::SampleVectorC > *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DataSet1C< RavlN::SampleVectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DataSet1SampleVectorC_ExtractSample",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet1SampleVectorC_ExtractSample" "', argument " "1"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DataSet1SampleVectorC_ExtractSample" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (arg1)->ExtractSample(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::DataSet1C< RavlN::SampleVectorC >(static_cast< const RavlN::DataSet1C< RavlN::SampleVectorC >& >(result))), SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet1SampleVectorC_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet1C< RavlN::SampleVectorC > *arg1 = (RavlN::DataSet1C< RavlN::SampleVectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSet1SampleVectorC_Size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet1SampleVectorC_Size" "', argument " "1"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC > * >(argp1);
  result = (RavlN::UIntT)((RavlN::DataSet1C< RavlN::SampleVectorC > const *)arg1)->Size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DataSet1SampleVectorC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet1C< RavlN::SampleVectorC > *arg1 = (RavlN::DataSet1C< RavlN::SampleVectorC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DataSet1SampleVectorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DataSet1SampleVectorC" "', argument " "1"" of type '" "RavlN::DataSet1C< RavlN::SampleVectorC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet1C< RavlN::SampleVectorC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DataSet1SampleVectorC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DataSet2SampleVectorSampleLabelC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DataSet2SampleVectorSampleLabelC")) SWIG_fail;
  result = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *)new RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSet2SampleVectorSampleLabelC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DataSet2SampleVectorSampleLabelC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DataSet2SampleVectorSampleLabelC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *)new RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSet2SampleVectorSampleLabelC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = 0 ;
  RavlN::SampleLabelC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_DataSet2SampleVectorSampleLabelC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SampleVectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DataSet2SampleVectorSampleLabelC" "', argument " "1"" of type '" "RavlN::SampleVectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DataSet2SampleVectorSampleLabelC" "', argument " "1"" of type '" "RavlN::SampleVectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DataSet2SampleVectorSampleLabelC" "', argument " "2"" of type '" "RavlN::SampleLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DataSet2SampleVectorSampleLabelC" "', argument " "2"" of type '" "RavlN::SampleLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleLabelC * >(argp2);
  result = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *)new RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >((RavlN::SampleVectorC const &)*arg1,(RavlN::SampleLabelC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSet2SampleVectorSampleLabelC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DataSet2SampleVectorSampleLabelC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_DataSet2SampleVectorSampleLabelC__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleLabelC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_DataSet2SampleVectorSampleLabelC__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DataSet2SampleVectorSampleLabelC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >()\n"
    "    RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >(RavlN::UIntT)\n"
    "    RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >(RavlN::SampleVectorC const &,RavlN::SampleLabelC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet2SampleVectorSampleLabelC_Sample2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg1 = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSet2SampleVectorSampleLabelC_Sample2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet2SampleVectorSampleLabelC_Sample2" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp1);
  result = (RavlN::SampleLabelC *) &(arg1)->Sample2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet2SampleVectorSampleLabelC_Sample2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg1 = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SampleLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSet2SampleVectorSampleLabelC_Sample2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet2SampleVectorSampleLabelC_Sample2" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp1);
  result = (RavlN::SampleLabelC *) &((RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const *)arg1)->Sample2();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__SampleLabelC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet2SampleVectorSampleLabelC_Sample2(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DataSet2SampleVectorSampleLabelC_Sample2__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DataSet2SampleVectorSampleLabelC_Sample2__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DataSet2SampleVectorSampleLabelC_Sample2'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Sample2(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *)\n"
    "    Sample2(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet2SampleVectorSampleLabelC_Append__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg1 = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) 0 ;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T *arg2 = 0 ;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::IndexC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DataSet2SampleVectorSampleLabelC_Append",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleVectorC__ElementT,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "2"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "2"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleLabelC__ElementT,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "3"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "3"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T * >(argp3);
  result = (arg1)->Append((RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T const &)*arg2,(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T const &)*arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::IndexC(static_cast< const RavlN::IndexC& >(result))), SWIGTYPE_p_RavlN__IndexC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet2SampleVectorSampleLabelC_Append__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg1 = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) 0 ;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DataSet2SampleVectorSampleLabelC_Append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "2"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "2"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp2);
  (arg1)->Append((RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet2SampleVectorSampleLabelC_Append__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg1 = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) 0 ;
  RavlN::SampleC< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T > *arg2 = 0 ;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DataSet2SampleVectorSampleLabelC_Append",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleLabelC__ElementT,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "3"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DataSet2SampleVectorSampleLabelC_Append" "', argument " "3"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T * >(argp3);
  (arg1)->Append((RavlN::SampleC< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T > const &)*arg2,(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet2SampleVectorSampleLabelC_Append(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DataSet2SampleVectorSampleLabelC_Append__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleVectorC__ElementT, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleLabelC__ElementT, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DataSet2SampleVectorSampleLabelC_Append__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleLabelC__ElementT, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DataSet2SampleVectorSampleLabelC_Append__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DataSet2SampleVectorSampleLabelC_Append'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Append(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *,RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T const &,RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T const &)\n"
    "    Append(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *,RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const &)\n"
    "    Append(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *,RavlN::SampleC< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T > const &,RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSet2SampleVectorSampleLabelC_ExtractSample(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg1 = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) 0 ;
  RavlN::RealT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DataSet2SampleVectorSampleLabelC_ExtractSample",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSet2SampleVectorSampleLabelC_ExtractSample" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DataSet2SampleVectorSampleLabelC_ExtractSample" "', argument " "2"" of type '" "RavlN::RealT""'");
  } 
  arg2 = static_cast< RavlN::RealT >(val2);
  result = (arg1)->ExtractSample(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >(static_cast< const RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >& >(result))), SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DataSet2SampleVectorSampleLabelC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg1 = (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DataSet2SampleVectorSampleLabelC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DataSet2SampleVectorSampleLabelC" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DataSet2SampleVectorSampleLabelC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DataSetVectorLabelC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DataSetVectorLabelC")) SWIG_fail;
  result = (RavlN::DataSetVectorLabelC *)new RavlN::DataSetVectorLabelC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSetVectorLabelC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DataSetVectorLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DataSetVectorLabelC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DataSetVectorLabelC" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DataSetVectorLabelC" "', argument " "1"" of type '" "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > * >(argp1);
  result = (RavlN::DataSetVectorLabelC *)new RavlN::DataSetVectorLabelC((RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSetVectorLabelC__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DataSetVectorLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DataSetVectorLabelC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DataSetVectorLabelC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = (RavlN::DataSetVectorLabelC *)new RavlN::DataSetVectorLabelC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSetVectorLabelC__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SampleVectorC *arg1 = 0 ;
  RavlN::SampleLabelC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DataSetVectorLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_DataSetVectorLabelC",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SampleVectorC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DataSetVectorLabelC" "', argument " "1"" of type '" "RavlN::SampleVectorC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DataSetVectorLabelC" "', argument " "1"" of type '" "RavlN::SampleVectorC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SampleVectorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DataSetVectorLabelC" "', argument " "2"" of type '" "RavlN::SampleLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DataSetVectorLabelC" "', argument " "2"" of type '" "RavlN::SampleLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleLabelC * >(argp2);
  result = (RavlN::DataSetVectorLabelC *)new RavlN::DataSetVectorLabelC((RavlN::SampleVectorC const &)*arg1,(RavlN::SampleLabelC const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSetVectorLabelC__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::SArray1dC< RavlN::MeanCovarianceC > *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DataSetVectorLabelC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DataSetVectorLabelC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DataSetVectorLabelC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::MeanCovarianceC > const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DataSetVectorLabelC" "', argument " "1"" of type '" "RavlN::SArray1dC< RavlN::MeanCovarianceC > const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::SArray1dC< RavlN::MeanCovarianceC > * >(argp1);
  result = (RavlN::DataSetVectorLabelC *)new RavlN::DataSetVectorLabelC((RavlN::SArray1dC< RavlN::MeanCovarianceC > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DataSetVectorLabelC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DataSetVectorLabelC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DataSetVectorLabelC__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DataSetVectorLabelC__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_DataSetVectorLabelC__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__SampleVectorC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleLabelC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_DataSetVectorLabelC__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DataSetVectorLabelC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DataSetVectorLabelC()\n"
    "    RavlN::DataSetVectorLabelC(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > const &)\n"
    "    RavlN::DataSetVectorLabelC(RavlN::UIntT)\n"
    "    RavlN::DataSetVectorLabelC(RavlN::SampleVectorC const &,RavlN::SampleLabelC const &)\n"
    "    RavlN::DataSetVectorLabelC(RavlN::SArray1dC< RavlN::MeanCovarianceC > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_SeperateLabels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< RavlN::SArray1dC< RavlN::SampleVectorC > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC_SeperateLabels",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_SeperateLabels" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->SeperateLabels();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::SampleVectorC >(static_cast< const RavlN::SArray1dC< RavlN::SampleVectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__SampleVectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_GlobalMean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC_GlobalMean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_GlobalMean" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->GlobalMean();
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_ClassMeans(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::VectorC > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC_ClassMeans",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_ClassMeans" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->ClassMeans();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::VectorC >(static_cast< const RavlN::SArray1dC< RavlN::VectorC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__VectorC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_ClassMeansLabels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DataSetVectorLabelC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC_ClassMeansLabels",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_ClassMeansLabels" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->ClassMeansLabels();
  resultobj = SWIG_NewPointerObj((new RavlN::DataSetVectorLabelC(static_cast< const RavlN::DataSetVectorLabelC& >(result))), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_ClassNums(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::SArray1dC< RavlN::UIntT > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC_ClassNums",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_ClassNums" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->ClassNums();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::UIntT >(static_cast< const RavlN::SArray1dC< RavlN::UIntT >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_unsigned_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_ClassStats__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< RavlN::SArray1dC< RavlN::MeanCovarianceC > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DataSetVectorLabelC_ClassStats",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_ClassStats" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DataSetVectorLabelC_ClassStats" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->ClassStats(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::MeanCovarianceC >(static_cast< const RavlN::SArray1dC< RavlN::MeanCovarianceC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_ClassStats__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< RavlN::SArray1dC< RavlN::MeanCovarianceC > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC_ClassStats",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_ClassStats" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->ClassStats();
  resultobj = SWIG_NewPointerObj((new RavlN::SArray1dC< RavlN::MeanCovarianceC >(static_cast< const RavlN::SArray1dC< RavlN::MeanCovarianceC >& >(result))), SWIGTYPE_p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_ClassStats(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DataSetVectorLabelC_ClassStats__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DataSetVectorLabelC_ClassStats__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DataSetVectorLabelC_ClassStats'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ClassStats(RavlN::DataSetVectorLabelC const *,bool)\n"
    "    ClassStats(RavlN::DataSetVectorLabelC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_BetweenClassScatter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC_BetweenClassScatter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_BetweenClassScatter" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->BetweenClassScatter();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_WithinClassScatter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DataSetVectorLabelC_WithinClassScatter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_WithinClassScatter" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DataSetVectorLabelC_WithinClassScatter" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->WithinClassScatter(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_WithinClassScatter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::MatrixC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC_WithinClassScatter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_WithinClassScatter" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->WithinClassScatter();
  resultobj = SWIG_NewPointerObj((new RavlN::MatrixC(static_cast< const RavlN::MatrixC& >(result))), SWIGTYPE_p_RavlN__MatrixC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_WithinClassScatter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_DataSetVectorLabelC_WithinClassScatter__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_DataSetVectorLabelC_WithinClassScatter__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DataSetVectorLabelC_WithinClassScatter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    WithinClassScatter(RavlN::DataSetVectorLabelC const *,bool)\n"
    "    WithinClassScatter(RavlN::DataSetVectorLabelC const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC_ExtractPerLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  RavlN::UIntT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DataSetVectorLabelC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DataSetVectorLabelC_ExtractPerLabel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC_ExtractPerLabel" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DataSetVectorLabelC_ExtractPerLabel" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = ((RavlN::DataSetVectorLabelC const *)arg1)->ExtractPerLabel(arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::DataSetVectorLabelC(static_cast< const RavlN::DataSetVectorLabelC& >(result))), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DataSetVectorLabelC___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DataSetVectorLabelC___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DataSetVectorLabelC___str__" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  result = (char *)RavlN_DataSetVectorLabelC___str__(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DataSetVectorLabelC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC *arg1 = (RavlN::DataSetVectorLabelC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DataSetVectorLabelC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DataSetVectorLabelC" "', argument " "1"" of type '" "RavlN::DataSetVectorLabelC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DataSetVectorLabelC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CreateDataSet__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  RavlN::RealT arg4 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::DataSetVectorLabelC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CreateDataSet",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CreateDataSet" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateDataSet" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CreateDataSet" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CreateDataSet" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  result = RavlN::CreateDataSet(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj((new RavlN::DataSetVectorLabelC(static_cast< const RavlN::DataSetVectorLabelC& >(result))), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDataSet__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  RavlN::UIntT arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::DataSetVectorLabelC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CreateDataSet",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CreateDataSet" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateDataSet" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CreateDataSet" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = RavlN::CreateDataSet(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::DataSetVectorLabelC(static_cast< const RavlN::DataSetVectorLabelC& >(result))), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDataSet__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DataSetVectorLabelC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CreateDataSet",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CreateDataSet" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateDataSet" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  result = RavlN::CreateDataSet(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::DataSetVectorLabelC(static_cast< const RavlN::DataSetVectorLabelC& >(result))), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDataSet__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DataSetVectorLabelC result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CreateDataSet",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CreateDataSet" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  result = RavlN::CreateDataSet(arg1);
  resultobj = SWIG_NewPointerObj((new RavlN::DataSetVectorLabelC(static_cast< const RavlN::DataSetVectorLabelC& >(result))), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDataSet__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DataSetVectorLabelC result;
  
  if (!PyArg_ParseTuple(args,(char *)":CreateDataSet")) SWIG_fail;
  result = RavlN::CreateDataSet();
  resultobj = SWIG_NewPointerObj((new RavlN::DataSetVectorLabelC(static_cast< const RavlN::DataSetVectorLabelC& >(result))), SWIGTYPE_p_RavlN__DataSetVectorLabelC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDataSet(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_CreateDataSet__SWIG_4(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_CreateDataSet__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CreateDataSet__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CreateDataSet__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_CreateDataSet__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'CreateDataSet'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::CreateDataSet(RavlN::UIntT,RavlN::UIntT,RavlN::UIntT,RavlN::RealT)\n"
    "    RavlN::CreateDataSet(RavlN::UIntT,RavlN::UIntT,RavlN::UIntT)\n"
    "    RavlN::CreateDataSet(RavlN::UIntT,RavlN::UIntT)\n"
    "    RavlN::CreateDataSet(RavlN::UIntT)\n"
    "    RavlN::CreateDataSet()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SaveDataSetVectorLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SaveDataSetVectorLabel",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SaveDataSetVectorLabel" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SaveDataSetVectorLabel" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  result = (bool)RavlN::SaveDataSetVectorLabel((RavlN::StringC const &)*arg1,(RavlN::DataSetVectorLabelC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadDataSetVectorLabel__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LoadDataSetVectorLabel",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoadDataSetVectorLabel" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadDataSetVectorLabel" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  result = (bool)RavlN::LoadDataSetVectorLabel((RavlN::StringC const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadDataSetVectorLabel__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  RavlN::UIntT arg4 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg5 = 0 ;
  RavlN::FunctionC *arg6 = 0 ;
  RavlN::DataSetVectorLabelC *arg7 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:LoadDataSetVectorLabel",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoadDataSetVectorLabel" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LoadDataSetVectorLabel" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "LoadDataSetVectorLabel" "', argument " "4"" of type '" "RavlN::UIntT""'");
  } 
  arg4 = static_cast< RavlN::UIntT >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "LoadDataSetVectorLabel" "', argument " "5"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadDataSetVectorLabel" "', argument " "5"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg5 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_RavlN__FunctionC,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "LoadDataSetVectorLabel" "', argument " "6"" of type '" "RavlN::FunctionC const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadDataSetVectorLabel" "', argument " "6"" of type '" "RavlN::FunctionC const &""'"); 
  }
  arg6 = reinterpret_cast< RavlN::FunctionC * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "LoadDataSetVectorLabel" "', argument " "7"" of type '" "RavlN::DataSetVectorLabelC &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadDataSetVectorLabel" "', argument " "7"" of type '" "RavlN::DataSetVectorLabelC &""'"); 
  }
  arg7 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp7);
  result = (bool)RavlN::LoadDataSetVectorLabel((RavlN::StringC const &)*arg1,arg2,arg3,arg4,(RavlN::SArray1dC< RavlN::IndexC > const &)*arg5,(RavlN::FunctionC const &)*arg6,*arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadDataSetVectorLabel__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  RavlN::UIntT arg4 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg5 = 0 ;
  DataSetNormaliseT arg6 ;
  RavlN::FunctionC *arg7 = 0 ;
  RavlN::DataSetVectorLabelC *arg8 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:LoadDataSetVectorLabel",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoadDataSetVectorLabel" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LoadDataSetVectorLabel" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "LoadDataSetVectorLabel" "', argument " "4"" of type '" "RavlN::UIntT""'");
  } 
  arg4 = static_cast< RavlN::UIntT >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "LoadDataSetVectorLabel" "', argument " "5"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadDataSetVectorLabel" "', argument " "5"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg5 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "LoadDataSetVectorLabel" "', argument " "6"" of type '" "DataSetNormaliseT""'");
  } 
  arg6 = static_cast< DataSetNormaliseT >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_RavlN__FunctionC,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "LoadDataSetVectorLabel" "', argument " "7"" of type '" "RavlN::FunctionC &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadDataSetVectorLabel" "', argument " "7"" of type '" "RavlN::FunctionC &""'"); 
  }
  arg7 = reinterpret_cast< RavlN::FunctionC * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "LoadDataSetVectorLabel" "', argument " "8"" of type '" "RavlN::DataSetVectorLabelC &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadDataSetVectorLabel" "', argument " "8"" of type '" "RavlN::DataSetVectorLabelC &""'"); 
  }
  arg8 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp8);
  result = (bool)RavlN::LoadDataSetVectorLabel((RavlN::StringC const &)*arg1,arg2,arg3,arg4,(RavlN::SArray1dC< RavlN::IndexC > const &)*arg5,arg6,*arg7,*arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadDataSetVectorLabel(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 8); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_LoadDataSetVectorLabel__SWIG_0(self, args);
      }
    }
  }
  if (argc == 7) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_RavlN__FunctionC, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_LoadDataSetVectorLabel__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_RavlN__FunctionC, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_LoadDataSetVectorLabel__SWIG_2(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'LoadDataSetVectorLabel'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::LoadDataSetVectorLabel(RavlN::StringC const &,RavlN::DataSetVectorLabelC &)\n"
    "    RavlN::LoadDataSetVectorLabel(RavlN::StringC const &,bool,bool,RavlN::UIntT,RavlN::SArray1dC< RavlN::IndexC > const &,RavlN::FunctionC const &,RavlN::DataSetVectorLabelC &)\n"
    "    RavlN::LoadDataSetVectorLabel(RavlN::StringC const &,bool,bool,RavlN::UIntT,RavlN::SArray1dC< RavlN::IndexC > const &,DataSetNormaliseT,RavlN::FunctionC &,RavlN::DataSetVectorLabelC &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SaveDataSetVectorLabelCSV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SaveDataSetVectorLabelCSV",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SaveDataSetVectorLabelCSV" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SaveDataSetVectorLabelCSV" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  result = (bool)RavlN::SaveDataSetVectorLabelCSV((RavlN::StringC const &)*arg1,(RavlN::DataSetVectorLabelC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadDataSetVectorLabelCSV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LoadDataSetVectorLabelCSV",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LoadDataSetVectorLabelCSV" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadDataSetVectorLabelCSV" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  result = (bool)RavlN::LoadDataSetVectorLabelCSV((RavlN::StringC const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ClassifierC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ClassifierC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ClassifierC")) SWIG_fail;
  result = (RavlN::ClassifierC *)new RavlN::ClassifierC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ClassifierC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ClassifierC_Classify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ClassifierC *arg1 = (RavlN::ClassifierC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::UIntT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ClassifierC_Classify",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ClassifierC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClassifierC_Classify" "', argument " "1"" of type '" "RavlN::ClassifierC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ClassifierC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClassifierC_Classify" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ClassifierC_Classify" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = (RavlN::UIntT)((RavlN::ClassifierC const *)arg1)->Classify((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ClassifierC_Confidence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ClassifierC *arg1 = (RavlN::ClassifierC *) 0 ;
  RavlN::VectorC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::VectorC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ClassifierC_Confidence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ClassifierC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClassifierC_Confidence" "', argument " "1"" of type '" "RavlN::ClassifierC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ClassifierC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__VectorC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ClassifierC_Confidence" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ClassifierC_Confidence" "', argument " "2"" of type '" "RavlN::VectorC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::VectorC * >(argp2);
  result = ((RavlN::ClassifierC const *)arg1)->Confidence((RavlN::VectorC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::VectorC(static_cast< const RavlN::VectorC& >(result))), SWIGTYPE_p_RavlN__VectorC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ClassifierC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ClassifierC *arg1 = (RavlN::ClassifierC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ClassifierC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ClassifierC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ClassifierC" "', argument " "1"" of type '" "RavlN::ClassifierC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ClassifierC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ClassifierC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ClassifierC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ClassifierDiscriminantFunctionC_Discriminant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ClassifierDiscriminantFunctionC *arg1 = (RavlN::ClassifierDiscriminantFunctionC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::FunctionC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ClassifierDiscriminantFunctionC_Discriminant",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ClassifierDiscriminantFunctionC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ClassifierDiscriminantFunctionC_Discriminant" "', argument " "1"" of type '" "RavlN::ClassifierDiscriminantFunctionC const *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ClassifierDiscriminantFunctionC * >(argp1);
  result = (RavlN::FunctionC *) &((RavlN::ClassifierDiscriminantFunctionC const *)arg1)->Discriminant();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__FunctionC, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ClassifierDiscriminantFunctionC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ClassifierDiscriminantFunctionC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ClassifierDiscriminantFunctionC")) SWIG_fail;
  result = (RavlN::ClassifierDiscriminantFunctionC *)new RavlN::ClassifierDiscriminantFunctionC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ClassifierDiscriminantFunctionC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ClassifierDiscriminantFunctionC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ClassifierDiscriminantFunctionC *arg1 = (RavlN::ClassifierDiscriminantFunctionC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ClassifierDiscriminantFunctionC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ClassifierDiscriminantFunctionC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ClassifierDiscriminantFunctionC" "', argument " "1"" of type '" "RavlN::ClassifierDiscriminantFunctionC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ClassifierDiscriminantFunctionC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ClassifierDiscriminantFunctionC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ClassifierDiscriminantFunctionC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DesignFunctionSupervisedC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFunctionSupervisedC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DesignFunctionSupervisedC")) SWIG_fail;
  result = (RavlN::DesignFunctionSupervisedC *)new RavlN::DesignFunctionSupervisedC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignFunctionSupervisedC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFunctionSupervisedC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DesignFunctionSupervisedC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DesignFunctionSupervisedC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DesignFunctionSupervisedC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DesignFunctionSupervisedC" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DesignFunctionSupervisedC" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignFunctionSupervisedC * >(argp1);
  result = (RavlN::DesignFunctionSupervisedC *)new RavlN::DesignFunctionSupervisedC((RavlN::DesignFunctionSupervisedC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignFunctionSupervisedC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_DesignFunctionSupervisedC__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DesignFunctionSupervisedC__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DesignFunctionSupervisedC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DesignFunctionSupervisedC()\n"
    "    RavlN::DesignFunctionSupervisedC(RavlN::DesignFunctionSupervisedC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignFunctionSupervisedC_Apply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFunctionSupervisedC *arg1 = (RavlN::DesignFunctionSupervisedC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::FunctionC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DesignFunctionSupervisedC_Apply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignFunctionSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp3);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::VectorC > const &)*arg2,(RavlN::SampleC< RavlN::VectorC > const &)*arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::FunctionC(static_cast< const RavlN::FunctionC& >(result))), SWIGTYPE_p_RavlN__FunctionC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignFunctionSupervisedC_Apply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFunctionSupervisedC *arg1 = (RavlN::DesignFunctionSupervisedC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg3 = 0 ;
  RavlN::SampleC< RavlN::RealT > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::FunctionC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:DesignFunctionSupervisedC_Apply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignFunctionSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_RavlN__SampleCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  arg4 = reinterpret_cast< RavlN::SampleC< RavlN::RealT > * >(argp4);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::VectorC > const &)*arg2,(RavlN::SampleC< RavlN::VectorC > const &)*arg3,(RavlN::SampleC< RavlN::RealT > const &)*arg4);
  resultobj = SWIG_NewPointerObj((new RavlN::FunctionC(static_cast< const RavlN::FunctionC& >(result))), SWIGTYPE_p_RavlN__FunctionC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignFunctionSupervisedC_Apply__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFunctionSupervisedC *arg1 = (RavlN::DesignFunctionSupervisedC *) 0 ;
  RavlN::SampleC< RavlN::TVectorC< float > > *arg2 = 0 ;
  RavlN::SampleC< RavlN::TVectorC< float > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::FunctionC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DesignFunctionSupervisedC_Apply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignFunctionSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::TVectorC< float > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::TVectorC< float > > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::TVectorC< float > > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::TVectorC< float > > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::TVectorC< float > > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::TVectorC< float > > * >(argp3);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::TVectorC< float > > const &)*arg2,(RavlN::SampleC< RavlN::TVectorC< float > > const &)*arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::FunctionC(static_cast< const RavlN::FunctionC& >(result))), SWIGTYPE_p_RavlN__FunctionC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignFunctionSupervisedC_Apply__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFunctionSupervisedC *arg1 = (RavlN::DesignFunctionSupervisedC *) 0 ;
  RavlN::SampleC< RavlN::TVectorC< float > > *arg2 = 0 ;
  RavlN::SampleC< RavlN::TVectorC< float > > *arg3 = 0 ;
  RavlN::SampleC< float > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::FunctionC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:DesignFunctionSupervisedC_Apply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignFunctionSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::TVectorC< float > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::TVectorC< float > > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::TVectorC< float > > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::TVectorC< float > > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::TVectorC< float > > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::TVectorC< float > > * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_RavlN__SampleCT_float_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SampleC< float > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignFunctionSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SampleC< float > const &""'"); 
  }
  arg4 = reinterpret_cast< RavlN::SampleC< float > * >(argp4);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::TVectorC< float > > const &)*arg2,(RavlN::SampleC< RavlN::TVectorC< float > > const &)*arg3,(RavlN::SampleC< float > const &)*arg4);
  resultobj = SWIG_NewPointerObj((new RavlN::FunctionC(static_cast< const RavlN::FunctionC& >(result))), SWIGTYPE_p_RavlN__FunctionC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignFunctionSupervisedC_Apply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DesignFunctionSupervisedC_Apply__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DesignFunctionSupervisedC_Apply__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_RavlN__SampleCT_double_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_DesignFunctionSupervisedC_Apply__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_RavlN__SampleCT_float_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_DesignFunctionSupervisedC_Apply__SWIG_3(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DesignFunctionSupervisedC_Apply'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Apply(RavlN::DesignFunctionSupervisedC *,RavlN::SampleC< RavlN::VectorC > const &,RavlN::SampleC< RavlN::VectorC > const &)\n"
    "    Apply(RavlN::DesignFunctionSupervisedC *,RavlN::SampleC< RavlN::VectorC > const &,RavlN::SampleC< RavlN::VectorC > const &,RavlN::SampleC< RavlN::RealT > const &)\n"
    "    Apply(RavlN::DesignFunctionSupervisedC *,RavlN::SampleC< RavlN::TVectorC< float > > const &,RavlN::SampleC< RavlN::TVectorC< float > > const &)\n"
    "    Apply(RavlN::DesignFunctionSupervisedC *,RavlN::SampleC< RavlN::TVectorC< float > > const &,RavlN::SampleC< RavlN::TVectorC< float > > const &,RavlN::SampleC< float > const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DesignFunctionSupervisedC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFunctionSupervisedC *arg1 = (RavlN::DesignFunctionSupervisedC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DesignFunctionSupervisedC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DesignFunctionSupervisedC" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignFunctionSupervisedC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DesignFunctionSupervisedC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DesignFunctionSupervisedC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DesignFuncLSQC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  bool arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::DesignFuncLSQC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_DesignFuncLSQC",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DesignFuncLSQC" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DesignFuncLSQC" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (RavlN::DesignFuncLSQC *)new RavlN::DesignFuncLSQC(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignFuncLSQC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DesignFuncLSQC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFuncLSQC *arg1 = (RavlN::DesignFuncLSQC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DesignFuncLSQC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignFuncLSQC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DesignFuncLSQC" "', argument " "1"" of type '" "RavlN::DesignFuncLSQC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignFuncLSQC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DesignFuncLSQC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DesignFuncLSQC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DesignClassifierSupervisedC_Apply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierSupervisedC *arg1 = (RavlN::DesignClassifierSupervisedC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  RavlN::SampleC< RavlN::UIntT > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::ClassifierC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DesignClassifierSupervisedC_Apply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignClassifierSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignClassifierSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp3);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::VectorC > const &)*arg2,(RavlN::SampleC< RavlN::UIntT > const &)*arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::ClassifierC(static_cast< const RavlN::ClassifierC& >(result))), SWIGTYPE_p_RavlN__ClassifierC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignClassifierSupervisedC_Apply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierSupervisedC *arg1 = (RavlN::DesignClassifierSupervisedC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  RavlN::SampleC< RavlN::UIntT > *arg3 = 0 ;
  RavlN::SampleC< RavlN::RealT > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::ClassifierC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:DesignClassifierSupervisedC_Apply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignClassifierSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignClassifierSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_RavlN__SampleCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  arg4 = reinterpret_cast< RavlN::SampleC< RavlN::RealT > * >(argp4);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::VectorC > const &)*arg2,(RavlN::SampleC< RavlN::UIntT > const &)*arg3,(RavlN::SampleC< RavlN::RealT > const &)*arg4);
  resultobj = SWIG_NewPointerObj((new RavlN::ClassifierC(static_cast< const RavlN::ClassifierC& >(result))), SWIGTYPE_p_RavlN__ClassifierC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignClassifierSupervisedC_Apply__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierSupervisedC *arg1 = (RavlN::DesignClassifierSupervisedC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  RavlN::SampleC< RavlN::UIntT > *arg3 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::ClassifierC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:DesignClassifierSupervisedC_Apply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignClassifierSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignClassifierSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg4 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp4);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::VectorC > const &)*arg2,(RavlN::SampleC< RavlN::UIntT > const &)*arg3,(RavlN::SArray1dC< RavlN::IndexC > const &)*arg4);
  resultobj = SWIG_NewPointerObj((new RavlN::ClassifierC(static_cast< const RavlN::ClassifierC& >(result))), SWIGTYPE_p_RavlN__ClassifierC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignClassifierSupervisedC_Apply__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierSupervisedC *arg1 = (RavlN::DesignClassifierSupervisedC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  RavlN::SampleC< RavlN::UIntT > *arg3 = 0 ;
  RavlN::SArray1dC< RavlN::IndexC > *arg4 = 0 ;
  RavlN::SampleC< RavlN::RealT > *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  RavlN::ClassifierC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:DesignClassifierSupervisedC_Apply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignClassifierSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignClassifierSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "4"" of type '" "RavlN::SArray1dC< RavlN::IndexC > const &""'"); 
  }
  arg4 = reinterpret_cast< RavlN::SArray1dC< RavlN::IndexC > * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_RavlN__SampleCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "5"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "5"" of type '" "RavlN::SampleC< RavlN::RealT > const &""'"); 
  }
  arg5 = reinterpret_cast< RavlN::SampleC< RavlN::RealT > * >(argp5);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::VectorC > const &)*arg2,(RavlN::SampleC< RavlN::UIntT > const &)*arg3,(RavlN::SArray1dC< RavlN::IndexC > const &)*arg4,(RavlN::SampleC< RavlN::RealT > const &)*arg5);
  resultobj = SWIG_NewPointerObj((new RavlN::ClassifierC(static_cast< const RavlN::ClassifierC& >(result))), SWIGTYPE_p_RavlN__ClassifierC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignClassifierSupervisedC_Apply__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierSupervisedC *arg1 = (RavlN::DesignClassifierSupervisedC *) 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  RavlN::ClassifierC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DesignClassifierSupervisedC_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "1"" of type '" "RavlN::DesignClassifierSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignClassifierSupervisedC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignClassifierSupervisedC_Apply" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  result = (arg1)->Apply((RavlN::DataSetVectorLabelC const &)*arg2);
  resultobj = SWIG_NewPointerObj((new RavlN::ClassifierC(static_cast< const RavlN::ClassifierC& >(result))), SWIGTYPE_p_RavlN__ClassifierC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignClassifierSupervisedC_Apply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DesignClassifierSupervisedC_Apply__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DesignClassifierSupervisedC_Apply__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_DesignClassifierSupervisedC_Apply__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_RavlN__SampleCT_double_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_DesignClassifierSupervisedC_Apply__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__IndexC_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_RavlN__SampleCT_double_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_DesignClassifierSupervisedC_Apply__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DesignClassifierSupervisedC_Apply'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Apply(RavlN::DesignClassifierSupervisedC *,RavlN::SampleC< RavlN::VectorC > const &,RavlN::SampleC< RavlN::UIntT > const &)\n"
    "    Apply(RavlN::DesignClassifierSupervisedC *,RavlN::SampleC< RavlN::VectorC > const &,RavlN::SampleC< RavlN::UIntT > const &,RavlN::SampleC< RavlN::RealT > const &)\n"
    "    Apply(RavlN::DesignClassifierSupervisedC *,RavlN::SampleC< RavlN::VectorC > const &,RavlN::SampleC< RavlN::UIntT > const &,RavlN::SArray1dC< RavlN::IndexC > const &)\n"
    "    Apply(RavlN::DesignClassifierSupervisedC *,RavlN::SampleC< RavlN::VectorC > const &,RavlN::SampleC< RavlN::UIntT > const &,RavlN::SArray1dC< RavlN::IndexC > const &,RavlN::SampleC< RavlN::RealT > const &)\n"
    "    Apply(RavlN::DesignClassifierSupervisedC *,RavlN::DataSetVectorLabelC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignClassifierSupervisedC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierSupervisedC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DesignClassifierSupervisedC")) SWIG_fail;
  result = (RavlN::DesignClassifierSupervisedC *)new RavlN::DesignClassifierSupervisedC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DesignClassifierSupervisedC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierSupervisedC *arg1 = (RavlN::DesignClassifierSupervisedC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DesignClassifierSupervisedC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DesignClassifierSupervisedC" "', argument " "1"" of type '" "RavlN::DesignClassifierSupervisedC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignClassifierSupervisedC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DesignClassifierSupervisedC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DesignClassifierSupervisedC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DesignDiscriminantFunctionC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignFunctionSupervisedC *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DesignDiscriminantFunctionC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DesignDiscriminantFunctionC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_RavlN__DesignFunctionSupervisedC,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DesignDiscriminantFunctionC" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DesignDiscriminantFunctionC" "', argument " "1"" of type '" "RavlN::DesignFunctionSupervisedC const &""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignFunctionSupervisedC * >(argp1);
  result = (RavlN::DesignDiscriminantFunctionC *)new RavlN::DesignDiscriminantFunctionC((RavlN::DesignFunctionSupervisedC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignDiscriminantFunctionC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DesignDiscriminantFunctionC_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignDiscriminantFunctionC *arg1 = (RavlN::DesignDiscriminantFunctionC *) 0 ;
  RavlN::SampleC< RavlN::VectorC > *arg2 = 0 ;
  RavlN::SampleC< RavlN::UIntT > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::ClassifierDiscriminantFunctionC result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DesignDiscriminantFunctionC_Apply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignDiscriminantFunctionC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DesignDiscriminantFunctionC_Apply" "', argument " "1"" of type '" "RavlN::DesignDiscriminantFunctionC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignDiscriminantFunctionC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SampleCT_RavlN__VectorC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DesignDiscriminantFunctionC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignDiscriminantFunctionC_Apply" "', argument " "2"" of type '" "RavlN::SampleC< RavlN::VectorC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SampleC< RavlN::VectorC > * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__SampleCT_unsigned_int_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DesignDiscriminantFunctionC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DesignDiscriminantFunctionC_Apply" "', argument " "3"" of type '" "RavlN::SampleC< RavlN::UIntT > const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::SampleC< RavlN::UIntT > * >(argp3);
  result = (arg1)->Apply((RavlN::SampleC< RavlN::VectorC > const &)*arg2,(RavlN::SampleC< RavlN::UIntT > const &)*arg3);
  resultobj = SWIG_NewPointerObj((new RavlN::ClassifierDiscriminantFunctionC(static_cast< const RavlN::ClassifierDiscriminantFunctionC& >(result))), SWIGTYPE_p_RavlN__ClassifierDiscriminantFunctionC, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DesignDiscriminantFunctionC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignDiscriminantFunctionC *arg1 = (RavlN::DesignDiscriminantFunctionC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DesignDiscriminantFunctionC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignDiscriminantFunctionC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DesignDiscriminantFunctionC" "', argument " "1"" of type '" "RavlN::DesignDiscriminantFunctionC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignDiscriminantFunctionC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DesignDiscriminantFunctionC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DesignDiscriminantFunctionC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DesignClassifierNeuralNetwork2C__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  bool arg3 ;
  RavlN::RealT arg4 ;
  RavlN::RealT arg5 ;
  RavlN::UIntT arg6 ;
  RavlN::UIntT arg7 ;
  bool arg8 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  bool val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  RavlN::DesignClassifierNeuralNetwork2C *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_DesignClassifierNeuralNetwork2C",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "5"" of type '" "RavlN::RealT""'");
  } 
  arg5 = static_cast< RavlN::RealT >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "6"" of type '" "RavlN::UIntT""'");
  } 
  arg6 = static_cast< RavlN::UIntT >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "7"" of type '" "RavlN::UIntT""'");
  } 
  arg7 = static_cast< RavlN::UIntT >(val7);
  ecode8 = SWIG_AsVal_bool(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "8"" of type '" "bool""'");
  } 
  arg8 = static_cast< bool >(val8);
  result = (RavlN::DesignClassifierNeuralNetwork2C *)new RavlN::DesignClassifierNeuralNetwork2C(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignClassifierNeuralNetwork2C__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  bool arg3 ;
  RavlN::RealT arg4 ;
  RavlN::RealT arg5 ;
  RavlN::UIntT arg6 ;
  RavlN::UIntT arg7 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  RavlN::DesignClassifierNeuralNetwork2C *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_DesignClassifierNeuralNetwork2C",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "5"" of type '" "RavlN::RealT""'");
  } 
  arg5 = static_cast< RavlN::RealT >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "6"" of type '" "RavlN::UIntT""'");
  } 
  arg6 = static_cast< RavlN::UIntT >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "7"" of type '" "RavlN::UIntT""'");
  } 
  arg7 = static_cast< RavlN::UIntT >(val7);
  result = (RavlN::DesignClassifierNeuralNetwork2C *)new RavlN::DesignClassifierNeuralNetwork2C(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignClassifierNeuralNetwork2C__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  bool arg3 ;
  RavlN::RealT arg4 ;
  RavlN::RealT arg5 ;
  RavlN::UIntT arg6 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  RavlN::DesignClassifierNeuralNetwork2C *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_DesignClassifierNeuralNetwork2C",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "5"" of type '" "RavlN::RealT""'");
  } 
  arg5 = static_cast< RavlN::RealT >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "6"" of type '" "RavlN::UIntT""'");
  } 
  arg6 = static_cast< RavlN::UIntT >(val6);
  result = (RavlN::DesignClassifierNeuralNetwork2C *)new RavlN::DesignClassifierNeuralNetwork2C(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignClassifierNeuralNetwork2C__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  bool arg3 ;
  RavlN::RealT arg4 ;
  RavlN::RealT arg5 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  RavlN::DesignClassifierNeuralNetwork2C *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_DesignClassifierNeuralNetwork2C",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "5"" of type '" "RavlN::RealT""'");
  } 
  arg5 = static_cast< RavlN::RealT >(val5);
  result = (RavlN::DesignClassifierNeuralNetwork2C *)new RavlN::DesignClassifierNeuralNetwork2C(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignClassifierNeuralNetwork2C__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  bool arg3 ;
  RavlN::RealT arg4 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  RavlN::DesignClassifierNeuralNetwork2C *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_DesignClassifierNeuralNetwork2C",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "4"" of type '" "RavlN::RealT""'");
  } 
  arg4 = static_cast< RavlN::RealT >(val4);
  result = (RavlN::DesignClassifierNeuralNetwork2C *)new RavlN::DesignClassifierNeuralNetwork2C(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignClassifierNeuralNetwork2C__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::UIntT arg1 ;
  RavlN::UIntT arg2 ;
  bool arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::DesignClassifierNeuralNetwork2C *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_DesignClassifierNeuralNetwork2C",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "1"" of type '" "RavlN::UIntT""'");
  } 
  arg1 = static_cast< RavlN::UIntT >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "2"" of type '" "RavlN::UIntT""'");
  } 
  arg2 = static_cast< RavlN::UIntT >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DesignClassifierNeuralNetwork2C" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (RavlN::DesignClassifierNeuralNetwork2C *)new RavlN::DesignClassifierNeuralNetwork2C(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DesignClassifierNeuralNetwork2C(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 8); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_DesignClassifierNeuralNetwork2C__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_DesignClassifierNeuralNetwork2C__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_DesignClassifierNeuralNetwork2C__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_DesignClassifierNeuralNetwork2C__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_DesignClassifierNeuralNetwork2C__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_bool(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_DesignClassifierNeuralNetwork2C__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DesignClassifierNeuralNetwork2C'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::DesignClassifierNeuralNetwork2C(RavlN::UIntT,RavlN::UIntT,bool,RavlN::RealT,RavlN::RealT,RavlN::UIntT,RavlN::UIntT,bool)\n"
    "    RavlN::DesignClassifierNeuralNetwork2C(RavlN::UIntT,RavlN::UIntT,bool,RavlN::RealT,RavlN::RealT,RavlN::UIntT,RavlN::UIntT)\n"
    "    RavlN::DesignClassifierNeuralNetwork2C(RavlN::UIntT,RavlN::UIntT,bool,RavlN::RealT,RavlN::RealT,RavlN::UIntT)\n"
    "    RavlN::DesignClassifierNeuralNetwork2C(RavlN::UIntT,RavlN::UIntT,bool,RavlN::RealT,RavlN::RealT)\n"
    "    RavlN::DesignClassifierNeuralNetwork2C(RavlN::UIntT,RavlN::UIntT,bool,RavlN::RealT)\n"
    "    RavlN::DesignClassifierNeuralNetwork2C(RavlN::UIntT,RavlN::UIntT,bool)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DesignClassifierNeuralNetwork2C(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierNeuralNetwork2C *arg1 = (RavlN::DesignClassifierNeuralNetwork2C *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DesignClassifierNeuralNetwork2C",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DesignClassifierNeuralNetwork2C" "', argument " "1"" of type '" "RavlN::DesignClassifierNeuralNetwork2C *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignClassifierNeuralNetwork2C * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DesignClassifierNeuralNetwork2C_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DesignClassifierNeuralNetwork2C, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DesignClassifierLogisticRegressionC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::RealT arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::DesignClassifierLogisticRegressionC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DesignClassifierLogisticRegressionC",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DesignClassifierLogisticRegressionC" "', argument " "1"" of type '" "RavlN::RealT""'");
  } 
  arg1 = static_cast< RavlN::RealT >(val1);
  result = (RavlN::DesignClassifierLogisticRegressionC *)new RavlN::DesignClassifierLogisticRegressionC(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__DesignClassifierLogisticRegressionC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DesignClassifierLogisticRegressionC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::DesignClassifierLogisticRegressionC *arg1 = (RavlN::DesignClassifierLogisticRegressionC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DesignClassifierLogisticRegressionC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__DesignClassifierLogisticRegressionC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DesignClassifierLogisticRegressionC" "', argument " "1"" of type '" "RavlN::DesignClassifierLogisticRegressionC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::DesignClassifierLogisticRegressionC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DesignClassifierLogisticRegressionC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__DesignClassifierLogisticRegressionC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ErrorC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ErrorC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ErrorC")) SWIG_fail;
  result = (RavlN::ErrorC *)new RavlN::ErrorC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__ErrorC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ErrorC_Error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ErrorC *arg1 = (RavlN::ErrorC *) 0 ;
  RavlN::ClassifierC *arg2 = 0 ;
  RavlN::DataSetVectorLabelC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  RavlN::RealT result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ErrorC_Error",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ErrorC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ErrorC_Error" "', argument " "1"" of type '" "RavlN::ErrorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ErrorC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__ClassifierC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ErrorC_Error" "', argument " "2"" of type '" "RavlN::ClassifierC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ErrorC_Error" "', argument " "2"" of type '" "RavlN::ClassifierC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::ClassifierC * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ErrorC_Error" "', argument " "3"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ErrorC_Error" "', argument " "3"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  arg3 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp3);
  result = (RavlN::RealT)(arg1)->Error((RavlN::ClassifierC const &)*arg2,(RavlN::DataSetVectorLabelC const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ErrorC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::ErrorC *arg1 = (RavlN::ErrorC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ErrorC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__ErrorC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ErrorC" "', argument " "1"" of type '" "RavlN::ErrorC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::ErrorC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ErrorC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__ErrorC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_GnuPlot2dC__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  PyObject * obj0 = 0 ;
  RavlN::GnuPlot2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_GnuPlot2dC",&obj0)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  result = (RavlN::GnuPlot2dC *)new RavlN::GnuPlot2dC((RavlN::StringC const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__GnuPlot2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GnuPlot2dC__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_GnuPlot2dC")) SWIG_fail;
  result = (RavlN::GnuPlot2dC *)new RavlN::GnuPlot2dC();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_RavlN__GnuPlot2dC, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GnuPlot2dC(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_GnuPlot2dC__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_GnuPlot2dC__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_GnuPlot2dC'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::GnuPlot2dC(RavlN::StringC const &)\n"
    "    RavlN::GnuPlot2dC()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Plot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  RavlN::StringC *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GnuPlot2dC_Plot",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_Plot" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  {
    arg3 = new RavlN::StringC(PyString_AsString(obj2));
  }
  result = (bool)(arg1)->Plot((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2,(RavlN::StringC const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Plot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::SArray1dC< RavlN::Point2dC > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_Plot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_Plot" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::SArray1dC< RavlN::Point2dC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::SArray1dC< RavlN::Point2dC > * >(argp2);
  result = (bool)(arg1)->Plot((RavlN::SArray1dC< RavlN::Point2dC > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Plot__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::StringC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_Plot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_Plot" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  result = (bool)(arg1)->Plot((RavlN::StringC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Plot__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  RavlN::UIntT arg3 ;
  RavlN::UIntT arg4 ;
  RavlN::UIntT arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:GnuPlot2dC_Plot",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_Plot" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GnuPlot2dC_Plot" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GnuPlot2dC_Plot" "', argument " "4"" of type '" "RavlN::UIntT""'");
  } 
  arg4 = static_cast< RavlN::UIntT >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GnuPlot2dC_Plot" "', argument " "5"" of type '" "RavlN::UIntT""'");
  } 
  arg5 = static_cast< RavlN::UIntT >(val5);
  result = (bool)(arg1)->Plot((RavlN::DataSetVectorLabelC const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Plot__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  RavlN::UIntT arg3 ;
  RavlN::UIntT arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:GnuPlot2dC_Plot",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_Plot" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GnuPlot2dC_Plot" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GnuPlot2dC_Plot" "', argument " "4"" of type '" "RavlN::UIntT""'");
  } 
  arg4 = static_cast< RavlN::UIntT >(val4);
  result = (bool)(arg1)->Plot((RavlN::DataSetVectorLabelC const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Plot__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  RavlN::UIntT arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:GnuPlot2dC_Plot",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_Plot" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "GnuPlot2dC_Plot" "', argument " "3"" of type '" "RavlN::UIntT""'");
  } 
  arg3 = static_cast< RavlN::UIntT >(val3);
  result = (bool)(arg1)->Plot((RavlN::DataSetVectorLabelC const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Plot__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::DataSetVectorLabelC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_Plot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_Plot" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__DataSetVectorLabelC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GnuPlot2dC_Plot" "', argument " "2"" of type '" "RavlN::DataSetVectorLabelC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::DataSetVectorLabelC * >(argp2);
  result = (bool)(arg1)->Plot((RavlN::DataSetVectorLabelC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Plot(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__GnuPlot2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GnuPlot2dC_Plot__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__GnuPlot2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GnuPlot2dC_Plot__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__GnuPlot2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GnuPlot2dC_Plot__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__GnuPlot2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_GnuPlot2dC_Plot__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__GnuPlot2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_GnuPlot2dC_Plot__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__GnuPlot2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_GnuPlot2dC_Plot__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_RavlN__GnuPlot2dC, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__DataSetVectorLabelC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_GnuPlot2dC_Plot__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'GnuPlot2dC_Plot'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Plot(RavlN::GnuPlot2dC *,RavlN::SArray1dC< RavlN::Point2dC > const &,RavlN::StringC const &)\n"
    "    Plot(RavlN::GnuPlot2dC *,RavlN::SArray1dC< RavlN::Point2dC > const &)\n"
    "    Plot(RavlN::GnuPlot2dC *,RavlN::StringC const &)\n"
    "    Plot(RavlN::GnuPlot2dC *,RavlN::DataSetVectorLabelC const &,RavlN::UIntT,RavlN::UIntT,RavlN::UIntT)\n"
    "    Plot(RavlN::GnuPlot2dC *,RavlN::DataSetVectorLabelC const &,RavlN::UIntT,RavlN::UIntT)\n"
    "    Plot(RavlN::GnuPlot2dC *,RavlN::DataSetVectorLabelC const &,RavlN::UIntT)\n"
    "    Plot(RavlN::GnuPlot2dC *,RavlN::DataSetVectorLabelC const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_SetXLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::StringC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_SetXLabel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_SetXLabel" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  result = (bool)(arg1)->SetXLabel((RavlN::StringC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_SetYLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::StringC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_SetYLabel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_SetYLabel" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  result = (bool)(arg1)->SetYLabel((RavlN::StringC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_SetXRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_SetXRange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_SetXRange" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GnuPlot2dC_SetXRange" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GnuPlot2dC_SetXRange" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (bool)(arg1)->SetXRange((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_SetYRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::RealRangeC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_SetYRange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_SetYRange" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__RealRangeC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GnuPlot2dC_SetYRange" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GnuPlot2dC_SetYRange" "', argument " "2"" of type '" "RavlN::RealRangeC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::RealRangeC * >(argp2);
  result = (bool)(arg1)->SetYRange((RavlN::RealRangeC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_SetLineStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::StringC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_SetLineStyle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_SetLineStyle" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  result = (bool)(arg1)->SetLineStyle((RavlN::StringC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GnuPlot2dC_Command(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  RavlN::StringC *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GnuPlot2dC_Command",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GnuPlot2dC_Command" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  {
    arg2 = new RavlN::StringC(PyString_AsString(obj1));
  }
  result = (bool)(arg1)->Command((RavlN::StringC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GnuPlot2dC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::GnuPlot2dC *arg1 = (RavlN::GnuPlot2dC *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GnuPlot2dC",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_RavlN__GnuPlot2dC, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GnuPlot2dC" "', argument " "1"" of type '" "RavlN::GnuPlot2dC *""'"); 
  }
  arg1 = reinterpret_cast< RavlN::GnuPlot2dC * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GnuPlot2dC_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_RavlN__GnuPlot2dC, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Save__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlImageN::ImageC< RavlN::ByteT > *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Save",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Save" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::ByteT > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Save" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::ByteT > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp2);
  result = (bool)RavlN::Save((RavlN::StringC const &)*arg1,(RavlImageN::ImageC< unsigned char > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Load__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlImageN::ImageC< RavlN::ByteT > *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Load",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Load" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::ByteT > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Load" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::ByteT > &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ImageC< RavlN::ByteT > * >(argp2);
  result = (bool)RavlN::Load((RavlN::StringC const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Save__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlImageN::ImageC< RavlN::RealT > *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Save",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ImageCT_double_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Save" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::RealT > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Save" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::RealT > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ImageC< RavlN::RealT > * >(argp2);
  result = (bool)RavlN::Save((RavlN::StringC const &)*arg1,(RavlImageN::ImageC< double > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Load__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlImageN::ImageC< RavlN::RealT > *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Load",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ImageCT_double_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Load" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::RealT > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Load" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlN::RealT > &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ImageC< RavlN::RealT > * >(argp2);
  result = (bool)RavlN::Load((RavlN::StringC const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Save__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Save",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Save" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Save" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp2);
  result = (bool)RavlN::Save((RavlN::StringC const &)*arg1,(RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Load__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Load",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Load" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Load" "', argument " "2"" of type '" "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > &""'"); 
  }
  arg2 = reinterpret_cast< RavlImageN::ImageC< RavlImageN::ByteRGBValueC > * >(argp2);
  result = (bool)RavlN::Load((RavlN::StringC const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Load__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlN::ClassifierC *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Load",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__ClassifierC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Load" "', argument " "2"" of type '" "RavlN::ClassifierC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Load" "', argument " "2"" of type '" "RavlN::ClassifierC &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::ClassifierC * >(argp2);
  result = (bool)RavlN::Load((RavlN::StringC const &)*arg1,*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Load(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Load__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlImageN__ImageCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Load__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Load__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_RavlN__ClassifierC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Load__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Load'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Load(RavlN::StringC const &,RavlImageN::ImageC< RavlN::ByteT > &)\n"
    "    RavlN::Load(RavlN::StringC const &,RavlImageN::ImageC< RavlN::RealT > &)\n"
    "    RavlN::Load(RavlN::StringC const &,RavlImageN::ImageC< RavlImageN::ByteRGBValueC > &)\n"
    "    RavlN::Load(RavlN::StringC const &,RavlN::ClassifierC &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Save__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  RavlN::StringC *arg1 = 0 ;
  RavlN::ClassifierC *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Save",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = new RavlN::StringC(PyString_AsString(obj0));
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RavlN__ClassifierC,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Save" "', argument " "2"" of type '" "RavlN::ClassifierC const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Save" "', argument " "2"" of type '" "RavlN::ClassifierC const &""'"); 
  }
  arg2 = reinterpret_cast< RavlN::ClassifierC * >(argp2);
  result = (bool)RavlN::Save((RavlN::StringC const &)*arg1,(RavlN::ClassifierC const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Save(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlImageN__ImageCT_unsigned_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Save__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlImageN__ImageCT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Save__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Save__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_RavlN__ClassifierC, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Save__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Save'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    RavlN::Save(RavlN::StringC const &,RavlImageN::ImageC< RavlN::ByteT > const &)\n"
    "    RavlN::Save(RavlN::StringC const &,RavlImageN::ImageC< RavlN::RealT > const &)\n"
    "    RavlN::Save(RavlN::StringC const &,RavlImageN::ImageC< RavlImageN::ByteRGBValueC > const &)\n"
    "    RavlN::Save(RavlN::StringC const &,RavlN::ClassifierC const &)\n");
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"new_SizeC", _wrap_new_SizeC, METH_VARARGS, (char *)"\n"
		"SizeC()\n"
		"new_SizeC(size_t value) -> SizeC\n"
		""},
	 { (char *)"delete_SizeC", _wrap_delete_SizeC, METH_VARARGS, (char *)"delete_SizeC(SizeC self)"},
	 { (char *)"SizeC_swigregister", SizeC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListRealC", _wrap_new_DListRealC, METH_VARARGS, (char *)"new_DListRealC() -> DListRealC"},
	 { (char *)"DListRealC_Empty", _wrap_DListRealC_Empty, METH_VARARGS, (char *)"DListRealC_Empty(DListRealC self)"},
	 { (char *)"DListRealC_InsFirst", _wrap_DListRealC_InsFirst, METH_VARARGS, (char *)"DListRealC_InsFirst(DListRealC self, double dat)"},
	 { (char *)"DListRealC_InsLast", _wrap_DListRealC_InsLast, METH_VARARGS, (char *)"DListRealC_InsLast(DListRealC self, double dat)"},
	 { (char *)"DListRealC_PopFirst", _wrap_DListRealC_PopFirst, METH_VARARGS, (char *)"DListRealC_PopFirst(DListRealC self) -> double"},
	 { (char *)"DListRealC_PopLast", _wrap_DListRealC_PopLast, METH_VARARGS, (char *)"DListRealC_PopLast(DListRealC self) -> double"},
	 { (char *)"DListRealC_MoveFirst", _wrap_DListRealC_MoveFirst, METH_VARARGS, (char *)"DListRealC_MoveFirst(DListRealC self, DListRealC lst)"},
	 { (char *)"DListRealC_MoveLast", _wrap_DListRealC_MoveLast, METH_VARARGS, (char *)"DListRealC_MoveLast(DListRealC self, DListRealC lst)"},
	 { (char *)"DListRealC_First", _wrap_DListRealC_First, METH_VARARGS, (char *)"DListRealC_First(DListRealC self) -> double"},
	 { (char *)"DListRealC_Last", _wrap_DListRealC_Last, METH_VARARGS, (char *)"DListRealC_Last(DListRealC self) -> double"},
	 { (char *)"DListRealC_Del", _wrap_DListRealC_Del, METH_VARARGS, (char *)"DListRealC_Del(DListRealC self, double x) -> bool"},
	 { (char *)"DListRealC_Contains", _wrap_DListRealC_Contains, METH_VARARGS, (char *)"DListRealC_Contains(DListRealC self, double x) -> bool"},
	 { (char *)"DListRealC_Nth", _wrap_DListRealC_Nth, METH_VARARGS, (char *)"DListRealC_Nth(DListRealC self, int n) -> double"},
	 { (char *)"delete_DListRealC", _wrap_delete_DListRealC, METH_VARARGS, (char *)"delete_DListRealC(DListRealC self)"},
	 { (char *)"DListRealC_swigregister", DListRealC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListRealIterC", _wrap_new_DListRealIterC, METH_VARARGS, (char *)"\n"
		"DListRealIterC()\n"
		"new_DListRealIterC(DListRealC lst) -> DListRealIterC\n"
		""},
	 { (char *)"DListRealIterC_IsValid", _wrap_DListRealIterC_IsValid, METH_VARARGS, (char *)"DListRealIterC_IsValid(DListRealIterC self) -> bool"},
	 { (char *)"DListRealIterC_First", _wrap_DListRealIterC_First, METH_VARARGS, (char *)"DListRealIterC_First(DListRealIterC self)"},
	 { (char *)"DListRealIterC_Last", _wrap_DListRealIterC_Last, METH_VARARGS, (char *)"DListRealIterC_Last(DListRealIterC self)"},
	 { (char *)"DListRealIterC_IsElm", _wrap_DListRealIterC_IsElm, METH_VARARGS, (char *)"DListRealIterC_IsElm(DListRealIterC self) -> bool"},
	 { (char *)"DListRealIterC_IsFirst", _wrap_DListRealIterC_IsFirst, METH_VARARGS, (char *)"DListRealIterC_IsFirst(DListRealIterC self) -> bool"},
	 { (char *)"DListRealIterC_IsLast", _wrap_DListRealIterC_IsLast, METH_VARARGS, (char *)"DListRealIterC_IsLast(DListRealIterC self) -> bool"},
	 { (char *)"DListRealIterC_Next", _wrap_DListRealIterC_Next, METH_VARARGS, (char *)"DListRealIterC_Next(DListRealIterC self)"},
	 { (char *)"DListRealIterC_Prev", _wrap_DListRealIterC_Prev, METH_VARARGS, (char *)"DListRealIterC_Prev(DListRealIterC self)"},
	 { (char *)"DListRealIterC_NextCrc", _wrap_DListRealIterC_NextCrc, METH_VARARGS, (char *)"DListRealIterC_NextCrc(DListRealIterC self)"},
	 { (char *)"DListRealIterC_PrevCrc", _wrap_DListRealIterC_PrevCrc, METH_VARARGS, (char *)"DListRealIterC_PrevCrc(DListRealIterC self)"},
	 { (char *)"DListRealIterC_Nth", _wrap_DListRealIterC_Nth, METH_VARARGS, (char *)"DListRealIterC_Nth(DListRealIterC self, IntT n)"},
	 { (char *)"DListRealIterC_NextData", _wrap_DListRealIterC_NextData, METH_VARARGS, (char *)"DListRealIterC_NextData(DListRealIterC self) -> double"},
	 { (char *)"DListRealIterC_PrevData", _wrap_DListRealIterC_PrevData, METH_VARARGS, (char *)"DListRealIterC_PrevData(DListRealIterC self) -> double"},
	 { (char *)"DListRealIterC_NextCrcData", _wrap_DListRealIterC_NextCrcData, METH_VARARGS, (char *)"DListRealIterC_NextCrcData(DListRealIterC self) -> double"},
	 { (char *)"DListRealIterC_PrevCrcData", _wrap_DListRealIterC_PrevCrcData, METH_VARARGS, (char *)"DListRealIterC_PrevCrcData(DListRealIterC self) -> double"},
	 { (char *)"DListRealIterC_Tail", _wrap_DListRealIterC_Tail, METH_VARARGS, (char *)"DListRealIterC_Tail(DListRealIterC self) -> DListRealC"},
	 { (char *)"DListRealIterC_Head", _wrap_DListRealIterC_Head, METH_VARARGS, (char *)"DListRealIterC_Head(DListRealIterC self) -> DListRealC"},
	 { (char *)"DListRealIterC_InclusiveTail", _wrap_DListRealIterC_InclusiveTail, METH_VARARGS, (char *)"DListRealIterC_InclusiveTail(DListRealIterC self) -> DListRealC"},
	 { (char *)"DListRealIterC_InclusiveHead", _wrap_DListRealIterC_InclusiveHead, METH_VARARGS, (char *)"DListRealIterC_InclusiveHead(DListRealIterC self) -> DListRealC"},
	 { (char *)"DListRealIterC_Data", _wrap_DListRealIterC_Data, METH_VARARGS, (char *)"DListRealIterC_Data(DListRealIterC self) -> double"},
	 { (char *)"DListRealIterC___deref__", _wrap_DListRealIterC___deref__, METH_VARARGS, (char *)"DListRealIterC___deref__(DListRealIterC self) -> double"},
	 { (char *)"delete_DListRealIterC", _wrap_delete_DListRealIterC, METH_VARARGS, (char *)"delete_DListRealIterC(DListRealIterC self)"},
	 { (char *)"DListRealIterC_swigregister", DListRealIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListRealConstIterC", _wrap_new_DListRealConstIterC, METH_VARARGS, (char *)"\n"
		"DListRealConstIterC()\n"
		"new_DListRealConstIterC(DListRealC copy) -> DListRealConstIterC\n"
		""},
	 { (char *)"delete_DListRealConstIterC", _wrap_delete_DListRealConstIterC, METH_VARARGS, (char *)"delete_DListRealConstIterC(DListRealConstIterC self)"},
	 { (char *)"DListRealConstIterC_swigregister", DListRealConstIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListIntC", _wrap_new_DListIntC, METH_VARARGS, (char *)"new_DListIntC() -> DListIntC"},
	 { (char *)"DListIntC_Empty", _wrap_DListIntC_Empty, METH_VARARGS, (char *)"DListIntC_Empty(DListIntC self)"},
	 { (char *)"DListIntC_InsFirst", _wrap_DListIntC_InsFirst, METH_VARARGS, (char *)"DListIntC_InsFirst(DListIntC self, int dat)"},
	 { (char *)"DListIntC_InsLast", _wrap_DListIntC_InsLast, METH_VARARGS, (char *)"DListIntC_InsLast(DListIntC self, int dat)"},
	 { (char *)"DListIntC_PopFirst", _wrap_DListIntC_PopFirst, METH_VARARGS, (char *)"DListIntC_PopFirst(DListIntC self) -> int"},
	 { (char *)"DListIntC_PopLast", _wrap_DListIntC_PopLast, METH_VARARGS, (char *)"DListIntC_PopLast(DListIntC self) -> int"},
	 { (char *)"DListIntC_MoveFirst", _wrap_DListIntC_MoveFirst, METH_VARARGS, (char *)"DListIntC_MoveFirst(DListIntC self, DListIntC lst)"},
	 { (char *)"DListIntC_MoveLast", _wrap_DListIntC_MoveLast, METH_VARARGS, (char *)"DListIntC_MoveLast(DListIntC self, DListIntC lst)"},
	 { (char *)"DListIntC_First", _wrap_DListIntC_First, METH_VARARGS, (char *)"DListIntC_First(DListIntC self) -> int"},
	 { (char *)"DListIntC_Last", _wrap_DListIntC_Last, METH_VARARGS, (char *)"DListIntC_Last(DListIntC self) -> int"},
	 { (char *)"DListIntC_Del", _wrap_DListIntC_Del, METH_VARARGS, (char *)"DListIntC_Del(DListIntC self, int x) -> bool"},
	 { (char *)"DListIntC_Contains", _wrap_DListIntC_Contains, METH_VARARGS, (char *)"DListIntC_Contains(DListIntC self, int x) -> bool"},
	 { (char *)"DListIntC_Nth", _wrap_DListIntC_Nth, METH_VARARGS, (char *)"DListIntC_Nth(DListIntC self, int n) -> int"},
	 { (char *)"delete_DListIntC", _wrap_delete_DListIntC, METH_VARARGS, (char *)"delete_DListIntC(DListIntC self)"},
	 { (char *)"DListIntC_swigregister", DListIntC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListIntIterC", _wrap_new_DListIntIterC, METH_VARARGS, (char *)"\n"
		"DListIntIterC()\n"
		"new_DListIntIterC(DListIntC lst) -> DListIntIterC\n"
		""},
	 { (char *)"DListIntIterC_IsValid", _wrap_DListIntIterC_IsValid, METH_VARARGS, (char *)"DListIntIterC_IsValid(DListIntIterC self) -> bool"},
	 { (char *)"DListIntIterC_First", _wrap_DListIntIterC_First, METH_VARARGS, (char *)"DListIntIterC_First(DListIntIterC self)"},
	 { (char *)"DListIntIterC_Last", _wrap_DListIntIterC_Last, METH_VARARGS, (char *)"DListIntIterC_Last(DListIntIterC self)"},
	 { (char *)"DListIntIterC_IsElm", _wrap_DListIntIterC_IsElm, METH_VARARGS, (char *)"DListIntIterC_IsElm(DListIntIterC self) -> bool"},
	 { (char *)"DListIntIterC_IsFirst", _wrap_DListIntIterC_IsFirst, METH_VARARGS, (char *)"DListIntIterC_IsFirst(DListIntIterC self) -> bool"},
	 { (char *)"DListIntIterC_IsLast", _wrap_DListIntIterC_IsLast, METH_VARARGS, (char *)"DListIntIterC_IsLast(DListIntIterC self) -> bool"},
	 { (char *)"DListIntIterC_Next", _wrap_DListIntIterC_Next, METH_VARARGS, (char *)"DListIntIterC_Next(DListIntIterC self)"},
	 { (char *)"DListIntIterC_Prev", _wrap_DListIntIterC_Prev, METH_VARARGS, (char *)"DListIntIterC_Prev(DListIntIterC self)"},
	 { (char *)"DListIntIterC_NextCrc", _wrap_DListIntIterC_NextCrc, METH_VARARGS, (char *)"DListIntIterC_NextCrc(DListIntIterC self)"},
	 { (char *)"DListIntIterC_PrevCrc", _wrap_DListIntIterC_PrevCrc, METH_VARARGS, (char *)"DListIntIterC_PrevCrc(DListIntIterC self)"},
	 { (char *)"DListIntIterC_Nth", _wrap_DListIntIterC_Nth, METH_VARARGS, (char *)"DListIntIterC_Nth(DListIntIterC self, IntT n)"},
	 { (char *)"DListIntIterC_NextData", _wrap_DListIntIterC_NextData, METH_VARARGS, (char *)"DListIntIterC_NextData(DListIntIterC self) -> int"},
	 { (char *)"DListIntIterC_PrevData", _wrap_DListIntIterC_PrevData, METH_VARARGS, (char *)"DListIntIterC_PrevData(DListIntIterC self) -> int"},
	 { (char *)"DListIntIterC_NextCrcData", _wrap_DListIntIterC_NextCrcData, METH_VARARGS, (char *)"DListIntIterC_NextCrcData(DListIntIterC self) -> int"},
	 { (char *)"DListIntIterC_PrevCrcData", _wrap_DListIntIterC_PrevCrcData, METH_VARARGS, (char *)"DListIntIterC_PrevCrcData(DListIntIterC self) -> int"},
	 { (char *)"DListIntIterC_Tail", _wrap_DListIntIterC_Tail, METH_VARARGS, (char *)"DListIntIterC_Tail(DListIntIterC self) -> DListIntC"},
	 { (char *)"DListIntIterC_Head", _wrap_DListIntIterC_Head, METH_VARARGS, (char *)"DListIntIterC_Head(DListIntIterC self) -> DListIntC"},
	 { (char *)"DListIntIterC_InclusiveTail", _wrap_DListIntIterC_InclusiveTail, METH_VARARGS, (char *)"DListIntIterC_InclusiveTail(DListIntIterC self) -> DListIntC"},
	 { (char *)"DListIntIterC_InclusiveHead", _wrap_DListIntIterC_InclusiveHead, METH_VARARGS, (char *)"DListIntIterC_InclusiveHead(DListIntIterC self) -> DListIntC"},
	 { (char *)"DListIntIterC_Data", _wrap_DListIntIterC_Data, METH_VARARGS, (char *)"DListIntIterC_Data(DListIntIterC self) -> int"},
	 { (char *)"DListIntIterC___deref__", _wrap_DListIntIterC___deref__, METH_VARARGS, (char *)"DListIntIterC___deref__(DListIntIterC self) -> int"},
	 { (char *)"delete_DListIntIterC", _wrap_delete_DListIntIterC, METH_VARARGS, (char *)"delete_DListIntIterC(DListIntIterC self)"},
	 { (char *)"DListIntIterC_swigregister", DListIntIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListIntConstIterC", _wrap_new_DListIntConstIterC, METH_VARARGS, (char *)"\n"
		"DListIntConstIterC()\n"
		"new_DListIntConstIterC(DListIntC copy) -> DListIntConstIterC\n"
		""},
	 { (char *)"delete_DListIntConstIterC", _wrap_delete_DListIntConstIterC, METH_VARARGS, (char *)"delete_DListIntConstIterC(DListIntConstIterC self)"},
	 { (char *)"DListIntConstIterC_swigregister", DListIntConstIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListUIntC", _wrap_new_DListUIntC, METH_VARARGS, (char *)"new_DListUIntC() -> DListUIntC"},
	 { (char *)"DListUIntC_Empty", _wrap_DListUIntC_Empty, METH_VARARGS, (char *)"DListUIntC_Empty(DListUIntC self)"},
	 { (char *)"DListUIntC_InsFirst", _wrap_DListUIntC_InsFirst, METH_VARARGS, (char *)"DListUIntC_InsFirst(DListUIntC self, unsigned int dat)"},
	 { (char *)"DListUIntC_InsLast", _wrap_DListUIntC_InsLast, METH_VARARGS, (char *)"DListUIntC_InsLast(DListUIntC self, unsigned int dat)"},
	 { (char *)"DListUIntC_PopFirst", _wrap_DListUIntC_PopFirst, METH_VARARGS, (char *)"DListUIntC_PopFirst(DListUIntC self) -> unsigned int"},
	 { (char *)"DListUIntC_PopLast", _wrap_DListUIntC_PopLast, METH_VARARGS, (char *)"DListUIntC_PopLast(DListUIntC self) -> unsigned int"},
	 { (char *)"DListUIntC_MoveFirst", _wrap_DListUIntC_MoveFirst, METH_VARARGS, (char *)"DListUIntC_MoveFirst(DListUIntC self, DListUIntC lst)"},
	 { (char *)"DListUIntC_MoveLast", _wrap_DListUIntC_MoveLast, METH_VARARGS, (char *)"DListUIntC_MoveLast(DListUIntC self, DListUIntC lst)"},
	 { (char *)"DListUIntC_First", _wrap_DListUIntC_First, METH_VARARGS, (char *)"DListUIntC_First(DListUIntC self) -> unsigned int"},
	 { (char *)"DListUIntC_Last", _wrap_DListUIntC_Last, METH_VARARGS, (char *)"DListUIntC_Last(DListUIntC self) -> unsigned int"},
	 { (char *)"DListUIntC_Del", _wrap_DListUIntC_Del, METH_VARARGS, (char *)"DListUIntC_Del(DListUIntC self, unsigned int x) -> bool"},
	 { (char *)"DListUIntC_Contains", _wrap_DListUIntC_Contains, METH_VARARGS, (char *)"DListUIntC_Contains(DListUIntC self, unsigned int x) -> bool"},
	 { (char *)"DListUIntC_Nth", _wrap_DListUIntC_Nth, METH_VARARGS, (char *)"DListUIntC_Nth(DListUIntC self, int n) -> unsigned int"},
	 { (char *)"delete_DListUIntC", _wrap_delete_DListUIntC, METH_VARARGS, (char *)"delete_DListUIntC(DListUIntC self)"},
	 { (char *)"DListUIntC_swigregister", DListUIntC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListUIntIterC", _wrap_new_DListUIntIterC, METH_VARARGS, (char *)"\n"
		"DListUIntIterC()\n"
		"new_DListUIntIterC(DListUIntC lst) -> DListUIntIterC\n"
		""},
	 { (char *)"DListUIntIterC_IsValid", _wrap_DListUIntIterC_IsValid, METH_VARARGS, (char *)"DListUIntIterC_IsValid(DListUIntIterC self) -> bool"},
	 { (char *)"DListUIntIterC_First", _wrap_DListUIntIterC_First, METH_VARARGS, (char *)"DListUIntIterC_First(DListUIntIterC self)"},
	 { (char *)"DListUIntIterC_Last", _wrap_DListUIntIterC_Last, METH_VARARGS, (char *)"DListUIntIterC_Last(DListUIntIterC self)"},
	 { (char *)"DListUIntIterC_IsElm", _wrap_DListUIntIterC_IsElm, METH_VARARGS, (char *)"DListUIntIterC_IsElm(DListUIntIterC self) -> bool"},
	 { (char *)"DListUIntIterC_IsFirst", _wrap_DListUIntIterC_IsFirst, METH_VARARGS, (char *)"DListUIntIterC_IsFirst(DListUIntIterC self) -> bool"},
	 { (char *)"DListUIntIterC_IsLast", _wrap_DListUIntIterC_IsLast, METH_VARARGS, (char *)"DListUIntIterC_IsLast(DListUIntIterC self) -> bool"},
	 { (char *)"DListUIntIterC_Next", _wrap_DListUIntIterC_Next, METH_VARARGS, (char *)"DListUIntIterC_Next(DListUIntIterC self)"},
	 { (char *)"DListUIntIterC_Prev", _wrap_DListUIntIterC_Prev, METH_VARARGS, (char *)"DListUIntIterC_Prev(DListUIntIterC self)"},
	 { (char *)"DListUIntIterC_NextCrc", _wrap_DListUIntIterC_NextCrc, METH_VARARGS, (char *)"DListUIntIterC_NextCrc(DListUIntIterC self)"},
	 { (char *)"DListUIntIterC_PrevCrc", _wrap_DListUIntIterC_PrevCrc, METH_VARARGS, (char *)"DListUIntIterC_PrevCrc(DListUIntIterC self)"},
	 { (char *)"DListUIntIterC_Nth", _wrap_DListUIntIterC_Nth, METH_VARARGS, (char *)"DListUIntIterC_Nth(DListUIntIterC self, IntT n)"},
	 { (char *)"DListUIntIterC_NextData", _wrap_DListUIntIterC_NextData, METH_VARARGS, (char *)"DListUIntIterC_NextData(DListUIntIterC self) -> unsigned int"},
	 { (char *)"DListUIntIterC_PrevData", _wrap_DListUIntIterC_PrevData, METH_VARARGS, (char *)"DListUIntIterC_PrevData(DListUIntIterC self) -> unsigned int"},
	 { (char *)"DListUIntIterC_NextCrcData", _wrap_DListUIntIterC_NextCrcData, METH_VARARGS, (char *)"DListUIntIterC_NextCrcData(DListUIntIterC self) -> unsigned int"},
	 { (char *)"DListUIntIterC_PrevCrcData", _wrap_DListUIntIterC_PrevCrcData, METH_VARARGS, (char *)"DListUIntIterC_PrevCrcData(DListUIntIterC self) -> unsigned int"},
	 { (char *)"DListUIntIterC_Tail", _wrap_DListUIntIterC_Tail, METH_VARARGS, (char *)"DListUIntIterC_Tail(DListUIntIterC self) -> DListUIntC"},
	 { (char *)"DListUIntIterC_Head", _wrap_DListUIntIterC_Head, METH_VARARGS, (char *)"DListUIntIterC_Head(DListUIntIterC self) -> DListUIntC"},
	 { (char *)"DListUIntIterC_InclusiveTail", _wrap_DListUIntIterC_InclusiveTail, METH_VARARGS, (char *)"DListUIntIterC_InclusiveTail(DListUIntIterC self) -> DListUIntC"},
	 { (char *)"DListUIntIterC_InclusiveHead", _wrap_DListUIntIterC_InclusiveHead, METH_VARARGS, (char *)"DListUIntIterC_InclusiveHead(DListUIntIterC self) -> DListUIntC"},
	 { (char *)"DListUIntIterC_Data", _wrap_DListUIntIterC_Data, METH_VARARGS, (char *)"DListUIntIterC_Data(DListUIntIterC self) -> unsigned int"},
	 { (char *)"DListUIntIterC___deref__", _wrap_DListUIntIterC___deref__, METH_VARARGS, (char *)"DListUIntIterC___deref__(DListUIntIterC self) -> unsigned int"},
	 { (char *)"delete_DListUIntIterC", _wrap_delete_DListUIntIterC, METH_VARARGS, (char *)"delete_DListUIntIterC(DListUIntIterC self)"},
	 { (char *)"DListUIntIterC_swigregister", DListUIntIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListUIntConstIterC", _wrap_new_DListUIntConstIterC, METH_VARARGS, (char *)"\n"
		"DListUIntConstIterC()\n"
		"new_DListUIntConstIterC(DListUIntC copy) -> DListUIntConstIterC\n"
		""},
	 { (char *)"delete_DListUIntConstIterC", _wrap_delete_DListUIntConstIterC, METH_VARARGS, (char *)"delete_DListUIntConstIterC(DListUIntConstIterC self)"},
	 { (char *)"DListUIntConstIterC_swigregister", DListUIntConstIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListInt64C", _wrap_new_DListInt64C, METH_VARARGS, (char *)"new_DListInt64C() -> DListInt64C"},
	 { (char *)"DListInt64C_Empty", _wrap_DListInt64C_Empty, METH_VARARGS, (char *)"DListInt64C_Empty(DListInt64C self)"},
	 { (char *)"DListInt64C_InsFirst", _wrap_DListInt64C_InsFirst, METH_VARARGS, (char *)"DListInt64C_InsFirst(DListInt64C self, long dat)"},
	 { (char *)"DListInt64C_InsLast", _wrap_DListInt64C_InsLast, METH_VARARGS, (char *)"DListInt64C_InsLast(DListInt64C self, long dat)"},
	 { (char *)"DListInt64C_PopFirst", _wrap_DListInt64C_PopFirst, METH_VARARGS, (char *)"DListInt64C_PopFirst(DListInt64C self) -> long"},
	 { (char *)"DListInt64C_PopLast", _wrap_DListInt64C_PopLast, METH_VARARGS, (char *)"DListInt64C_PopLast(DListInt64C self) -> long"},
	 { (char *)"DListInt64C_MoveFirst", _wrap_DListInt64C_MoveFirst, METH_VARARGS, (char *)"DListInt64C_MoveFirst(DListInt64C self, DListInt64C lst)"},
	 { (char *)"DListInt64C_MoveLast", _wrap_DListInt64C_MoveLast, METH_VARARGS, (char *)"DListInt64C_MoveLast(DListInt64C self, DListInt64C lst)"},
	 { (char *)"DListInt64C_First", _wrap_DListInt64C_First, METH_VARARGS, (char *)"DListInt64C_First(DListInt64C self) -> long"},
	 { (char *)"DListInt64C_Last", _wrap_DListInt64C_Last, METH_VARARGS, (char *)"DListInt64C_Last(DListInt64C self) -> long"},
	 { (char *)"DListInt64C_Del", _wrap_DListInt64C_Del, METH_VARARGS, (char *)"DListInt64C_Del(DListInt64C self, long x) -> bool"},
	 { (char *)"DListInt64C_Contains", _wrap_DListInt64C_Contains, METH_VARARGS, (char *)"DListInt64C_Contains(DListInt64C self, long x) -> bool"},
	 { (char *)"DListInt64C_Nth", _wrap_DListInt64C_Nth, METH_VARARGS, (char *)"DListInt64C_Nth(DListInt64C self, int n) -> long"},
	 { (char *)"delete_DListInt64C", _wrap_delete_DListInt64C, METH_VARARGS, (char *)"delete_DListInt64C(DListInt64C self)"},
	 { (char *)"DListInt64C_swigregister", DListInt64C_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListInt64IterC", _wrap_new_DListInt64IterC, METH_VARARGS, (char *)"\n"
		"DListInt64IterC()\n"
		"new_DListInt64IterC(DListInt64C lst) -> DListInt64IterC\n"
		""},
	 { (char *)"DListInt64IterC_IsValid", _wrap_DListInt64IterC_IsValid, METH_VARARGS, (char *)"DListInt64IterC_IsValid(DListInt64IterC self) -> bool"},
	 { (char *)"DListInt64IterC_First", _wrap_DListInt64IterC_First, METH_VARARGS, (char *)"DListInt64IterC_First(DListInt64IterC self)"},
	 { (char *)"DListInt64IterC_Last", _wrap_DListInt64IterC_Last, METH_VARARGS, (char *)"DListInt64IterC_Last(DListInt64IterC self)"},
	 { (char *)"DListInt64IterC_IsElm", _wrap_DListInt64IterC_IsElm, METH_VARARGS, (char *)"DListInt64IterC_IsElm(DListInt64IterC self) -> bool"},
	 { (char *)"DListInt64IterC_IsFirst", _wrap_DListInt64IterC_IsFirst, METH_VARARGS, (char *)"DListInt64IterC_IsFirst(DListInt64IterC self) -> bool"},
	 { (char *)"DListInt64IterC_IsLast", _wrap_DListInt64IterC_IsLast, METH_VARARGS, (char *)"DListInt64IterC_IsLast(DListInt64IterC self) -> bool"},
	 { (char *)"DListInt64IterC_Next", _wrap_DListInt64IterC_Next, METH_VARARGS, (char *)"DListInt64IterC_Next(DListInt64IterC self)"},
	 { (char *)"DListInt64IterC_Prev", _wrap_DListInt64IterC_Prev, METH_VARARGS, (char *)"DListInt64IterC_Prev(DListInt64IterC self)"},
	 { (char *)"DListInt64IterC_NextCrc", _wrap_DListInt64IterC_NextCrc, METH_VARARGS, (char *)"DListInt64IterC_NextCrc(DListInt64IterC self)"},
	 { (char *)"DListInt64IterC_PrevCrc", _wrap_DListInt64IterC_PrevCrc, METH_VARARGS, (char *)"DListInt64IterC_PrevCrc(DListInt64IterC self)"},
	 { (char *)"DListInt64IterC_Nth", _wrap_DListInt64IterC_Nth, METH_VARARGS, (char *)"DListInt64IterC_Nth(DListInt64IterC self, IntT n)"},
	 { (char *)"DListInt64IterC_NextData", _wrap_DListInt64IterC_NextData, METH_VARARGS, (char *)"DListInt64IterC_NextData(DListInt64IterC self) -> long"},
	 { (char *)"DListInt64IterC_PrevData", _wrap_DListInt64IterC_PrevData, METH_VARARGS, (char *)"DListInt64IterC_PrevData(DListInt64IterC self) -> long"},
	 { (char *)"DListInt64IterC_NextCrcData", _wrap_DListInt64IterC_NextCrcData, METH_VARARGS, (char *)"DListInt64IterC_NextCrcData(DListInt64IterC self) -> long"},
	 { (char *)"DListInt64IterC_PrevCrcData", _wrap_DListInt64IterC_PrevCrcData, METH_VARARGS, (char *)"DListInt64IterC_PrevCrcData(DListInt64IterC self) -> long"},
	 { (char *)"DListInt64IterC_Tail", _wrap_DListInt64IterC_Tail, METH_VARARGS, (char *)"DListInt64IterC_Tail(DListInt64IterC self) -> DListInt64C"},
	 { (char *)"DListInt64IterC_Head", _wrap_DListInt64IterC_Head, METH_VARARGS, (char *)"DListInt64IterC_Head(DListInt64IterC self) -> DListInt64C"},
	 { (char *)"DListInt64IterC_InclusiveTail", _wrap_DListInt64IterC_InclusiveTail, METH_VARARGS, (char *)"DListInt64IterC_InclusiveTail(DListInt64IterC self) -> DListInt64C"},
	 { (char *)"DListInt64IterC_InclusiveHead", _wrap_DListInt64IterC_InclusiveHead, METH_VARARGS, (char *)"DListInt64IterC_InclusiveHead(DListInt64IterC self) -> DListInt64C"},
	 { (char *)"DListInt64IterC_Data", _wrap_DListInt64IterC_Data, METH_VARARGS, (char *)"DListInt64IterC_Data(DListInt64IterC self) -> long"},
	 { (char *)"DListInt64IterC___deref__", _wrap_DListInt64IterC___deref__, METH_VARARGS, (char *)"DListInt64IterC___deref__(DListInt64IterC self) -> long"},
	 { (char *)"delete_DListInt64IterC", _wrap_delete_DListInt64IterC, METH_VARARGS, (char *)"delete_DListInt64IterC(DListInt64IterC self)"},
	 { (char *)"DListInt64IterC_swigregister", DListInt64IterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListInt64ConstIterC", _wrap_new_DListInt64ConstIterC, METH_VARARGS, (char *)"\n"
		"DListInt64ConstIterC()\n"
		"new_DListInt64ConstIterC(DListInt64C copy) -> DListInt64ConstIterC\n"
		""},
	 { (char *)"delete_DListInt64ConstIterC", _wrap_delete_DListInt64ConstIterC, METH_VARARGS, (char *)"delete_DListInt64ConstIterC(DListInt64ConstIterC self)"},
	 { (char *)"DListInt64ConstIterC_swigregister", DListInt64ConstIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListInt16C", _wrap_new_DListInt16C, METH_VARARGS, (char *)"new_DListInt16C() -> DListInt16C"},
	 { (char *)"DListInt16C_Empty", _wrap_DListInt16C_Empty, METH_VARARGS, (char *)"DListInt16C_Empty(DListInt16C self)"},
	 { (char *)"DListInt16C_InsFirst", _wrap_DListInt16C_InsFirst, METH_VARARGS, (char *)"DListInt16C_InsFirst(DListInt16C self, short dat)"},
	 { (char *)"DListInt16C_InsLast", _wrap_DListInt16C_InsLast, METH_VARARGS, (char *)"DListInt16C_InsLast(DListInt16C self, short dat)"},
	 { (char *)"DListInt16C_PopFirst", _wrap_DListInt16C_PopFirst, METH_VARARGS, (char *)"DListInt16C_PopFirst(DListInt16C self) -> short"},
	 { (char *)"DListInt16C_PopLast", _wrap_DListInt16C_PopLast, METH_VARARGS, (char *)"DListInt16C_PopLast(DListInt16C self) -> short"},
	 { (char *)"DListInt16C_MoveFirst", _wrap_DListInt16C_MoveFirst, METH_VARARGS, (char *)"DListInt16C_MoveFirst(DListInt16C self, DListInt16C lst)"},
	 { (char *)"DListInt16C_MoveLast", _wrap_DListInt16C_MoveLast, METH_VARARGS, (char *)"DListInt16C_MoveLast(DListInt16C self, DListInt16C lst)"},
	 { (char *)"DListInt16C_First", _wrap_DListInt16C_First, METH_VARARGS, (char *)"DListInt16C_First(DListInt16C self) -> short"},
	 { (char *)"DListInt16C_Last", _wrap_DListInt16C_Last, METH_VARARGS, (char *)"DListInt16C_Last(DListInt16C self) -> short"},
	 { (char *)"DListInt16C_Del", _wrap_DListInt16C_Del, METH_VARARGS, (char *)"DListInt16C_Del(DListInt16C self, short x) -> bool"},
	 { (char *)"DListInt16C_Contains", _wrap_DListInt16C_Contains, METH_VARARGS, (char *)"DListInt16C_Contains(DListInt16C self, short x) -> bool"},
	 { (char *)"DListInt16C_Nth", _wrap_DListInt16C_Nth, METH_VARARGS, (char *)"DListInt16C_Nth(DListInt16C self, int n) -> short"},
	 { (char *)"delete_DListInt16C", _wrap_delete_DListInt16C, METH_VARARGS, (char *)"delete_DListInt16C(DListInt16C self)"},
	 { (char *)"DListInt16C_swigregister", DListInt16C_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListInt16IterC", _wrap_new_DListInt16IterC, METH_VARARGS, (char *)"\n"
		"DListInt16IterC()\n"
		"new_DListInt16IterC(DListInt16C lst) -> DListInt16IterC\n"
		""},
	 { (char *)"DListInt16IterC_IsValid", _wrap_DListInt16IterC_IsValid, METH_VARARGS, (char *)"DListInt16IterC_IsValid(DListInt16IterC self) -> bool"},
	 { (char *)"DListInt16IterC_First", _wrap_DListInt16IterC_First, METH_VARARGS, (char *)"DListInt16IterC_First(DListInt16IterC self)"},
	 { (char *)"DListInt16IterC_Last", _wrap_DListInt16IterC_Last, METH_VARARGS, (char *)"DListInt16IterC_Last(DListInt16IterC self)"},
	 { (char *)"DListInt16IterC_IsElm", _wrap_DListInt16IterC_IsElm, METH_VARARGS, (char *)"DListInt16IterC_IsElm(DListInt16IterC self) -> bool"},
	 { (char *)"DListInt16IterC_IsFirst", _wrap_DListInt16IterC_IsFirst, METH_VARARGS, (char *)"DListInt16IterC_IsFirst(DListInt16IterC self) -> bool"},
	 { (char *)"DListInt16IterC_IsLast", _wrap_DListInt16IterC_IsLast, METH_VARARGS, (char *)"DListInt16IterC_IsLast(DListInt16IterC self) -> bool"},
	 { (char *)"DListInt16IterC_Next", _wrap_DListInt16IterC_Next, METH_VARARGS, (char *)"DListInt16IterC_Next(DListInt16IterC self)"},
	 { (char *)"DListInt16IterC_Prev", _wrap_DListInt16IterC_Prev, METH_VARARGS, (char *)"DListInt16IterC_Prev(DListInt16IterC self)"},
	 { (char *)"DListInt16IterC_NextCrc", _wrap_DListInt16IterC_NextCrc, METH_VARARGS, (char *)"DListInt16IterC_NextCrc(DListInt16IterC self)"},
	 { (char *)"DListInt16IterC_PrevCrc", _wrap_DListInt16IterC_PrevCrc, METH_VARARGS, (char *)"DListInt16IterC_PrevCrc(DListInt16IterC self)"},
	 { (char *)"DListInt16IterC_Nth", _wrap_DListInt16IterC_Nth, METH_VARARGS, (char *)"DListInt16IterC_Nth(DListInt16IterC self, IntT n)"},
	 { (char *)"DListInt16IterC_NextData", _wrap_DListInt16IterC_NextData, METH_VARARGS, (char *)"DListInt16IterC_NextData(DListInt16IterC self) -> short"},
	 { (char *)"DListInt16IterC_PrevData", _wrap_DListInt16IterC_PrevData, METH_VARARGS, (char *)"DListInt16IterC_PrevData(DListInt16IterC self) -> short"},
	 { (char *)"DListInt16IterC_NextCrcData", _wrap_DListInt16IterC_NextCrcData, METH_VARARGS, (char *)"DListInt16IterC_NextCrcData(DListInt16IterC self) -> short"},
	 { (char *)"DListInt16IterC_PrevCrcData", _wrap_DListInt16IterC_PrevCrcData, METH_VARARGS, (char *)"DListInt16IterC_PrevCrcData(DListInt16IterC self) -> short"},
	 { (char *)"DListInt16IterC_Tail", _wrap_DListInt16IterC_Tail, METH_VARARGS, (char *)"DListInt16IterC_Tail(DListInt16IterC self) -> DListInt16C"},
	 { (char *)"DListInt16IterC_Head", _wrap_DListInt16IterC_Head, METH_VARARGS, (char *)"DListInt16IterC_Head(DListInt16IterC self) -> DListInt16C"},
	 { (char *)"DListInt16IterC_InclusiveTail", _wrap_DListInt16IterC_InclusiveTail, METH_VARARGS, (char *)"DListInt16IterC_InclusiveTail(DListInt16IterC self) -> DListInt16C"},
	 { (char *)"DListInt16IterC_InclusiveHead", _wrap_DListInt16IterC_InclusiveHead, METH_VARARGS, (char *)"DListInt16IterC_InclusiveHead(DListInt16IterC self) -> DListInt16C"},
	 { (char *)"DListInt16IterC_Data", _wrap_DListInt16IterC_Data, METH_VARARGS, (char *)"DListInt16IterC_Data(DListInt16IterC self) -> short"},
	 { (char *)"DListInt16IterC___deref__", _wrap_DListInt16IterC___deref__, METH_VARARGS, (char *)"DListInt16IterC___deref__(DListInt16IterC self) -> short"},
	 { (char *)"delete_DListInt16IterC", _wrap_delete_DListInt16IterC, METH_VARARGS, (char *)"delete_DListInt16IterC(DListInt16IterC self)"},
	 { (char *)"DListInt16IterC_swigregister", DListInt16IterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListInt16ConstIterC", _wrap_new_DListInt16ConstIterC, METH_VARARGS, (char *)"\n"
		"DListInt16ConstIterC()\n"
		"new_DListInt16ConstIterC(DListInt16C copy) -> DListInt16ConstIterC\n"
		""},
	 { (char *)"delete_DListInt16ConstIterC", _wrap_delete_DListInt16ConstIterC, METH_VARARGS, (char *)"delete_DListInt16ConstIterC(DListInt16ConstIterC self)"},
	 { (char *)"DListInt16ConstIterC_swigregister", DListInt16ConstIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListByteC", _wrap_new_DListByteC, METH_VARARGS, (char *)"new_DListByteC() -> DListByteC"},
	 { (char *)"DListByteC_Empty", _wrap_DListByteC_Empty, METH_VARARGS, (char *)"DListByteC_Empty(DListByteC self)"},
	 { (char *)"DListByteC_InsFirst", _wrap_DListByteC_InsFirst, METH_VARARGS, (char *)"DListByteC_InsFirst(DListByteC self, unsigned char dat)"},
	 { (char *)"DListByteC_InsLast", _wrap_DListByteC_InsLast, METH_VARARGS, (char *)"DListByteC_InsLast(DListByteC self, unsigned char dat)"},
	 { (char *)"DListByteC_PopFirst", _wrap_DListByteC_PopFirst, METH_VARARGS, (char *)"DListByteC_PopFirst(DListByteC self) -> unsigned char"},
	 { (char *)"DListByteC_PopLast", _wrap_DListByteC_PopLast, METH_VARARGS, (char *)"DListByteC_PopLast(DListByteC self) -> unsigned char"},
	 { (char *)"DListByteC_MoveFirst", _wrap_DListByteC_MoveFirst, METH_VARARGS, (char *)"DListByteC_MoveFirst(DListByteC self, DListByteC lst)"},
	 { (char *)"DListByteC_MoveLast", _wrap_DListByteC_MoveLast, METH_VARARGS, (char *)"DListByteC_MoveLast(DListByteC self, DListByteC lst)"},
	 { (char *)"DListByteC_First", _wrap_DListByteC_First, METH_VARARGS, (char *)"DListByteC_First(DListByteC self) -> unsigned char"},
	 { (char *)"DListByteC_Last", _wrap_DListByteC_Last, METH_VARARGS, (char *)"DListByteC_Last(DListByteC self) -> unsigned char"},
	 { (char *)"DListByteC_Del", _wrap_DListByteC_Del, METH_VARARGS, (char *)"DListByteC_Del(DListByteC self, unsigned char x) -> bool"},
	 { (char *)"DListByteC_Contains", _wrap_DListByteC_Contains, METH_VARARGS, (char *)"DListByteC_Contains(DListByteC self, unsigned char x) -> bool"},
	 { (char *)"DListByteC_Nth", _wrap_DListByteC_Nth, METH_VARARGS, (char *)"DListByteC_Nth(DListByteC self, int n) -> unsigned char"},
	 { (char *)"delete_DListByteC", _wrap_delete_DListByteC, METH_VARARGS, (char *)"delete_DListByteC(DListByteC self)"},
	 { (char *)"DListByteC_swigregister", DListByteC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListByteIterC", _wrap_new_DListByteIterC, METH_VARARGS, (char *)"\n"
		"DListByteIterC()\n"
		"new_DListByteIterC(DListByteC lst) -> DListByteIterC\n"
		""},
	 { (char *)"DListByteIterC_IsValid", _wrap_DListByteIterC_IsValid, METH_VARARGS, (char *)"DListByteIterC_IsValid(DListByteIterC self) -> bool"},
	 { (char *)"DListByteIterC_First", _wrap_DListByteIterC_First, METH_VARARGS, (char *)"DListByteIterC_First(DListByteIterC self)"},
	 { (char *)"DListByteIterC_Last", _wrap_DListByteIterC_Last, METH_VARARGS, (char *)"DListByteIterC_Last(DListByteIterC self)"},
	 { (char *)"DListByteIterC_IsElm", _wrap_DListByteIterC_IsElm, METH_VARARGS, (char *)"DListByteIterC_IsElm(DListByteIterC self) -> bool"},
	 { (char *)"DListByteIterC_IsFirst", _wrap_DListByteIterC_IsFirst, METH_VARARGS, (char *)"DListByteIterC_IsFirst(DListByteIterC self) -> bool"},
	 { (char *)"DListByteIterC_IsLast", _wrap_DListByteIterC_IsLast, METH_VARARGS, (char *)"DListByteIterC_IsLast(DListByteIterC self) -> bool"},
	 { (char *)"DListByteIterC_Next", _wrap_DListByteIterC_Next, METH_VARARGS, (char *)"DListByteIterC_Next(DListByteIterC self)"},
	 { (char *)"DListByteIterC_Prev", _wrap_DListByteIterC_Prev, METH_VARARGS, (char *)"DListByteIterC_Prev(DListByteIterC self)"},
	 { (char *)"DListByteIterC_NextCrc", _wrap_DListByteIterC_NextCrc, METH_VARARGS, (char *)"DListByteIterC_NextCrc(DListByteIterC self)"},
	 { (char *)"DListByteIterC_PrevCrc", _wrap_DListByteIterC_PrevCrc, METH_VARARGS, (char *)"DListByteIterC_PrevCrc(DListByteIterC self)"},
	 { (char *)"DListByteIterC_Nth", _wrap_DListByteIterC_Nth, METH_VARARGS, (char *)"DListByteIterC_Nth(DListByteIterC self, IntT n)"},
	 { (char *)"DListByteIterC_NextData", _wrap_DListByteIterC_NextData, METH_VARARGS, (char *)"DListByteIterC_NextData(DListByteIterC self) -> unsigned char"},
	 { (char *)"DListByteIterC_PrevData", _wrap_DListByteIterC_PrevData, METH_VARARGS, (char *)"DListByteIterC_PrevData(DListByteIterC self) -> unsigned char"},
	 { (char *)"DListByteIterC_NextCrcData", _wrap_DListByteIterC_NextCrcData, METH_VARARGS, (char *)"DListByteIterC_NextCrcData(DListByteIterC self) -> unsigned char"},
	 { (char *)"DListByteIterC_PrevCrcData", _wrap_DListByteIterC_PrevCrcData, METH_VARARGS, (char *)"DListByteIterC_PrevCrcData(DListByteIterC self) -> unsigned char"},
	 { (char *)"DListByteIterC_Tail", _wrap_DListByteIterC_Tail, METH_VARARGS, (char *)"DListByteIterC_Tail(DListByteIterC self) -> DListByteC"},
	 { (char *)"DListByteIterC_Head", _wrap_DListByteIterC_Head, METH_VARARGS, (char *)"DListByteIterC_Head(DListByteIterC self) -> DListByteC"},
	 { (char *)"DListByteIterC_InclusiveTail", _wrap_DListByteIterC_InclusiveTail, METH_VARARGS, (char *)"DListByteIterC_InclusiveTail(DListByteIterC self) -> DListByteC"},
	 { (char *)"DListByteIterC_InclusiveHead", _wrap_DListByteIterC_InclusiveHead, METH_VARARGS, (char *)"DListByteIterC_InclusiveHead(DListByteIterC self) -> DListByteC"},
	 { (char *)"DListByteIterC_Data", _wrap_DListByteIterC_Data, METH_VARARGS, (char *)"DListByteIterC_Data(DListByteIterC self) -> unsigned char"},
	 { (char *)"DListByteIterC___deref__", _wrap_DListByteIterC___deref__, METH_VARARGS, (char *)"DListByteIterC___deref__(DListByteIterC self) -> unsigned char"},
	 { (char *)"delete_DListByteIterC", _wrap_delete_DListByteIterC, METH_VARARGS, (char *)"delete_DListByteIterC(DListByteIterC self)"},
	 { (char *)"DListByteIterC_swigregister", DListByteIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListByteConstIterC", _wrap_new_DListByteConstIterC, METH_VARARGS, (char *)"\n"
		"DListByteConstIterC()\n"
		"new_DListByteConstIterC(DListByteC copy) -> DListByteConstIterC\n"
		""},
	 { (char *)"delete_DListByteConstIterC", _wrap_delete_DListByteConstIterC, METH_VARARGS, (char *)"delete_DListByteConstIterC(DListByteConstIterC self)"},
	 { (char *)"DListByteConstIterC_swigregister", DListByteConstIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Point2dC", _wrap_new_Point2dC, METH_VARARGS, (char *)"\n"
		"Point2dC()\n"
		"new_Point2dC(RealT x, RealT y) -> Point2dC\n"
		""},
	 { (char *)"Point2dC_Row", _wrap_Point2dC_Row, METH_VARARGS, (char *)"Point2dC_Row(Point2dC self) -> RealT"},
	 { (char *)"Point2dC_Col", _wrap_Point2dC_Col, METH_VARARGS, (char *)"Point2dC_Col(Point2dC self) -> RealT"},
	 { (char *)"delete_Point2dC", _wrap_delete_Point2dC, METH_VARARGS, (char *)"delete_Point2dC(Point2dC self)"},
	 { (char *)"Point2dC_swigregister", Point2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListPoint2dC", _wrap_new_DListPoint2dC, METH_VARARGS, (char *)"new_DListPoint2dC() -> DListPoint2dC"},
	 { (char *)"DListPoint2dC_Empty", _wrap_DListPoint2dC_Empty, METH_VARARGS, (char *)"DListPoint2dC_Empty(DListPoint2dC self)"},
	 { (char *)"DListPoint2dC_InsFirst", _wrap_DListPoint2dC_InsFirst, METH_VARARGS, (char *)"DListPoint2dC_InsFirst(DListPoint2dC self, Point2dC dat)"},
	 { (char *)"DListPoint2dC_InsLast", _wrap_DListPoint2dC_InsLast, METH_VARARGS, (char *)"DListPoint2dC_InsLast(DListPoint2dC self, Point2dC dat)"},
	 { (char *)"DListPoint2dC_PopFirst", _wrap_DListPoint2dC_PopFirst, METH_VARARGS, (char *)"DListPoint2dC_PopFirst(DListPoint2dC self) -> Point2dC"},
	 { (char *)"DListPoint2dC_PopLast", _wrap_DListPoint2dC_PopLast, METH_VARARGS, (char *)"DListPoint2dC_PopLast(DListPoint2dC self) -> Point2dC"},
	 { (char *)"DListPoint2dC_MoveFirst", _wrap_DListPoint2dC_MoveFirst, METH_VARARGS, (char *)"DListPoint2dC_MoveFirst(DListPoint2dC self, DListPoint2dC lst)"},
	 { (char *)"DListPoint2dC_MoveLast", _wrap_DListPoint2dC_MoveLast, METH_VARARGS, (char *)"DListPoint2dC_MoveLast(DListPoint2dC self, DListPoint2dC lst)"},
	 { (char *)"DListPoint2dC_First", _wrap_DListPoint2dC_First, METH_VARARGS, (char *)"DListPoint2dC_First(DListPoint2dC self) -> Point2dC"},
	 { (char *)"DListPoint2dC_Last", _wrap_DListPoint2dC_Last, METH_VARARGS, (char *)"DListPoint2dC_Last(DListPoint2dC self) -> Point2dC"},
	 { (char *)"DListPoint2dC_Del", _wrap_DListPoint2dC_Del, METH_VARARGS, (char *)"DListPoint2dC_Del(DListPoint2dC self, Point2dC x) -> bool"},
	 { (char *)"DListPoint2dC_Contains", _wrap_DListPoint2dC_Contains, METH_VARARGS, (char *)"DListPoint2dC_Contains(DListPoint2dC self, Point2dC x) -> bool"},
	 { (char *)"DListPoint2dC_Nth", _wrap_DListPoint2dC_Nth, METH_VARARGS, (char *)"DListPoint2dC_Nth(DListPoint2dC self, int n) -> Point2dC"},
	 { (char *)"delete_DListPoint2dC", _wrap_delete_DListPoint2dC, METH_VARARGS, (char *)"delete_DListPoint2dC(DListPoint2dC self)"},
	 { (char *)"DListPoint2dC_swigregister", DListPoint2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DListPoint2dIterC", _wrap_new_DListPoint2dIterC, METH_VARARGS, (char *)"\n"
		"DListPoint2dIterC()\n"
		"new_DListPoint2dIterC(DListPoint2dC lst) -> DListPoint2dIterC\n"
		""},
	 { (char *)"DListPoint2dIterC_IsValid", _wrap_DListPoint2dIterC_IsValid, METH_VARARGS, (char *)"DListPoint2dIterC_IsValid(DListPoint2dIterC self) -> bool"},
	 { (char *)"DListPoint2dIterC_First", _wrap_DListPoint2dIterC_First, METH_VARARGS, (char *)"DListPoint2dIterC_First(DListPoint2dIterC self)"},
	 { (char *)"DListPoint2dIterC_Last", _wrap_DListPoint2dIterC_Last, METH_VARARGS, (char *)"DListPoint2dIterC_Last(DListPoint2dIterC self)"},
	 { (char *)"DListPoint2dIterC_IsElm", _wrap_DListPoint2dIterC_IsElm, METH_VARARGS, (char *)"DListPoint2dIterC_IsElm(DListPoint2dIterC self) -> bool"},
	 { (char *)"DListPoint2dIterC_IsFirst", _wrap_DListPoint2dIterC_IsFirst, METH_VARARGS, (char *)"DListPoint2dIterC_IsFirst(DListPoint2dIterC self) -> bool"},
	 { (char *)"DListPoint2dIterC_IsLast", _wrap_DListPoint2dIterC_IsLast, METH_VARARGS, (char *)"DListPoint2dIterC_IsLast(DListPoint2dIterC self) -> bool"},
	 { (char *)"DListPoint2dIterC_Next", _wrap_DListPoint2dIterC_Next, METH_VARARGS, (char *)"DListPoint2dIterC_Next(DListPoint2dIterC self)"},
	 { (char *)"DListPoint2dIterC_Prev", _wrap_DListPoint2dIterC_Prev, METH_VARARGS, (char *)"DListPoint2dIterC_Prev(DListPoint2dIterC self)"},
	 { (char *)"DListPoint2dIterC_NextCrc", _wrap_DListPoint2dIterC_NextCrc, METH_VARARGS, (char *)"DListPoint2dIterC_NextCrc(DListPoint2dIterC self)"},
	 { (char *)"DListPoint2dIterC_PrevCrc", _wrap_DListPoint2dIterC_PrevCrc, METH_VARARGS, (char *)"DListPoint2dIterC_PrevCrc(DListPoint2dIterC self)"},
	 { (char *)"DListPoint2dIterC_Nth", _wrap_DListPoint2dIterC_Nth, METH_VARARGS, (char *)"DListPoint2dIterC_Nth(DListPoint2dIterC self, IntT n)"},
	 { (char *)"DListPoint2dIterC_NextData", _wrap_DListPoint2dIterC_NextData, METH_VARARGS, (char *)"DListPoint2dIterC_NextData(DListPoint2dIterC self) -> Point2dC"},
	 { (char *)"DListPoint2dIterC_PrevData", _wrap_DListPoint2dIterC_PrevData, METH_VARARGS, (char *)"DListPoint2dIterC_PrevData(DListPoint2dIterC self) -> Point2dC"},
	 { (char *)"DListPoint2dIterC_NextCrcData", _wrap_DListPoint2dIterC_NextCrcData, METH_VARARGS, (char *)"DListPoint2dIterC_NextCrcData(DListPoint2dIterC self) -> Point2dC"},
	 { (char *)"DListPoint2dIterC_PrevCrcData", _wrap_DListPoint2dIterC_PrevCrcData, METH_VARARGS, (char *)"DListPoint2dIterC_PrevCrcData(DListPoint2dIterC self) -> Point2dC"},
	 { (char *)"DListPoint2dIterC_Tail", _wrap_DListPoint2dIterC_Tail, METH_VARARGS, (char *)"DListPoint2dIterC_Tail(DListPoint2dIterC self) -> DListPoint2dC"},
	 { (char *)"DListPoint2dIterC_Head", _wrap_DListPoint2dIterC_Head, METH_VARARGS, (char *)"DListPoint2dIterC_Head(DListPoint2dIterC self) -> DListPoint2dC"},
	 { (char *)"DListPoint2dIterC_InclusiveTail", _wrap_DListPoint2dIterC_InclusiveTail, METH_VARARGS, (char *)"DListPoint2dIterC_InclusiveTail(DListPoint2dIterC self) -> DListPoint2dC"},
	 { (char *)"DListPoint2dIterC_InclusiveHead", _wrap_DListPoint2dIterC_InclusiveHead, METH_VARARGS, (char *)"DListPoint2dIterC_InclusiveHead(DListPoint2dIterC self) -> DListPoint2dC"},
	 { (char *)"DListPoint2dIterC_Data", _wrap_DListPoint2dIterC_Data, METH_VARARGS, (char *)"DListPoint2dIterC_Data(DListPoint2dIterC self) -> Point2dC"},
	 { (char *)"DListPoint2dIterC___deref__", _wrap_DListPoint2dIterC___deref__, METH_VARARGS, (char *)"DListPoint2dIterC___deref__(DListPoint2dIterC self) -> Point2dC"},
	 { (char *)"delete_DListPoint2dIterC", _wrap_delete_DListPoint2dIterC, METH_VARARGS, (char *)"delete_DListPoint2dIterC(DListPoint2dIterC self)"},
	 { (char *)"DListPoint2dIterC_Row", _wrap_DListPoint2dIterC_Row, METH_VARARGS, (char *)"DListPoint2dIterC_Row(DListPoint2dIterC self) -> RealT"},
	 { (char *)"DListPoint2dIterC_Col", _wrap_DListPoint2dIterC_Col, METH_VARARGS, (char *)"DListPoint2dIterC_Col(DListPoint2dIterC self) -> RealT"},
	 { (char *)"DListPoint2dIterC_swigregister", DListPoint2dIterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"ToList", _wrap_ToList, METH_VARARGS, (char *)"\n"
		"ToList(DListRealC list) -> PyObject\n"
		"ToList(DListIntC list) -> PyObject\n"
		"ToList(DListUIntC list) -> PyObject\n"
		"ToList(DListInt64C list) -> PyObject\n"
		"ToList(DListInt16C list) -> PyObject\n"
		"ToList(DListByteC list) -> PyObject\n"
		"ToList(DListPoint2dC list) -> PyObject\n"
		""},
	 { (char *)"new_IndexC", _wrap_new_IndexC, METH_VARARGS, (char *)"\n"
		"IndexC()\n"
		"new_IndexC(IntT arg0) -> IndexC\n"
		""},
	 { (char *)"IndexC_V", _wrap_IndexC_V, METH_VARARGS, (char *)"IndexC_V(IndexC self) -> IntT"},
	 { (char *)"delete_IndexC", _wrap_delete_IndexC, METH_VARARGS, (char *)"delete_IndexC(IndexC self)"},
	 { (char *)"IndexC_swigregister", IndexC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IndexRangeC", _wrap_new_IndexRangeC, METH_VARARGS, (char *)"\n"
		"IndexRangeC(size_t dim = 0)\n"
		"IndexRangeC()\n"
		"IndexRangeC(IndexC dim)\n"
		"IndexRangeC(SizeC dim)\n"
		"new_IndexRangeC(IndexC minIndex, IndexC maxIndex) -> IndexRangeC\n"
		""},
	 { (char *)"IndexRangeC_Size", _wrap_IndexRangeC_Size, METH_VARARGS, (char *)"IndexRangeC_Size(IndexRangeC self) -> IntT"},
	 { (char *)"IndexRangeC_Range", _wrap_IndexRangeC_Range, METH_VARARGS, (char *)"IndexRangeC_Range(IndexRangeC self) -> IndexRangeC"},
	 { (char *)"IndexRangeC_Min", _wrap_IndexRangeC_Min, METH_VARARGS, (char *)"\n"
		"Min() -> IndexC\n"
		"IndexRangeC_Min(IndexRangeC self) -> IndexC\n"
		""},
	 { (char *)"IndexRangeC_Max", _wrap_IndexRangeC_Max, METH_VARARGS, (char *)"\n"
		"Max() -> IndexC\n"
		"IndexRangeC_Max(IndexRangeC self) -> IndexC\n"
		""},
	 { (char *)"IndexRangeC_Center", _wrap_IndexRangeC_Center, METH_VARARGS, (char *)"IndexRangeC_Center(IndexRangeC self) -> IndexC"},
	 { (char *)"IndexRangeC_CenterD", _wrap_IndexRangeC_CenterD, METH_VARARGS, (char *)"IndexRangeC_CenterD(IndexRangeC self) -> IndexC"},
	 { (char *)"IndexRangeC_Percentage", _wrap_IndexRangeC_Percentage, METH_VARARGS, (char *)"IndexRangeC_Percentage(IndexRangeC self, RealT p) -> IndexC"},
	 { (char *)"IndexRangeC_IsEmpty", _wrap_IndexRangeC_IsEmpty, METH_VARARGS, (char *)"IndexRangeC_IsEmpty(IndexRangeC self) -> bool"},
	 { (char *)"IndexRangeC_IsValid", _wrap_IndexRangeC_IsValid, METH_VARARGS, (char *)"IndexRangeC_IsValid(IndexRangeC self) -> bool"},
	 { (char *)"IndexRangeC_Contains", _wrap_IndexRangeC_Contains, METH_VARARGS, (char *)"\n"
		"Contains(IndexC i) -> bool\n"
		"Contains(RealT val) -> bool\n"
		"IndexRangeC_Contains(IndexRangeC self, IndexRangeC range) -> bool\n"
		""},
	 { (char *)"IndexRangeC___eq__", _wrap_IndexRangeC___eq__, METH_VARARGS, (char *)"IndexRangeC___eq__(IndexRangeC self, IndexRangeC range) -> bool"},
	 { (char *)"IndexRangeC___ne__", _wrap_IndexRangeC___ne__, METH_VARARGS, (char *)"IndexRangeC___ne__(IndexRangeC self, IndexRangeC range) -> bool"},
	 { (char *)"IndexRangeC_In", _wrap_IndexRangeC_In, METH_VARARGS, (char *)"IndexRangeC_In(IndexRangeC self, IndexRangeC range) -> bool"},
	 { (char *)"IndexRangeC_IsOverlapping", _wrap_IndexRangeC_IsOverlapping, METH_VARARGS, (char *)"IndexRangeC_IsOverlapping(IndexRangeC self, IndexRangeC r) -> bool"},
	 { (char *)"IndexRangeC_SetOrigin", _wrap_IndexRangeC_SetOrigin, METH_VARARGS, (char *)"IndexRangeC_SetOrigin(IndexRangeC self, IndexC position) -> IndexRangeC"},
	 { (char *)"IndexRangeC___idiv__", _wrap_IndexRangeC___idiv__, METH_VARARGS, (char *)"IndexRangeC___idiv__(IndexRangeC self, IndexC i) -> IndexRangeC"},
	 { (char *)"IndexRangeC___imul__", _wrap_IndexRangeC___imul__, METH_VARARGS, (char *)"IndexRangeC___imul__(IndexRangeC self, IndexC i) -> IndexRangeC"},
	 { (char *)"IndexRangeC___div__", _wrap_IndexRangeC___div__, METH_VARARGS, (char *)"IndexRangeC___div__(IndexRangeC self, IndexC i) -> IndexRangeC"},
	 { (char *)"IndexRangeC___mul__", _wrap_IndexRangeC___mul__, METH_VARARGS, (char *)"IndexRangeC___mul__(IndexRangeC self, IndexC i) -> IndexRangeC"},
	 { (char *)"IndexRangeC_ClipBy", _wrap_IndexRangeC_ClipBy, METH_VARARGS, (char *)"IndexRangeC_ClipBy(IndexRangeC self, IndexRangeC r) -> IndexRangeC"},
	 { (char *)"IndexRangeC_Clip", _wrap_IndexRangeC_Clip, METH_VARARGS, (char *)"\n"
		"Clip(IndexRangeC r) -> IndexRangeC\n"
		"IndexRangeC_Clip(IndexRangeC self, IndexC i) -> IndexC\n"
		""},
	 { (char *)"IndexRangeC_FirstHalf", _wrap_IndexRangeC_FirstHalf, METH_VARARGS, (char *)"IndexRangeC_FirstHalf(IndexRangeC self) -> IndexRangeC"},
	 { (char *)"IndexRangeC_FirstHalfD", _wrap_IndexRangeC_FirstHalfD, METH_VARARGS, (char *)"IndexRangeC_FirstHalfD(IndexRangeC self) -> IndexRangeC"},
	 { (char *)"IndexRangeC_Enlarge", _wrap_IndexRangeC_Enlarge, METH_VARARGS, (char *)"IndexRangeC_Enlarge(IndexRangeC self, IndexC f) -> IndexRangeC"},
	 { (char *)"IndexRangeC_Expand", _wrap_IndexRangeC_Expand, METH_VARARGS, (char *)"IndexRangeC_Expand(IndexRangeC self, IndexC n) -> IndexRangeC"},
	 { (char *)"IndexRangeC_Shrink", _wrap_IndexRangeC_Shrink, METH_VARARGS, (char *)"IndexRangeC_Shrink(IndexRangeC self, IndexC n) -> IndexRangeC"},
	 { (char *)"IndexRangeC_ShrinkHigh", _wrap_IndexRangeC_ShrinkHigh, METH_VARARGS, (char *)"IndexRangeC_ShrinkHigh(IndexRangeC self, IndexC n) -> IndexRangeC"},
	 { (char *)"IndexRangeC_Swap", _wrap_IndexRangeC_Swap, METH_VARARGS, (char *)"IndexRangeC_Swap(IndexRangeC self, IndexRangeC r) -> IndexRangeC"},
	 { (char *)"IndexRangeC_Involve", _wrap_IndexRangeC_Involve, METH_VARARGS, (char *)"\n"
		"Involve(IndexC i) -> IndexRangeC\n"
		"IndexRangeC_Involve(IndexRangeC self, IndexRangeC subRange) -> IndexRangeC\n"
		""},
	 { (char *)"IndexRangeC___iadd__", _wrap_IndexRangeC___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(IndexC i) -> IndexRangeC\n"
		"__iadd__(IntT i) -> IndexRangeC\n"
		"__iadd__(UIntT i) -> IndexRangeC\n"
		"__iadd__(SizeC i) -> IndexRangeC\n"
		"IndexRangeC___iadd__(IndexRangeC self, IndexRangeC subRange) -> IndexRangeC\n"
		""},
	 { (char *)"IndexRangeC___isub__", _wrap_IndexRangeC___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(IndexC i) -> IndexRangeC\n"
		"__isub__(IntT i) -> IndexRangeC\n"
		"__isub__(UIntT i) -> IndexRangeC\n"
		"__isub__(SizeC i) -> IndexRangeC\n"
		"IndexRangeC___isub__(IndexRangeC self, IndexRangeC subRange) -> IndexRangeC\n"
		""},
	 { (char *)"IndexRangeC___add__", _wrap_IndexRangeC___add__, METH_VARARGS, (char *)"\n"
		"__add__(IndexC i) -> IndexRangeC\n"
		"__add__(IntT i) -> IndexRangeC\n"
		"__add__(UIntT i) -> IndexRangeC\n"
		"__add__(SizeC i) -> IndexRangeC\n"
		"IndexRangeC___add__(IndexRangeC self, IndexRangeC subRange) -> IndexRangeC\n"
		""},
	 { (char *)"IndexRangeC___sub__", _wrap_IndexRangeC___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(IndexC i) -> IndexRangeC\n"
		"__sub__(IntT i) -> IndexRangeC\n"
		"__sub__(UIntT i) -> IndexRangeC\n"
		"__sub__(SizeC i) -> IndexRangeC\n"
		"IndexRangeC___sub__(IndexRangeC self, IndexRangeC subRange) -> IndexRangeC\n"
		""},
	 { (char *)"IndexRangeC_AlignWithin", _wrap_IndexRangeC_AlignWithin, METH_VARARGS, (char *)"IndexRangeC_AlignWithin(IndexRangeC self, IntT alignment) -> IndexRangeC"},
	 { (char *)"IndexRangeC_Hash", _wrap_IndexRangeC_Hash, METH_VARARGS, (char *)"IndexRangeC_Hash(IndexRangeC self) -> SizeT"},
	 { (char *)"IndexRangeC___str__", _wrap_IndexRangeC___str__, METH_VARARGS, (char *)"IndexRangeC___str__(IndexRangeC self) -> char"},
	 { (char *)"IndexRangeC___nonzero__", _wrap_IndexRangeC___nonzero__, METH_VARARGS, (char *)"IndexRangeC___nonzero__(IndexRangeC self) -> bool"},
	 { (char *)"IndexRangeC___len__", _wrap_IndexRangeC___len__, METH_VARARGS, (char *)"IndexRangeC___len__(IndexRangeC self) -> int"},
	 { (char *)"delete_IndexRangeC", _wrap_delete_IndexRangeC, METH_VARARGS, (char *)"delete_IndexRangeC(IndexRangeC self)"},
	 { (char *)"IndexRangeC_swigregister", IndexRangeC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Index2dC", _wrap_new_Index2dC, METH_VARARGS, (char *)"\n"
		"Index2dC()\n"
		"Index2dC(IntT x, IntT y)\n"
		"new_Index2dC(IndexC x, IndexC y) -> Index2dC\n"
		""},
	 { (char *)"Index2dC_Row", _wrap_Index2dC_Row, METH_VARARGS, (char *)"Index2dC_Row(Index2dC self) -> IndexC"},
	 { (char *)"Index2dC_Col", _wrap_Index2dC_Col, METH_VARARGS, (char *)"Index2dC_Col(Index2dC self) -> IndexC"},
	 { (char *)"delete_Index2dC", _wrap_delete_Index2dC, METH_VARARGS, (char *)"delete_Index2dC(Index2dC self)"},
	 { (char *)"Index2dC_swigregister", Index2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IndexRange2dC", _wrap_new_IndexRange2dC, METH_VARARGS, (char *)"new_IndexRange2dC() -> IndexRange2dC"},
	 { (char *)"IndexRange2dC_TRow", _wrap_IndexRange2dC_TRow, METH_VARARGS, (char *)"IndexRange2dC_TRow(IndexRange2dC self) -> IndexC"},
	 { (char *)"IndexRange2dC_BRow", _wrap_IndexRange2dC_BRow, METH_VARARGS, (char *)"IndexRange2dC_BRow(IndexRange2dC self) -> IndexC"},
	 { (char *)"IndexRange2dC_LCol", _wrap_IndexRange2dC_LCol, METH_VARARGS, (char *)"IndexRange2dC_LCol(IndexRange2dC self) -> IndexC"},
	 { (char *)"IndexRange2dC_RCol", _wrap_IndexRange2dC_RCol, METH_VARARGS, (char *)"IndexRange2dC_RCol(IndexRange2dC self) -> IndexC"},
	 { (char *)"IndexRange2dC_TopLeft", _wrap_IndexRange2dC_TopLeft, METH_VARARGS, (char *)"IndexRange2dC_TopLeft(IndexRange2dC self) -> Index2dC"},
	 { (char *)"IndexRange2dC_TopRight", _wrap_IndexRange2dC_TopRight, METH_VARARGS, (char *)"IndexRange2dC_TopRight(IndexRange2dC self) -> Index2dC"},
	 { (char *)"IndexRange2dC_BottomLeft", _wrap_IndexRange2dC_BottomLeft, METH_VARARGS, (char *)"IndexRange2dC_BottomLeft(IndexRange2dC self) -> Index2dC"},
	 { (char *)"IndexRange2dC_BottomRight", _wrap_IndexRange2dC_BottomRight, METH_VARARGS, (char *)"IndexRange2dC_BottomRight(IndexRange2dC self) -> Index2dC"},
	 { (char *)"IndexRange2dC_Center", _wrap_IndexRange2dC_Center, METH_VARARGS, (char *)"IndexRange2dC_Center(IndexRange2dC self) -> Index2dC"},
	 { (char *)"IndexRange2dC_Rows", _wrap_IndexRange2dC_Rows, METH_VARARGS, (char *)"IndexRange2dC_Rows(IndexRange2dC self) -> IntT"},
	 { (char *)"IndexRange2dC_Cols", _wrap_IndexRange2dC_Cols, METH_VARARGS, (char *)"IndexRange2dC_Cols(IndexRange2dC self) -> IntT"},
	 { (char *)"IndexRange2dC_Area", _wrap_IndexRange2dC_Area, METH_VARARGS, (char *)"IndexRange2dC_Area(IndexRange2dC self) -> SizeT"},
	 { (char *)"IndexRange2dC_Contains", _wrap_IndexRange2dC_Contains, METH_VARARGS, (char *)"IndexRange2dC_Contains(IndexRange2dC self, Index2dC index) -> bool"},
	 { (char *)"IndexRange2dC_Expand", _wrap_IndexRange2dC_Expand, METH_VARARGS, (char *)"IndexRange2dC_Expand(IndexRange2dC self, IntT n) -> IndexRange2dC"},
	 { (char *)"IndexRange2dC_ClipBy", _wrap_IndexRange2dC_ClipBy, METH_VARARGS, (char *)"IndexRange2dC_ClipBy(IndexRange2dC self, IndexRange2dC range)"},
	 { (char *)"delete_IndexRange2dC", _wrap_delete_IndexRange2dC, METH_VARARGS, (char *)"delete_IndexRange2dC(IndexRange2dC self)"},
	 { (char *)"IndexRange2dC_swigregister", IndexRange2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Array2dByteC", _wrap_new_Array2dByteC, METH_VARARGS, (char *)"\n"
		"Array2dByteC()\n"
		"Array2dByteC(SizeT rows, SizeT cols)\n"
		"new_Array2dByteC(IndexRange2dC range) -> Array2dByteC\n"
		""},
	 { (char *)"Array2dByteC_Frame", _wrap_Array2dByteC_Frame, METH_VARARGS, (char *)"Array2dByteC_Frame(Array2dByteC self) -> IndexRange2dC"},
	 { (char *)"Array2dByteC_Fill", _wrap_Array2dByteC_Fill, METH_VARARGS, (char *)"Array2dByteC_Fill(Array2dByteC self, unsigned char value)"},
	 { (char *)"Array2dByteC_Stride", _wrap_Array2dByteC_Stride, METH_VARARGS, (char *)"Array2dByteC_Stride(Array2dByteC self) -> IntT"},
	 { (char *)"Array2dByteC_Access", _wrap_Array2dByteC_Access, METH_VARARGS, (char *)"\n"
		"Access(Index2dC index) -> unsigned char\n"
		"Access(IntT r, IntT c) -> unsigned char\n"
		"Array2dByteC_Access(Array2dByteC self, IndexC r, IndexC c) -> unsigned char\n"
		""},
	 { (char *)"delete_Array2dByteC", _wrap_delete_Array2dByteC, METH_VARARGS, (char *)"delete_Array2dByteC(Array2dByteC self)"},
	 { (char *)"Array2dByteC_swigregister", Array2dByteC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Array2dRealC", _wrap_new_Array2dRealC, METH_VARARGS, (char *)"\n"
		"Array2dRealC()\n"
		"Array2dRealC(SizeT rows, SizeT cols)\n"
		"new_Array2dRealC(IndexRange2dC range) -> Array2dRealC\n"
		""},
	 { (char *)"Array2dRealC_Frame", _wrap_Array2dRealC_Frame, METH_VARARGS, (char *)"Array2dRealC_Frame(Array2dRealC self) -> IndexRange2dC"},
	 { (char *)"Array2dRealC_Fill", _wrap_Array2dRealC_Fill, METH_VARARGS, (char *)"Array2dRealC_Fill(Array2dRealC self, double value)"},
	 { (char *)"Array2dRealC_Stride", _wrap_Array2dRealC_Stride, METH_VARARGS, (char *)"Array2dRealC_Stride(Array2dRealC self) -> IntT"},
	 { (char *)"Array2dRealC_Access", _wrap_Array2dRealC_Access, METH_VARARGS, (char *)"\n"
		"Access(Index2dC index) -> double\n"
		"Access(IntT r, IntT c) -> double\n"
		"Array2dRealC_Access(Array2dRealC self, IndexC r, IndexC c) -> double\n"
		""},
	 { (char *)"delete_Array2dRealC", _wrap_delete_Array2dRealC, METH_VARARGS, (char *)"delete_Array2dRealC(Array2dRealC self)"},
	 { (char *)"Array2dRealC_swigregister", Array2dRealC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_StringC", _wrap_new_StringC, METH_VARARGS, (char *)"\n"
		"StringC()\n"
		"new_StringC(char arg0) -> StringC\n"
		""},
	 { (char *)"StringC_IsEmpty", _wrap_StringC_IsEmpty, METH_VARARGS, (char *)"StringC_IsEmpty(StringC self) -> bool"},
	 { (char *)"StringC_chars", _wrap_StringC_chars, METH_VARARGS, (char *)"StringC_chars(StringC self) -> char"},
	 { (char *)"StringC_Size", _wrap_StringC_Size, METH_VARARGS, (char *)"StringC_Size(StringC self) -> SizeT"},
	 { (char *)"StringC___str__", _wrap_StringC___str__, METH_VARARGS, (char *)"StringC___str__(StringC self) -> char"},
	 { (char *)"delete_StringC", _wrap_delete_StringC, METH_VARARGS, (char *)"delete_StringC(StringC self)"},
	 { (char *)"StringC_swigregister", StringC_swigregister, METH_VARARGS, NULL},
	 { (char *)"PrintIOFormats", _wrap_PrintIOFormats, METH_VARARGS, (char *)"\n"
		"PrintIOFormats(ostream os = std::cout)\n"
		"PrintIOFormats()\n"
		""},
	 { (char *)"PrintIOConversions", _wrap_PrintIOConversions, METH_VARARGS, (char *)"\n"
		"PrintIOConversions(ostream os = std::cout)\n"
		"PrintIOConversions()\n"
		""},
	 { (char *)"PrintIOClassTypes", _wrap_PrintIOClassTypes, METH_VARARGS, (char *)"\n"
		"PrintIOClassTypes(ostream os = std::cout)\n"
		"PrintIOClassTypes()\n"
		""},
	 { (char *)"new_RealRangeC", _wrap_new_RealRangeC, METH_VARARGS, (char *)"\n"
		"RealRangeC(RealT size = 0)\n"
		"RealRangeC()\n"
		"new_RealRangeC(RealT minReal, RealT maxReal) -> RealRangeC\n"
		""},
	 { (char *)"RealRangeC_Size", _wrap_RealRangeC_Size, METH_VARARGS, (char *)"RealRangeC_Size(RealRangeC self) -> RealT"},
	 { (char *)"RealRangeC_Range", _wrap_RealRangeC_Range, METH_VARARGS, (char *)"RealRangeC_Range(RealRangeC self) -> RealRangeC"},
	 { (char *)"RealRangeC_Min", _wrap_RealRangeC_Min, METH_VARARGS, (char *)"\n"
		"Min() -> RealT\n"
		"RealRangeC_Min(RealRangeC self) -> RealT\n"
		""},
	 { (char *)"RealRangeC_Max", _wrap_RealRangeC_Max, METH_VARARGS, (char *)"\n"
		"Max() -> RealT\n"
		"RealRangeC_Max(RealRangeC self) -> RealT\n"
		""},
	 { (char *)"RealRangeC_Center", _wrap_RealRangeC_Center, METH_VARARGS, (char *)"RealRangeC_Center(RealRangeC self) -> RealT"},
	 { (char *)"RealRangeC_CenterD", _wrap_RealRangeC_CenterD, METH_VARARGS, (char *)"RealRangeC_CenterD(RealRangeC self) -> RealT"},
	 { (char *)"RealRangeC_Percentage", _wrap_RealRangeC_Percentage, METH_VARARGS, (char *)"RealRangeC_Percentage(RealRangeC self, RealT p) -> RealT"},
	 { (char *)"RealRangeC_IsEmpty", _wrap_RealRangeC_IsEmpty, METH_VARARGS, (char *)"RealRangeC_IsEmpty(RealRangeC self) -> bool"},
	 { (char *)"RealRangeC_IsValid", _wrap_RealRangeC_IsValid, METH_VARARGS, (char *)"RealRangeC_IsValid(RealRangeC self) -> bool"},
	 { (char *)"RealRangeC_Contains", _wrap_RealRangeC_Contains, METH_VARARGS, (char *)"\n"
		"Contains(RealT i) -> bool\n"
		"RealRangeC_Contains(RealRangeC self, RealRangeC range) -> bool\n"
		""},
	 { (char *)"RealRangeC___eq__", _wrap_RealRangeC___eq__, METH_VARARGS, (char *)"RealRangeC___eq__(RealRangeC self, RealRangeC range) -> bool"},
	 { (char *)"RealRangeC___ne__", _wrap_RealRangeC___ne__, METH_VARARGS, (char *)"RealRangeC___ne__(RealRangeC self, RealRangeC range) -> bool"},
	 { (char *)"RealRangeC_In", _wrap_RealRangeC_In, METH_VARARGS, (char *)"RealRangeC_In(RealRangeC self, RealRangeC range) -> bool"},
	 { (char *)"RealRangeC_IsOverlapping", _wrap_RealRangeC_IsOverlapping, METH_VARARGS, (char *)"RealRangeC_IsOverlapping(RealRangeC self, RealRangeC r) -> bool"},
	 { (char *)"RealRangeC_SetOrigin", _wrap_RealRangeC_SetOrigin, METH_VARARGS, (char *)"RealRangeC_SetOrigin(RealRangeC self, RealT position) -> RealRangeC"},
	 { (char *)"RealRangeC___iadd__", _wrap_RealRangeC___iadd__, METH_VARARGS, (char *)"RealRangeC___iadd__(RealRangeC self, RealT i) -> RealRangeC"},
	 { (char *)"RealRangeC___isub__", _wrap_RealRangeC___isub__, METH_VARARGS, (char *)"RealRangeC___isub__(RealRangeC self, RealT i) -> RealRangeC"},
	 { (char *)"RealRangeC___add__", _wrap_RealRangeC___add__, METH_VARARGS, (char *)"RealRangeC___add__(RealRangeC self, RealT i) -> RealRangeC"},
	 { (char *)"RealRangeC___sub__", _wrap_RealRangeC___sub__, METH_VARARGS, (char *)"RealRangeC___sub__(RealRangeC self, RealT i) -> RealRangeC"},
	 { (char *)"RealRangeC_ClipBy", _wrap_RealRangeC_ClipBy, METH_VARARGS, (char *)"RealRangeC_ClipBy(RealRangeC self, RealRangeC r) -> RealRangeC"},
	 { (char *)"RealRangeC_Clip", _wrap_RealRangeC_Clip, METH_VARARGS, (char *)"RealRangeC_Clip(RealRangeC self, RealT r) -> RealT"},
	 { (char *)"RealRangeC_FirstHalf", _wrap_RealRangeC_FirstHalf, METH_VARARGS, (char *)"RealRangeC_FirstHalf(RealRangeC self) -> RealRangeC"},
	 { (char *)"RealRangeC_FirstHalfD", _wrap_RealRangeC_FirstHalfD, METH_VARARGS, (char *)"RealRangeC_FirstHalfD(RealRangeC self) -> RealRangeC"},
	 { (char *)"RealRangeC_Enlarge", _wrap_RealRangeC_Enlarge, METH_VARARGS, (char *)"RealRangeC_Enlarge(RealRangeC self, RealT f) -> RealRangeC"},
	 { (char *)"RealRangeC_Expand", _wrap_RealRangeC_Expand, METH_VARARGS, (char *)"RealRangeC_Expand(RealRangeC self, RealT n) -> RealRangeC"},
	 { (char *)"RealRangeC_Shrink", _wrap_RealRangeC_Shrink, METH_VARARGS, (char *)"RealRangeC_Shrink(RealRangeC self, RealT n) -> RealRangeC"},
	 { (char *)"RealRangeC_ShrinkHigh", _wrap_RealRangeC_ShrinkHigh, METH_VARARGS, (char *)"RealRangeC_ShrinkHigh(RealRangeC self, RealT n) -> RealRangeC"},
	 { (char *)"RealRangeC_Swap", _wrap_RealRangeC_Swap, METH_VARARGS, (char *)"RealRangeC_Swap(RealRangeC self, RealRangeC r) -> RealRangeC"},
	 { (char *)"RealRangeC_Involve", _wrap_RealRangeC_Involve, METH_VARARGS, (char *)"\n"
		"Involve(RealT i) -> RealRangeC\n"
		"RealRangeC_Involve(RealRangeC self, RealRangeC subRange) -> RealRangeC\n"
		""},
	 { (char *)"delete_RealRangeC", _wrap_delete_RealRangeC, METH_VARARGS, (char *)"delete_RealRangeC(RealRangeC self)"},
	 { (char *)"RealRangeC_swigregister", RealRangeC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RealRange2dC", _wrap_new_RealRange2dC, METH_VARARGS, (char *)"\n"
		"RealRange2dC()\n"
		"RealRange2dC(RealT rowNumber, RealT colNumber)\n"
		"RealRange2dC(RealRangeC rowRange, RealRangeC colRange)\n"
		"RealRange2dC(RealRange2dC range)\n"
		"new_RealRange2dC(RealT minRow, RealT maxRow, RealT minCol, RealT maxCol) -> RealRange2dC\n"
		""},
	 { (char *)"RealRange2dC_TRow", _wrap_RealRange2dC_TRow, METH_VARARGS, (char *)"\n"
		"TRow() -> RealT\n"
		"RealRange2dC_TRow(RealRange2dC self) -> RealT\n"
		""},
	 { (char *)"RealRange2dC_LCol", _wrap_RealRange2dC_LCol, METH_VARARGS, (char *)"\n"
		"LCol() -> RealT\n"
		"RealRange2dC_LCol(RealRange2dC self) -> RealT\n"
		""},
	 { (char *)"RealRange2dC_BRow", _wrap_RealRange2dC_BRow, METH_VARARGS, (char *)"\n"
		"BRow() -> RealT\n"
		"RealRange2dC_BRow(RealRange2dC self) -> RealT\n"
		""},
	 { (char *)"RealRange2dC_RCol", _wrap_RealRange2dC_RCol, METH_VARARGS, (char *)"\n"
		"RCol() -> RealT\n"
		"RealRange2dC_RCol(RealRange2dC self) -> RealT\n"
		""},
	 { (char *)"RealRange2dC_Rows", _wrap_RealRange2dC_Rows, METH_VARARGS, (char *)"RealRange2dC_Rows(RealRange2dC self) -> RealT"},
	 { (char *)"RealRange2dC_Cols", _wrap_RealRange2dC_Cols, METH_VARARGS, (char *)"RealRange2dC_Cols(RealRange2dC self) -> RealT"},
	 { (char *)"RealRange2dC_Area", _wrap_RealRange2dC_Area, METH_VARARGS, (char *)"RealRange2dC_Area(RealRange2dC self) -> RealT"},
	 { (char *)"RealRange2dC_Dilate", _wrap_RealRange2dC_Dilate, METH_VARARGS, (char *)"RealRange2dC_Dilate(RealRange2dC self) -> RealRange2dC"},
	 { (char *)"RealRange2dC_Erode", _wrap_RealRange2dC_Erode, METH_VARARGS, (char *)"RealRange2dC_Erode(RealRange2dC self) -> RealRange2dC"},
	 { (char *)"RealRange2dC_Expand", _wrap_RealRange2dC_Expand, METH_VARARGS, (char *)"RealRange2dC_Expand(RealRange2dC self, RealT n) -> RealRange2dC"},
	 { (char *)"RealRange2dC_Shrink", _wrap_RealRange2dC_Shrink, METH_VARARGS, (char *)"RealRange2dC_Shrink(RealRange2dC self, RealT n) -> RealRange2dC"},
	 { (char *)"RealRange2dC_ClipBy", _wrap_RealRange2dC_ClipBy, METH_VARARGS, (char *)"RealRange2dC_ClipBy(RealRange2dC self, RealRange2dC r) -> RealRange2dC"},
	 { (char *)"RealRange2dC_Contains", _wrap_RealRange2dC_Contains, METH_VARARGS, (char *)"RealRange2dC_Contains(RealRange2dC self, RealRange2dC oth) -> bool"},
	 { (char *)"RealRange2dC_RowRange", _wrap_RealRange2dC_RowRange, METH_VARARGS, (char *)"RealRange2dC_RowRange(RealRange2dC self) -> RealRangeC"},
	 { (char *)"RealRange2dC_ColRange", _wrap_RealRange2dC_ColRange, METH_VARARGS, (char *)"RealRange2dC_ColRange(RealRange2dC self) -> RealRangeC"},
	 { (char *)"RealRange2dC_Range1", _wrap_RealRange2dC_Range1, METH_VARARGS, (char *)"RealRange2dC_Range1(RealRange2dC self) -> RealRangeC"},
	 { (char *)"RealRange2dC_Range2", _wrap_RealRange2dC_Range2, METH_VARARGS, (char *)"RealRange2dC_Range2(RealRange2dC self) -> RealRangeC"},
	 { (char *)"RealRange2dC_Involve", _wrap_RealRange2dC_Involve, METH_VARARGS, (char *)"RealRange2dC_Involve(RealRange2dC self, RealRange2dC subrectangle)"},
	 { (char *)"RealRange2dC_IsValid", _wrap_RealRange2dC_IsValid, METH_VARARGS, (char *)"RealRange2dC_IsValid(RealRange2dC self) -> bool"},
	 { (char *)"RealRange2dC___eq__", _wrap_RealRange2dC___eq__, METH_VARARGS, (char *)"RealRange2dC___eq__(RealRange2dC self, RealRange2dC oth) -> bool"},
	 { (char *)"RealRange2dC___ne__", _wrap_RealRange2dC___ne__, METH_VARARGS, (char *)"RealRange2dC___ne__(RealRange2dC self, RealRange2dC oth) -> bool"},
	 { (char *)"RealRange2dC_IsOverlapping", _wrap_RealRange2dC_IsOverlapping, METH_VARARGS, (char *)"RealRange2dC_IsOverlapping(RealRange2dC self, RealRange2dC r) -> bool"},
	 { (char *)"delete_RealRange2dC", _wrap_delete_RealRange2dC, METH_VARARGS, (char *)"delete_RealRange2dC(RealRange2dC self)"},
	 { (char *)"RealRange2dC_swigregister", RealRange2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PointSet2dC", _wrap_new_PointSet2dC, METH_VARARGS, (char *)"new_PointSet2dC() -> PointSet2dC"},
	 { (char *)"PointSet2dC_Centroid", _wrap_PointSet2dC_Centroid, METH_VARARGS, (char *)"PointSet2dC_Centroid(PointSet2dC self) -> Point2dC"},
	 { (char *)"PointSet2dC_BoundingRectangle", _wrap_PointSet2dC_BoundingRectangle, METH_VARARGS, (char *)"PointSet2dC_BoundingRectangle(PointSet2dC self) -> RealRange2dC"},
	 { (char *)"delete_PointSet2dC", _wrap_delete_PointSet2dC, METH_VARARGS, (char *)"delete_PointSet2dC(PointSet2dC self)"},
	 { (char *)"PointSet2dC_swigregister", PointSet2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Polygon2dC", _wrap_new_Polygon2dC, METH_VARARGS, (char *)"new_Polygon2dC() -> Polygon2dC"},
	 { (char *)"Polygon2dC_Size", _wrap_Polygon2dC_Size, METH_VARARGS, (char *)"Polygon2dC_Size(Polygon2dC self) -> SizeT"},
	 { (char *)"Polygon2dC_InsLast", _wrap_Polygon2dC_InsLast, METH_VARARGS, (char *)"Polygon2dC_InsLast(Polygon2dC self, Point2dC point)"},
	 { (char *)"delete_Polygon2dC", _wrap_delete_Polygon2dC, METH_VARARGS, (char *)"delete_Polygon2dC(Polygon2dC self)"},
	 { (char *)"Polygon2dC_swigregister", Polygon2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ByteRGBArray2dC", _wrap_new_ByteRGBArray2dC, METH_VARARGS, (char *)"\n"
		"ByteRGBArray2dC()\n"
		"ByteRGBArray2dC(SizeT rows, SizeT cols)\n"
		"new_ByteRGBArray2dC(IndexRange2dC range) -> ByteRGBArray2dC\n"
		""},
	 { (char *)"ByteRGBArray2dC_Frame", _wrap_ByteRGBArray2dC_Frame, METH_VARARGS, (char *)"ByteRGBArray2dC_Frame(ByteRGBArray2dC self) -> IndexRange2dC"},
	 { (char *)"ByteRGBArray2dC_Fill", _wrap_ByteRGBArray2dC_Fill, METH_VARARGS, (char *)"ByteRGBArray2dC_Fill(ByteRGBArray2dC self, ByteRGBValueC value)"},
	 { (char *)"ByteRGBArray2dC_Stride", _wrap_ByteRGBArray2dC_Stride, METH_VARARGS, (char *)"ByteRGBArray2dC_Stride(ByteRGBArray2dC self) -> IntT"},
	 { (char *)"ByteRGBArray2dC_Access", _wrap_ByteRGBArray2dC_Access, METH_VARARGS, (char *)"\n"
		"Access(Index2dC index) -> ByteRGBValueC\n"
		"Access(IntT r, IntT c) -> ByteRGBValueC\n"
		"ByteRGBArray2dC_Access(ByteRGBArray2dC self, IndexC r, IndexC c) -> ByteRGBValueC\n"
		""},
	 { (char *)"delete_ByteRGBArray2dC", _wrap_delete_ByteRGBArray2dC, METH_VARARGS, (char *)"delete_ByteRGBArray2dC(ByteRGBArray2dC self)"},
	 { (char *)"ByteRGBArray2dC_swigregister", ByteRGBArray2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RealRGBArray2dC", _wrap_new_RealRGBArray2dC, METH_VARARGS, (char *)"\n"
		"RealRGBArray2dC()\n"
		"RealRGBArray2dC(SizeT rows, SizeT cols)\n"
		"new_RealRGBArray2dC(IndexRange2dC range) -> RealRGBArray2dC\n"
		""},
	 { (char *)"RealRGBArray2dC_Frame", _wrap_RealRGBArray2dC_Frame, METH_VARARGS, (char *)"RealRGBArray2dC_Frame(RealRGBArray2dC self) -> IndexRange2dC"},
	 { (char *)"RealRGBArray2dC_Fill", _wrap_RealRGBArray2dC_Fill, METH_VARARGS, (char *)"RealRGBArray2dC_Fill(RealRGBArray2dC self, RealRGBValueC value)"},
	 { (char *)"RealRGBArray2dC_Stride", _wrap_RealRGBArray2dC_Stride, METH_VARARGS, (char *)"RealRGBArray2dC_Stride(RealRGBArray2dC self) -> IntT"},
	 { (char *)"RealRGBArray2dC_Access", _wrap_RealRGBArray2dC_Access, METH_VARARGS, (char *)"\n"
		"Access(Index2dC index) -> RealRGBValueC\n"
		"Access(IntT r, IntT c) -> RealRGBValueC\n"
		"RealRGBArray2dC_Access(RealRGBArray2dC self, IndexC r, IndexC c) -> RealRGBValueC\n"
		""},
	 { (char *)"delete_RealRGBArray2dC", _wrap_delete_RealRGBArray2dC, METH_VARARGS, (char *)"delete_RealRGBArray2dC(RealRGBArray2dC self)"},
	 { (char *)"RealRGBArray2dC_swigregister", RealRGBArray2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RealRGBValueC", _wrap_new_RealRGBValueC, METH_VARARGS, (char *)"new_RealRGBValueC(RealT r, RealT g, RealT b) -> RealRGBValueC"},
	 { (char *)"RealRGBValueC_Red", _wrap_RealRGBValueC_Red, METH_VARARGS, (char *)"RealRGBValueC_Red(RealRGBValueC self) -> RealT"},
	 { (char *)"RealRGBValueC_Green", _wrap_RealRGBValueC_Green, METH_VARARGS, (char *)"RealRGBValueC_Green(RealRGBValueC self) -> RealT"},
	 { (char *)"RealRGBValueC_Blue", _wrap_RealRGBValueC_Blue, METH_VARARGS, (char *)"RealRGBValueC_Blue(RealRGBValueC self) -> RealT"},
	 { (char *)"delete_RealRGBValueC", _wrap_delete_RealRGBValueC, METH_VARARGS, (char *)"delete_RealRGBValueC(RealRGBValueC self)"},
	 { (char *)"RealRGBValueC_swigregister", RealRGBValueC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ByteRGBValueC", _wrap_new_ByteRGBValueC, METH_VARARGS, (char *)"new_ByteRGBValueC(IntT r, IntT g, IntT b) -> ByteRGBValueC"},
	 { (char *)"ByteRGBValueC_Red", _wrap_ByteRGBValueC_Red, METH_VARARGS, (char *)"ByteRGBValueC_Red(ByteRGBValueC self) -> IntT"},
	 { (char *)"ByteRGBValueC_Green", _wrap_ByteRGBValueC_Green, METH_VARARGS, (char *)"ByteRGBValueC_Green(ByteRGBValueC self) -> IntT"},
	 { (char *)"ByteRGBValueC_Blue", _wrap_ByteRGBValueC_Blue, METH_VARARGS, (char *)"ByteRGBValueC_Blue(ByteRGBValueC self) -> IntT"},
	 { (char *)"delete_ByteRGBValueC", _wrap_delete_ByteRGBValueC, METH_VARARGS, (char *)"delete_ByteRGBValueC(ByteRGBValueC self)"},
	 { (char *)"ByteRGBValueC_swigregister", ByteRGBValueC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ImageByteRGBValueC", _wrap_new_ImageByteRGBValueC, METH_VARARGS, (char *)"\n"
		"ImageByteRGBValueC()\n"
		"ImageByteRGBValueC(SizeT rows, SizeT cols)\n"
		"ImageByteRGBValueC(IndexRange2dC range)\n"
		"ImageByteRGBValueC(SizeT rows, SizeT cols, ByteRGBValueC data, bool deletable = True)\n"
		"ImageByteRGBValueC(SizeT rows, SizeT cols, ByteRGBValueC data)\n"
		"new_ImageByteRGBValueC(ImageByteRGBValueC img, IndexRange2dC range) -> ImageByteRGBValueC\n"
		""},
	 { (char *)"ImageByteRGBValueC_Rows", _wrap_ImageByteRGBValueC_Rows, METH_VARARGS, (char *)"ImageByteRGBValueC_Rows(ImageByteRGBValueC self) -> SizeT"},
	 { (char *)"ImageByteRGBValueC_Cols", _wrap_ImageByteRGBValueC_Cols, METH_VARARGS, (char *)"ImageByteRGBValueC_Cols(ImageByteRGBValueC self) -> SizeT"},
	 { (char *)"ImageByteRGBValueC_Row", _wrap_ImageByteRGBValueC_Row, METH_VARARGS, (char *)"ImageByteRGBValueC_Row(ImageByteRGBValueC self, IndexC row) -> ByteRGBValueC"},
	 { (char *)"ImageByteRGBValueC_Stride", _wrap_ImageByteRGBValueC_Stride, METH_VARARGS, (char *)"ImageByteRGBValueC_Stride(ImageByteRGBValueC self) -> IntT"},
	 { (char *)"ImageByteRGBValueC_DataAsString", _wrap_ImageByteRGBValueC_DataAsString, METH_VARARGS, (char *)"ImageByteRGBValueC_DataAsString(ImageByteRGBValueC self) -> PyObject"},
	 { (char *)"ImageByteRGBValueC_DataAsStringTriple", _wrap_ImageByteRGBValueC_DataAsStringTriple, METH_VARARGS, (char *)"ImageByteRGBValueC_DataAsStringTriple(ImageByteRGBValueC self) -> PyObject"},
	 { (char *)"delete_ImageByteRGBValueC", _wrap_delete_ImageByteRGBValueC, METH_VARARGS, (char *)"delete_ImageByteRGBValueC(ImageByteRGBValueC self)"},
	 { (char *)"ImageByteRGBValueC_swigregister", ImageByteRGBValueC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ImageByteC", _wrap_new_ImageByteC, METH_VARARGS, (char *)"\n"
		"ImageByteC()\n"
		"ImageByteC(SizeT rows, SizeT cols)\n"
		"ImageByteC(IndexRange2dC range)\n"
		"ImageByteC(SizeT rows, SizeT cols, unsigned char data, bool deletable = True)\n"
		"ImageByteC(SizeT rows, SizeT cols, unsigned char data)\n"
		"new_ImageByteC(ImageByteC img, IndexRange2dC range) -> ImageByteC\n"
		""},
	 { (char *)"ImageByteC_Rows", _wrap_ImageByteC_Rows, METH_VARARGS, (char *)"ImageByteC_Rows(ImageByteC self) -> SizeT"},
	 { (char *)"ImageByteC_Cols", _wrap_ImageByteC_Cols, METH_VARARGS, (char *)"ImageByteC_Cols(ImageByteC self) -> SizeT"},
	 { (char *)"ImageByteC_Row", _wrap_ImageByteC_Row, METH_VARARGS, (char *)"ImageByteC_Row(ImageByteC self, IndexC row) -> unsigned char"},
	 { (char *)"ImageByteC_Stride", _wrap_ImageByteC_Stride, METH_VARARGS, (char *)"ImageByteC_Stride(ImageByteC self) -> IntT"},
	 { (char *)"ImageByteC_DataAsString", _wrap_ImageByteC_DataAsString, METH_VARARGS, (char *)"ImageByteC_DataAsString(ImageByteC self) -> PyObject"},
	 { (char *)"ImageByteC_DataAsStringTriple", _wrap_ImageByteC_DataAsStringTriple, METH_VARARGS, (char *)"ImageByteC_DataAsStringTriple(ImageByteC self) -> PyObject"},
	 { (char *)"delete_ImageByteC", _wrap_delete_ImageByteC, METH_VARARGS, (char *)"delete_ImageByteC(ImageByteC self)"},
	 { (char *)"ImageByteC_swigregister", ImageByteC_swigregister, METH_VARARGS, NULL},
	 { (char *)"DrawPolygon", _wrap_DrawPolygon, METH_VARARGS, (char *)"\n"
		"DrawPolygon(ByteRGBArray2dC arg0, ByteRGBValueC arg1, Polygon2dC poly, \n"
		"    bool fill = False)\n"
		"DrawPolygon(ByteRGBArray2dC arg0, ByteRGBValueC arg1, Polygon2dC poly)\n"
		"DrawPolygon(Array2dByteC arg0, ByteT arg1, Polygon2dC poly, bool fill = False)\n"
		"DrawPolygon(Array2dByteC arg0, ByteT arg1, Polygon2dC poly)\n"
		""},
	 { (char *)"new_FontC", _wrap_new_FontC, METH_VARARGS, (char *)"new_FontC() -> FontC"},
	 { (char *)"FontC_IsValid", _wrap_FontC_IsValid, METH_VARARGS, (char *)"FontC_IsValid(FontC self) -> bool"},
	 { (char *)"FontC_Center", _wrap_FontC_Center, METH_VARARGS, (char *)"FontC_Center(FontC self, StringC text) -> Index2dC"},
	 { (char *)"FontC_Size", _wrap_FontC_Size, METH_VARARGS, (char *)"FontC_Size(FontC self, StringC text) -> Index2dC"},
	 { (char *)"FontC_Count", _wrap_FontC_Count, METH_VARARGS, (char *)"FontC_Count(FontC self) -> UIntT"},
	 { (char *)"delete_FontC", _wrap_delete_FontC, METH_VARARGS, (char *)"delete_FontC(FontC self)"},
	 { (char *)"FontC_swigregister", FontC_swigregister, METH_VARARGS, NULL},
	 { (char *)"DefaultFont", _wrap_DefaultFont, METH_VARARGS, (char *)"DefaultFont() -> FontC"},
	 { (char *)"DrawTextByteRGB", _wrap_DrawTextByteRGB, METH_VARARGS, (char *)"\n"
		"DrawTextByteRGB(FontC font, ByteRGBValueC value, Index2dC offset, StringC text, \n"
		"    ImageByteRGBValueC image)\n"
		""},
	 { (char *)"DrawTextByte", _wrap_DrawTextByte, METH_VARARGS, (char *)"\n"
		"DrawTextByte(FontC font, unsigned char value, Index2dC offset, StringC text, \n"
		"    ImageByteC image)\n"
		""},
	 { (char *)"DrawTextCenterByteRGB", _wrap_DrawTextCenterByteRGB, METH_VARARGS, (char *)"\n"
		"DrawTextCenterByteRGB(FontC font, ByteRGBValueC value, Index2dC offset, StringC text, \n"
		"    ImageByteRGBValueC image)\n"
		""},
	 { (char *)"DrawTextCenterByte", _wrap_DrawTextCenterByte, METH_VARARGS, (char *)"\n"
		"DrawTextCenterByte(FontC font, unsigned char value, Index2dC offset, StringC text, \n"
		"    ImageByteC image)\n"
		""},
	 { (char *)"SArray1dUInt_ConstructAligned", _wrap_SArray1dUInt_ConstructAligned, METH_VARARGS, (char *)"SArray1dUInt_ConstructAligned(SizeT dim, UIntT align) -> SArray1dUInt"},
	 { (char *)"new_SArray1dUInt", _wrap_new_SArray1dUInt, METH_VARARGS, (char *)"\n"
		"SArray1dUInt()\n"
		"SArray1dUInt(SizeT dim)\n"
		"SArray1dUInt(SArray1dUInt vv)\n"
		"SArray1dUInt(SArray1dUInt vv, SizeT dim, SizeT offsetInBuff = 0)\n"
		"SArray1dUInt(SArray1dUInt vv, SizeT dim)\n"
		"new_SArray1dUInt(unsigned int data, SizeT dim, bool removable) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt_IsEmpty", _wrap_SArray1dUInt_IsEmpty, METH_VARARGS, (char *)"SArray1dUInt_IsEmpty(SArray1dUInt self) -> bool"},
	 { (char *)"SArray1dUInt_Contains", _wrap_SArray1dUInt_Contains, METH_VARARGS, (char *)"SArray1dUInt_Contains(SArray1dUInt self, IndexC i) -> bool"},
	 { (char *)"SArray1dUInt_Fill", _wrap_SArray1dUInt_Fill, METH_VARARGS, (char *)"SArray1dUInt_Fill(SArray1dUInt self, unsigned int d)"},
	 { (char *)"SArray1dUInt_Reverse", _wrap_SArray1dUInt_Reverse, METH_VARARGS, (char *)"SArray1dUInt_Reverse(SArray1dUInt self)"},
	 { (char *)"SArray1dUInt___mul__", _wrap_SArray1dUInt___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(SArray1dUInt arr) -> SArray1dUInt\n"
		"SArray1dUInt___mul__(SArray1dUInt self, unsigned int number) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt___div__", _wrap_SArray1dUInt___div__, METH_VARARGS, (char *)"\n"
		"__div__(SArray1dUInt arr) -> SArray1dUInt\n"
		"SArray1dUInt___div__(SArray1dUInt self, unsigned int number) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt___add__", _wrap_SArray1dUInt___add__, METH_VARARGS, (char *)"\n"
		"__add__(SArray1dUInt arr) -> SArray1dUInt\n"
		"SArray1dUInt___add__(SArray1dUInt self, unsigned int number) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt___sub__", _wrap_SArray1dUInt___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(SArray1dUInt arr) -> SArray1dUInt\n"
		"SArray1dUInt___sub__(SArray1dUInt self, unsigned int number) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt___iadd__", _wrap_SArray1dUInt___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(SArray1dUInt arr) -> SArray1dUInt\n"
		"SArray1dUInt___iadd__(SArray1dUInt self, unsigned int number) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt___isub__", _wrap_SArray1dUInt___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(SArray1dUInt arr) -> SArray1dUInt\n"
		"SArray1dUInt___isub__(SArray1dUInt self, unsigned int number) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt___imul__", _wrap_SArray1dUInt___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(SArray1dUInt arr) -> SArray1dUInt\n"
		"SArray1dUInt___imul__(SArray1dUInt self, unsigned int number) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt___idiv__", _wrap_SArray1dUInt___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(SArray1dUInt arr) -> SArray1dUInt\n"
		"SArray1dUInt___idiv__(SArray1dUInt self, unsigned int number) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt_Sum", _wrap_SArray1dUInt_Sum, METH_VARARGS, (char *)"SArray1dUInt_Sum(SArray1dUInt self) -> unsigned int"},
	 { (char *)"SArray1dUInt_SumOfSqr", _wrap_SArray1dUInt_SumOfSqr, METH_VARARGS, (char *)"SArray1dUInt_SumOfSqr(SArray1dUInt self) -> unsigned int"},
	 { (char *)"SArray1dUInt_SArray1d", _wrap_SArray1dUInt_SArray1d, METH_VARARGS, (char *)"\n"
		"SArray1d() -> SArray1dUInt\n"
		"SArray1dUInt_SArray1d(SArray1dUInt self) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt_Size", _wrap_SArray1dUInt_Size, METH_VARARGS, (char *)"SArray1dUInt_Size(SArray1dUInt self) -> SizeT"},
	 { (char *)"SArray1dUInt_Range", _wrap_SArray1dUInt_Range, METH_VARARGS, (char *)"SArray1dUInt_Range(SArray1dUInt self) -> IndexRangeC"},
	 { (char *)"SArray1dUInt_Join", _wrap_SArray1dUInt_Join, METH_VARARGS, (char *)"\n"
		"Join(SArray1dUInt Oth) -> SArray1dUInt\n"
		"SArray1dUInt_Join(SArray1dUInt self, unsigned int Oth) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt_Append", _wrap_SArray1dUInt_Append, METH_VARARGS, (char *)"\n"
		"Append(SArray1dUInt a) -> SArray1dUInt\n"
		"SArray1dUInt_Append(SArray1dUInt self, unsigned int a) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt_From", _wrap_SArray1dUInt_From, METH_VARARGS, (char *)"\n"
		"From(UIntT offset) -> SArray1dUInt\n"
		"SArray1dUInt_From(SArray1dUInt self, UIntT offset, UIntT size) -> SArray1dUInt\n"
		""},
	 { (char *)"SArray1dUInt_After", _wrap_SArray1dUInt_After, METH_VARARGS, (char *)"SArray1dUInt_After(SArray1dUInt self, UIntT offset) -> SArray1dUInt"},
	 { (char *)"SArray1dUInt_Before", _wrap_SArray1dUInt_Before, METH_VARARGS, (char *)"SArray1dUInt_Before(SArray1dUInt self, UIntT offset) -> SArray1dUInt"},
	 { (char *)"SArray1dUInt___eq__", _wrap_SArray1dUInt___eq__, METH_VARARGS, (char *)"SArray1dUInt___eq__(SArray1dUInt self, SArray1dUInt vv) -> bool"},
	 { (char *)"SArray1dUInt___ne__", _wrap_SArray1dUInt___ne__, METH_VARARGS, (char *)"SArray1dUInt___ne__(SArray1dUInt self, SArray1dUInt vv) -> bool"},
	 { (char *)"SArray1dUInt_Hash", _wrap_SArray1dUInt_Hash, METH_VARARGS, (char *)"SArray1dUInt_Hash(SArray1dUInt self) -> SizeT"},
	 { (char *)"SArray1dUInt_DataStart", _wrap_SArray1dUInt_DataStart, METH_VARARGS, (char *)"SArray1dUInt_DataStart(SArray1dUInt self) -> unsigned int"},
	 { (char *)"SArray1dUInt___getitem__", _wrap_SArray1dUInt___getitem__, METH_VARARGS, (char *)"SArray1dUInt___getitem__(SArray1dUInt self, size_t i) -> unsigned int"},
	 { (char *)"SArray1dUInt___setitem__", _wrap_SArray1dUInt___setitem__, METH_VARARGS, (char *)"SArray1dUInt___setitem__(SArray1dUInt self, size_t i, unsigned int v)"},
	 { (char *)"SArray1dUInt___str__", _wrap_SArray1dUInt___str__, METH_VARARGS, (char *)"SArray1dUInt___str__(SArray1dUInt self) -> char"},
	 { (char *)"delete_SArray1dUInt", _wrap_delete_SArray1dUInt, METH_VARARGS, (char *)"delete_SArray1dUInt(SArray1dUInt self)"},
	 { (char *)"SArray1dUInt_swigregister", SArray1dUInt_swigregister, METH_VARARGS, NULL},
	 { (char *)"SArray1dReal_ConstructAligned", _wrap_SArray1dReal_ConstructAligned, METH_VARARGS, (char *)"SArray1dReal_ConstructAligned(SizeT dim, UIntT align) -> SArray1dReal"},
	 { (char *)"new_SArray1dReal", _wrap_new_SArray1dReal, METH_VARARGS, (char *)"\n"
		"SArray1dReal()\n"
		"SArray1dReal(SizeT dim)\n"
		"SArray1dReal(SArray1dReal vv)\n"
		"SArray1dReal(SArray1dReal vv, SizeT dim, SizeT offsetInBuff = 0)\n"
		"SArray1dReal(SArray1dReal vv, SizeT dim)\n"
		"new_SArray1dReal(double data, SizeT dim, bool removable) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal_IsEmpty", _wrap_SArray1dReal_IsEmpty, METH_VARARGS, (char *)"SArray1dReal_IsEmpty(SArray1dReal self) -> bool"},
	 { (char *)"SArray1dReal_Contains", _wrap_SArray1dReal_Contains, METH_VARARGS, (char *)"SArray1dReal_Contains(SArray1dReal self, IndexC i) -> bool"},
	 { (char *)"SArray1dReal_Fill", _wrap_SArray1dReal_Fill, METH_VARARGS, (char *)"SArray1dReal_Fill(SArray1dReal self, double d)"},
	 { (char *)"SArray1dReal_Reverse", _wrap_SArray1dReal_Reverse, METH_VARARGS, (char *)"SArray1dReal_Reverse(SArray1dReal self)"},
	 { (char *)"SArray1dReal___mul__", _wrap_SArray1dReal___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(SArray1dReal arr) -> SArray1dReal\n"
		"SArray1dReal___mul__(SArray1dReal self, double number) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal___div__", _wrap_SArray1dReal___div__, METH_VARARGS, (char *)"\n"
		"__div__(SArray1dReal arr) -> SArray1dReal\n"
		"SArray1dReal___div__(SArray1dReal self, double number) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal___add__", _wrap_SArray1dReal___add__, METH_VARARGS, (char *)"\n"
		"__add__(SArray1dReal arr) -> SArray1dReal\n"
		"SArray1dReal___add__(SArray1dReal self, double number) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal___sub__", _wrap_SArray1dReal___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(SArray1dReal arr) -> SArray1dReal\n"
		"SArray1dReal___sub__(SArray1dReal self, double number) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal___iadd__", _wrap_SArray1dReal___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(SArray1dReal arr) -> SArray1dReal\n"
		"SArray1dReal___iadd__(SArray1dReal self, double number) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal___isub__", _wrap_SArray1dReal___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(SArray1dReal arr) -> SArray1dReal\n"
		"SArray1dReal___isub__(SArray1dReal self, double number) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal___imul__", _wrap_SArray1dReal___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(SArray1dReal arr) -> SArray1dReal\n"
		"SArray1dReal___imul__(SArray1dReal self, double number) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal___idiv__", _wrap_SArray1dReal___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(SArray1dReal arr) -> SArray1dReal\n"
		"SArray1dReal___idiv__(SArray1dReal self, double number) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal_Sum", _wrap_SArray1dReal_Sum, METH_VARARGS, (char *)"SArray1dReal_Sum(SArray1dReal self) -> double"},
	 { (char *)"SArray1dReal_SumOfSqr", _wrap_SArray1dReal_SumOfSqr, METH_VARARGS, (char *)"SArray1dReal_SumOfSqr(SArray1dReal self) -> double"},
	 { (char *)"SArray1dReal_SArray1d", _wrap_SArray1dReal_SArray1d, METH_VARARGS, (char *)"\n"
		"SArray1d() -> SArray1dReal\n"
		"SArray1dReal_SArray1d(SArray1dReal self) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal_Size", _wrap_SArray1dReal_Size, METH_VARARGS, (char *)"SArray1dReal_Size(SArray1dReal self) -> SizeT"},
	 { (char *)"SArray1dReal_Range", _wrap_SArray1dReal_Range, METH_VARARGS, (char *)"SArray1dReal_Range(SArray1dReal self) -> IndexRangeC"},
	 { (char *)"SArray1dReal_Join", _wrap_SArray1dReal_Join, METH_VARARGS, (char *)"\n"
		"Join(SArray1dReal Oth) -> SArray1dReal\n"
		"SArray1dReal_Join(SArray1dReal self, double Oth) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal_Append", _wrap_SArray1dReal_Append, METH_VARARGS, (char *)"\n"
		"Append(SArray1dReal a) -> SArray1dReal\n"
		"SArray1dReal_Append(SArray1dReal self, double a) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal_From", _wrap_SArray1dReal_From, METH_VARARGS, (char *)"\n"
		"From(UIntT offset) -> SArray1dReal\n"
		"SArray1dReal_From(SArray1dReal self, UIntT offset, UIntT size) -> SArray1dReal\n"
		""},
	 { (char *)"SArray1dReal_After", _wrap_SArray1dReal_After, METH_VARARGS, (char *)"SArray1dReal_After(SArray1dReal self, UIntT offset) -> SArray1dReal"},
	 { (char *)"SArray1dReal_Before", _wrap_SArray1dReal_Before, METH_VARARGS, (char *)"SArray1dReal_Before(SArray1dReal self, UIntT offset) -> SArray1dReal"},
	 { (char *)"SArray1dReal___eq__", _wrap_SArray1dReal___eq__, METH_VARARGS, (char *)"SArray1dReal___eq__(SArray1dReal self, SArray1dReal vv) -> bool"},
	 { (char *)"SArray1dReal___ne__", _wrap_SArray1dReal___ne__, METH_VARARGS, (char *)"SArray1dReal___ne__(SArray1dReal self, SArray1dReal vv) -> bool"},
	 { (char *)"SArray1dReal_Hash", _wrap_SArray1dReal_Hash, METH_VARARGS, (char *)"SArray1dReal_Hash(SArray1dReal self) -> SizeT"},
	 { (char *)"SArray1dReal_DataStart", _wrap_SArray1dReal_DataStart, METH_VARARGS, (char *)"SArray1dReal_DataStart(SArray1dReal self) -> double"},
	 { (char *)"SArray1dReal___getitem__", _wrap_SArray1dReal___getitem__, METH_VARARGS, (char *)"SArray1dReal___getitem__(SArray1dReal self, size_t i) -> double"},
	 { (char *)"SArray1dReal___setitem__", _wrap_SArray1dReal___setitem__, METH_VARARGS, (char *)"SArray1dReal___setitem__(SArray1dReal self, size_t i, double v)"},
	 { (char *)"SArray1dReal___str__", _wrap_SArray1dReal___str__, METH_VARARGS, (char *)"SArray1dReal___str__(SArray1dReal self) -> char"},
	 { (char *)"delete_SArray1dReal", _wrap_delete_SArray1dReal, METH_VARARGS, (char *)"delete_SArray1dReal(SArray1dReal self)"},
	 { (char *)"SArray1dReal_swigregister", SArray1dReal_swigregister, METH_VARARGS, NULL},
	 { (char *)"SArray1dFloat_ConstructAligned", _wrap_SArray1dFloat_ConstructAligned, METH_VARARGS, (char *)"SArray1dFloat_ConstructAligned(SizeT dim, UIntT align) -> SArray1dFloat"},
	 { (char *)"new_SArray1dFloat", _wrap_new_SArray1dFloat, METH_VARARGS, (char *)"\n"
		"SArray1dFloat()\n"
		"SArray1dFloat(SizeT dim)\n"
		"SArray1dFloat(SArray1dFloat vv)\n"
		"SArray1dFloat(SArray1dFloat vv, SizeT dim, SizeT offsetInBuff = 0)\n"
		"SArray1dFloat(SArray1dFloat vv, SizeT dim)\n"
		"new_SArray1dFloat(float data, SizeT dim, bool removable) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat_IsEmpty", _wrap_SArray1dFloat_IsEmpty, METH_VARARGS, (char *)"SArray1dFloat_IsEmpty(SArray1dFloat self) -> bool"},
	 { (char *)"SArray1dFloat_Contains", _wrap_SArray1dFloat_Contains, METH_VARARGS, (char *)"SArray1dFloat_Contains(SArray1dFloat self, IndexC i) -> bool"},
	 { (char *)"SArray1dFloat_Fill", _wrap_SArray1dFloat_Fill, METH_VARARGS, (char *)"SArray1dFloat_Fill(SArray1dFloat self, float d)"},
	 { (char *)"SArray1dFloat_Reverse", _wrap_SArray1dFloat_Reverse, METH_VARARGS, (char *)"SArray1dFloat_Reverse(SArray1dFloat self)"},
	 { (char *)"SArray1dFloat___mul__", _wrap_SArray1dFloat___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(SArray1dFloat arr) -> SArray1dFloat\n"
		"SArray1dFloat___mul__(SArray1dFloat self, float number) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat___div__", _wrap_SArray1dFloat___div__, METH_VARARGS, (char *)"\n"
		"__div__(SArray1dFloat arr) -> SArray1dFloat\n"
		"SArray1dFloat___div__(SArray1dFloat self, float number) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat___add__", _wrap_SArray1dFloat___add__, METH_VARARGS, (char *)"\n"
		"__add__(SArray1dFloat arr) -> SArray1dFloat\n"
		"SArray1dFloat___add__(SArray1dFloat self, float number) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat___sub__", _wrap_SArray1dFloat___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(SArray1dFloat arr) -> SArray1dFloat\n"
		"SArray1dFloat___sub__(SArray1dFloat self, float number) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat___iadd__", _wrap_SArray1dFloat___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(SArray1dFloat arr) -> SArray1dFloat\n"
		"SArray1dFloat___iadd__(SArray1dFloat self, float number) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat___isub__", _wrap_SArray1dFloat___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(SArray1dFloat arr) -> SArray1dFloat\n"
		"SArray1dFloat___isub__(SArray1dFloat self, float number) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat___imul__", _wrap_SArray1dFloat___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(SArray1dFloat arr) -> SArray1dFloat\n"
		"SArray1dFloat___imul__(SArray1dFloat self, float number) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat___idiv__", _wrap_SArray1dFloat___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(SArray1dFloat arr) -> SArray1dFloat\n"
		"SArray1dFloat___idiv__(SArray1dFloat self, float number) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat_Sum", _wrap_SArray1dFloat_Sum, METH_VARARGS, (char *)"SArray1dFloat_Sum(SArray1dFloat self) -> float"},
	 { (char *)"SArray1dFloat_SumOfSqr", _wrap_SArray1dFloat_SumOfSqr, METH_VARARGS, (char *)"SArray1dFloat_SumOfSqr(SArray1dFloat self) -> float"},
	 { (char *)"SArray1dFloat_SArray1d", _wrap_SArray1dFloat_SArray1d, METH_VARARGS, (char *)"\n"
		"SArray1d() -> SArray1dFloat\n"
		"SArray1dFloat_SArray1d(SArray1dFloat self) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat_Size", _wrap_SArray1dFloat_Size, METH_VARARGS, (char *)"SArray1dFloat_Size(SArray1dFloat self) -> SizeT"},
	 { (char *)"SArray1dFloat_Range", _wrap_SArray1dFloat_Range, METH_VARARGS, (char *)"SArray1dFloat_Range(SArray1dFloat self) -> IndexRangeC"},
	 { (char *)"SArray1dFloat_Join", _wrap_SArray1dFloat_Join, METH_VARARGS, (char *)"\n"
		"Join(SArray1dFloat Oth) -> SArray1dFloat\n"
		"SArray1dFloat_Join(SArray1dFloat self, float Oth) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat_Append", _wrap_SArray1dFloat_Append, METH_VARARGS, (char *)"\n"
		"Append(SArray1dFloat a) -> SArray1dFloat\n"
		"SArray1dFloat_Append(SArray1dFloat self, float a) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat_From", _wrap_SArray1dFloat_From, METH_VARARGS, (char *)"\n"
		"From(UIntT offset) -> SArray1dFloat\n"
		"SArray1dFloat_From(SArray1dFloat self, UIntT offset, UIntT size) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray1dFloat_After", _wrap_SArray1dFloat_After, METH_VARARGS, (char *)"SArray1dFloat_After(SArray1dFloat self, UIntT offset) -> SArray1dFloat"},
	 { (char *)"SArray1dFloat_Before", _wrap_SArray1dFloat_Before, METH_VARARGS, (char *)"SArray1dFloat_Before(SArray1dFloat self, UIntT offset) -> SArray1dFloat"},
	 { (char *)"SArray1dFloat___eq__", _wrap_SArray1dFloat___eq__, METH_VARARGS, (char *)"SArray1dFloat___eq__(SArray1dFloat self, SArray1dFloat vv) -> bool"},
	 { (char *)"SArray1dFloat___ne__", _wrap_SArray1dFloat___ne__, METH_VARARGS, (char *)"SArray1dFloat___ne__(SArray1dFloat self, SArray1dFloat vv) -> bool"},
	 { (char *)"SArray1dFloat_Hash", _wrap_SArray1dFloat_Hash, METH_VARARGS, (char *)"SArray1dFloat_Hash(SArray1dFloat self) -> SizeT"},
	 { (char *)"SArray1dFloat_DataStart", _wrap_SArray1dFloat_DataStart, METH_VARARGS, (char *)"SArray1dFloat_DataStart(SArray1dFloat self) -> float"},
	 { (char *)"SArray1dFloat___getitem__", _wrap_SArray1dFloat___getitem__, METH_VARARGS, (char *)"SArray1dFloat___getitem__(SArray1dFloat self, size_t i) -> float"},
	 { (char *)"SArray1dFloat___setitem__", _wrap_SArray1dFloat___setitem__, METH_VARARGS, (char *)"SArray1dFloat___setitem__(SArray1dFloat self, size_t i, float v)"},
	 { (char *)"SArray1dFloat___str__", _wrap_SArray1dFloat___str__, METH_VARARGS, (char *)"SArray1dFloat___str__(SArray1dFloat self) -> char"},
	 { (char *)"delete_SArray1dFloat", _wrap_delete_SArray1dFloat, METH_VARARGS, (char *)"delete_SArray1dFloat(SArray1dFloat self)"},
	 { (char *)"SArray1dFloat_swigregister", SArray1dFloat_swigregister, METH_VARARGS, NULL},
	 { (char *)"SArray1dIndexC_ConstructAligned", _wrap_SArray1dIndexC_ConstructAligned, METH_VARARGS, (char *)"SArray1dIndexC_ConstructAligned(SizeT dim, UIntT align) -> SArray1dIndexC"},
	 { (char *)"new_SArray1dIndexC", _wrap_new_SArray1dIndexC, METH_VARARGS, (char *)"\n"
		"SArray1dIndexC()\n"
		"SArray1dIndexC(SizeT dim)\n"
		"SArray1dIndexC(SArray1dIndexC vv)\n"
		"SArray1dIndexC(SArray1dIndexC vv, SizeT dim, SizeT offsetInBuff = 0)\n"
		"SArray1dIndexC(SArray1dIndexC vv, SizeT dim)\n"
		"new_SArray1dIndexC(IndexC data, SizeT dim, bool removable) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC_IsEmpty", _wrap_SArray1dIndexC_IsEmpty, METH_VARARGS, (char *)"SArray1dIndexC_IsEmpty(SArray1dIndexC self) -> bool"},
	 { (char *)"SArray1dIndexC_Contains", _wrap_SArray1dIndexC_Contains, METH_VARARGS, (char *)"SArray1dIndexC_Contains(SArray1dIndexC self, IndexC i) -> bool"},
	 { (char *)"SArray1dIndexC_Fill", _wrap_SArray1dIndexC_Fill, METH_VARARGS, (char *)"SArray1dIndexC_Fill(SArray1dIndexC self, IndexC d)"},
	 { (char *)"SArray1dIndexC_Reverse", _wrap_SArray1dIndexC_Reverse, METH_VARARGS, (char *)"SArray1dIndexC_Reverse(SArray1dIndexC self)"},
	 { (char *)"SArray1dIndexC___mul__", _wrap_SArray1dIndexC___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(SArray1dIndexC arr) -> SArray1dIndexC\n"
		"SArray1dIndexC___mul__(SArray1dIndexC self, IndexC number) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC___div__", _wrap_SArray1dIndexC___div__, METH_VARARGS, (char *)"\n"
		"__div__(SArray1dIndexC arr) -> SArray1dIndexC\n"
		"SArray1dIndexC___div__(SArray1dIndexC self, IndexC number) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC___add__", _wrap_SArray1dIndexC___add__, METH_VARARGS, (char *)"\n"
		"__add__(SArray1dIndexC arr) -> SArray1dIndexC\n"
		"SArray1dIndexC___add__(SArray1dIndexC self, IndexC number) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC___sub__", _wrap_SArray1dIndexC___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(SArray1dIndexC arr) -> SArray1dIndexC\n"
		"SArray1dIndexC___sub__(SArray1dIndexC self, IndexC number) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC___iadd__", _wrap_SArray1dIndexC___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(SArray1dIndexC arr) -> SArray1dIndexC\n"
		"SArray1dIndexC___iadd__(SArray1dIndexC self, IndexC number) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC___isub__", _wrap_SArray1dIndexC___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(SArray1dIndexC arr) -> SArray1dIndexC\n"
		"SArray1dIndexC___isub__(SArray1dIndexC self, IndexC number) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC___imul__", _wrap_SArray1dIndexC___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(SArray1dIndexC arr) -> SArray1dIndexC\n"
		"SArray1dIndexC___imul__(SArray1dIndexC self, IndexC number) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC___idiv__", _wrap_SArray1dIndexC___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(SArray1dIndexC arr) -> SArray1dIndexC\n"
		"SArray1dIndexC___idiv__(SArray1dIndexC self, IndexC number) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC_Sum", _wrap_SArray1dIndexC_Sum, METH_VARARGS, (char *)"SArray1dIndexC_Sum(SArray1dIndexC self) -> IndexC"},
	 { (char *)"SArray1dIndexC_SumOfSqr", _wrap_SArray1dIndexC_SumOfSqr, METH_VARARGS, (char *)"SArray1dIndexC_SumOfSqr(SArray1dIndexC self) -> IndexC"},
	 { (char *)"SArray1dIndexC_SArray1d", _wrap_SArray1dIndexC_SArray1d, METH_VARARGS, (char *)"\n"
		"SArray1d() -> SArray1dIndexC\n"
		"SArray1dIndexC_SArray1d(SArray1dIndexC self) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC_Size", _wrap_SArray1dIndexC_Size, METH_VARARGS, (char *)"SArray1dIndexC_Size(SArray1dIndexC self) -> SizeT"},
	 { (char *)"SArray1dIndexC_Range", _wrap_SArray1dIndexC_Range, METH_VARARGS, (char *)"SArray1dIndexC_Range(SArray1dIndexC self) -> IndexRangeC"},
	 { (char *)"SArray1dIndexC_Join", _wrap_SArray1dIndexC_Join, METH_VARARGS, (char *)"\n"
		"Join(SArray1dIndexC Oth) -> SArray1dIndexC\n"
		"SArray1dIndexC_Join(SArray1dIndexC self, IndexC Oth) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC_Append", _wrap_SArray1dIndexC_Append, METH_VARARGS, (char *)"\n"
		"Append(SArray1dIndexC a) -> SArray1dIndexC\n"
		"SArray1dIndexC_Append(SArray1dIndexC self, IndexC a) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC_From", _wrap_SArray1dIndexC_From, METH_VARARGS, (char *)"\n"
		"From(UIntT offset) -> SArray1dIndexC\n"
		"SArray1dIndexC_From(SArray1dIndexC self, UIntT offset, UIntT size) -> SArray1dIndexC\n"
		""},
	 { (char *)"SArray1dIndexC_After", _wrap_SArray1dIndexC_After, METH_VARARGS, (char *)"SArray1dIndexC_After(SArray1dIndexC self, UIntT offset) -> SArray1dIndexC"},
	 { (char *)"SArray1dIndexC_Before", _wrap_SArray1dIndexC_Before, METH_VARARGS, (char *)"SArray1dIndexC_Before(SArray1dIndexC self, UIntT offset) -> SArray1dIndexC"},
	 { (char *)"SArray1dIndexC___eq__", _wrap_SArray1dIndexC___eq__, METH_VARARGS, (char *)"SArray1dIndexC___eq__(SArray1dIndexC self, SArray1dIndexC vv) -> bool"},
	 { (char *)"SArray1dIndexC___ne__", _wrap_SArray1dIndexC___ne__, METH_VARARGS, (char *)"SArray1dIndexC___ne__(SArray1dIndexC self, SArray1dIndexC vv) -> bool"},
	 { (char *)"SArray1dIndexC_Hash", _wrap_SArray1dIndexC_Hash, METH_VARARGS, (char *)"SArray1dIndexC_Hash(SArray1dIndexC self) -> SizeT"},
	 { (char *)"SArray1dIndexC_DataStart", _wrap_SArray1dIndexC_DataStart, METH_VARARGS, (char *)"SArray1dIndexC_DataStart(SArray1dIndexC self) -> IndexC"},
	 { (char *)"SArray1dIndexC___getitem__", _wrap_SArray1dIndexC___getitem__, METH_VARARGS, (char *)"SArray1dIndexC___getitem__(SArray1dIndexC self, size_t i) -> IndexC"},
	 { (char *)"SArray1dIndexC___setitem__", _wrap_SArray1dIndexC___setitem__, METH_VARARGS, (char *)"SArray1dIndexC___setitem__(SArray1dIndexC self, size_t i, IndexC v)"},
	 { (char *)"SArray1dIndexC___str__", _wrap_SArray1dIndexC___str__, METH_VARARGS, (char *)"SArray1dIndexC___str__(SArray1dIndexC self) -> char"},
	 { (char *)"delete_SArray1dIndexC", _wrap_delete_SArray1dIndexC, METH_VARARGS, (char *)"delete_SArray1dIndexC(SArray1dIndexC self)"},
	 { (char *)"SArray1dIndexC_swigregister", SArray1dIndexC_swigregister, METH_VARARGS, NULL},
	 { (char *)"SArray1dPoint2dC_ConstructAligned", _wrap_SArray1dPoint2dC_ConstructAligned, METH_VARARGS, (char *)"SArray1dPoint2dC_ConstructAligned(SizeT dim, UIntT align) -> SArray1dPoint2dC"},
	 { (char *)"new_SArray1dPoint2dC", _wrap_new_SArray1dPoint2dC, METH_VARARGS, (char *)"\n"
		"SArray1dPoint2dC()\n"
		"SArray1dPoint2dC(SizeT dim)\n"
		"SArray1dPoint2dC(SArray1dPoint2dC vv)\n"
		"SArray1dPoint2dC(SArray1dPoint2dC vv, SizeT dim, SizeT offsetInBuff = 0)\n"
		"SArray1dPoint2dC(SArray1dPoint2dC vv, SizeT dim)\n"
		"new_SArray1dPoint2dC(Point2dC data, SizeT dim, bool removable) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC_IsEmpty", _wrap_SArray1dPoint2dC_IsEmpty, METH_VARARGS, (char *)"SArray1dPoint2dC_IsEmpty(SArray1dPoint2dC self) -> bool"},
	 { (char *)"SArray1dPoint2dC_Contains", _wrap_SArray1dPoint2dC_Contains, METH_VARARGS, (char *)"SArray1dPoint2dC_Contains(SArray1dPoint2dC self, IndexC i) -> bool"},
	 { (char *)"SArray1dPoint2dC_Fill", _wrap_SArray1dPoint2dC_Fill, METH_VARARGS, (char *)"SArray1dPoint2dC_Fill(SArray1dPoint2dC self, Point2dC d)"},
	 { (char *)"SArray1dPoint2dC_Reverse", _wrap_SArray1dPoint2dC_Reverse, METH_VARARGS, (char *)"SArray1dPoint2dC_Reverse(SArray1dPoint2dC self)"},
	 { (char *)"SArray1dPoint2dC___mul__", _wrap_SArray1dPoint2dC___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(SArray1dPoint2dC arr) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC___mul__(SArray1dPoint2dC self, Point2dC number) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC___div__", _wrap_SArray1dPoint2dC___div__, METH_VARARGS, (char *)"\n"
		"__div__(SArray1dPoint2dC arr) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC___div__(SArray1dPoint2dC self, Point2dC number) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC___add__", _wrap_SArray1dPoint2dC___add__, METH_VARARGS, (char *)"\n"
		"__add__(SArray1dPoint2dC arr) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC___add__(SArray1dPoint2dC self, Point2dC number) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC___sub__", _wrap_SArray1dPoint2dC___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(SArray1dPoint2dC arr) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC___sub__(SArray1dPoint2dC self, Point2dC number) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC___iadd__", _wrap_SArray1dPoint2dC___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(SArray1dPoint2dC arr) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC___iadd__(SArray1dPoint2dC self, Point2dC number) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC___isub__", _wrap_SArray1dPoint2dC___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(SArray1dPoint2dC arr) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC___isub__(SArray1dPoint2dC self, Point2dC number) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC___imul__", _wrap_SArray1dPoint2dC___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(SArray1dPoint2dC arr) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC___imul__(SArray1dPoint2dC self, Point2dC number) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC___idiv__", _wrap_SArray1dPoint2dC___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(SArray1dPoint2dC arr) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC___idiv__(SArray1dPoint2dC self, Point2dC number) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC_Sum", _wrap_SArray1dPoint2dC_Sum, METH_VARARGS, (char *)"SArray1dPoint2dC_Sum(SArray1dPoint2dC self) -> Point2dC"},
	 { (char *)"SArray1dPoint2dC_SumOfSqr", _wrap_SArray1dPoint2dC_SumOfSqr, METH_VARARGS, (char *)"SArray1dPoint2dC_SumOfSqr(SArray1dPoint2dC self) -> Point2dC"},
	 { (char *)"SArray1dPoint2dC_SArray1d", _wrap_SArray1dPoint2dC_SArray1d, METH_VARARGS, (char *)"\n"
		"SArray1d() -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC_SArray1d(SArray1dPoint2dC self) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC_Size", _wrap_SArray1dPoint2dC_Size, METH_VARARGS, (char *)"SArray1dPoint2dC_Size(SArray1dPoint2dC self) -> SizeT"},
	 { (char *)"SArray1dPoint2dC_Range", _wrap_SArray1dPoint2dC_Range, METH_VARARGS, (char *)"SArray1dPoint2dC_Range(SArray1dPoint2dC self) -> IndexRangeC"},
	 { (char *)"SArray1dPoint2dC_Join", _wrap_SArray1dPoint2dC_Join, METH_VARARGS, (char *)"\n"
		"Join(SArray1dPoint2dC Oth) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC_Join(SArray1dPoint2dC self, Point2dC Oth) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC_Append", _wrap_SArray1dPoint2dC_Append, METH_VARARGS, (char *)"\n"
		"Append(SArray1dPoint2dC a) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC_Append(SArray1dPoint2dC self, Point2dC a) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC_From", _wrap_SArray1dPoint2dC_From, METH_VARARGS, (char *)"\n"
		"From(UIntT offset) -> SArray1dPoint2dC\n"
		"SArray1dPoint2dC_From(SArray1dPoint2dC self, UIntT offset, UIntT size) -> SArray1dPoint2dC\n"
		""},
	 { (char *)"SArray1dPoint2dC_After", _wrap_SArray1dPoint2dC_After, METH_VARARGS, (char *)"SArray1dPoint2dC_After(SArray1dPoint2dC self, UIntT offset) -> SArray1dPoint2dC"},
	 { (char *)"SArray1dPoint2dC_Before", _wrap_SArray1dPoint2dC_Before, METH_VARARGS, (char *)"SArray1dPoint2dC_Before(SArray1dPoint2dC self, UIntT offset) -> SArray1dPoint2dC"},
	 { (char *)"SArray1dPoint2dC___eq__", _wrap_SArray1dPoint2dC___eq__, METH_VARARGS, (char *)"SArray1dPoint2dC___eq__(SArray1dPoint2dC self, SArray1dPoint2dC vv) -> bool"},
	 { (char *)"SArray1dPoint2dC___ne__", _wrap_SArray1dPoint2dC___ne__, METH_VARARGS, (char *)"SArray1dPoint2dC___ne__(SArray1dPoint2dC self, SArray1dPoint2dC vv) -> bool"},
	 { (char *)"SArray1dPoint2dC_Hash", _wrap_SArray1dPoint2dC_Hash, METH_VARARGS, (char *)"SArray1dPoint2dC_Hash(SArray1dPoint2dC self) -> SizeT"},
	 { (char *)"SArray1dPoint2dC_DataStart", _wrap_SArray1dPoint2dC_DataStart, METH_VARARGS, (char *)"SArray1dPoint2dC_DataStart(SArray1dPoint2dC self) -> Point2dC"},
	 { (char *)"SArray1dPoint2dC___getitem__", _wrap_SArray1dPoint2dC___getitem__, METH_VARARGS, (char *)"SArray1dPoint2dC___getitem__(SArray1dPoint2dC self, size_t i) -> Point2dC"},
	 { (char *)"SArray1dPoint2dC___setitem__", _wrap_SArray1dPoint2dC___setitem__, METH_VARARGS, (char *)"SArray1dPoint2dC___setitem__(SArray1dPoint2dC self, size_t i, Point2dC v)"},
	 { (char *)"SArray1dPoint2dC___str__", _wrap_SArray1dPoint2dC___str__, METH_VARARGS, (char *)"SArray1dPoint2dC___str__(SArray1dPoint2dC self) -> char"},
	 { (char *)"delete_SArray1dPoint2dC", _wrap_delete_SArray1dPoint2dC, METH_VARARGS, (char *)"delete_SArray1dPoint2dC(SArray1dPoint2dC self)"},
	 { (char *)"SArray1dPoint2dC_swigregister", SArray1dPoint2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"SArray1dVectorC_ConstructAligned", _wrap_SArray1dVectorC_ConstructAligned, METH_VARARGS, (char *)"SArray1dVectorC_ConstructAligned(SizeT dim, UIntT align) -> SArray1dVectorC"},
	 { (char *)"new_SArray1dVectorC", _wrap_new_SArray1dVectorC, METH_VARARGS, (char *)"\n"
		"SArray1dVectorC()\n"
		"SArray1dVectorC(SizeT dim)\n"
		"SArray1dVectorC(SArray1dVectorC vv)\n"
		"SArray1dVectorC(SArray1dVectorC vv, SizeT dim, SizeT offsetInBuff = 0)\n"
		"SArray1dVectorC(SArray1dVectorC vv, SizeT dim)\n"
		"new_SArray1dVectorC(VectorC data, SizeT dim, bool removable) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC_IsEmpty", _wrap_SArray1dVectorC_IsEmpty, METH_VARARGS, (char *)"SArray1dVectorC_IsEmpty(SArray1dVectorC self) -> bool"},
	 { (char *)"SArray1dVectorC_Contains", _wrap_SArray1dVectorC_Contains, METH_VARARGS, (char *)"SArray1dVectorC_Contains(SArray1dVectorC self, IndexC i) -> bool"},
	 { (char *)"SArray1dVectorC_Fill", _wrap_SArray1dVectorC_Fill, METH_VARARGS, (char *)"SArray1dVectorC_Fill(SArray1dVectorC self, VectorC d)"},
	 { (char *)"SArray1dVectorC_Reverse", _wrap_SArray1dVectorC_Reverse, METH_VARARGS, (char *)"SArray1dVectorC_Reverse(SArray1dVectorC self)"},
	 { (char *)"SArray1dVectorC___mul__", _wrap_SArray1dVectorC___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(SArray1dVectorC arr) -> SArray1dVectorC\n"
		"SArray1dVectorC___mul__(SArray1dVectorC self, VectorC number) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC___div__", _wrap_SArray1dVectorC___div__, METH_VARARGS, (char *)"\n"
		"__div__(SArray1dVectorC arr) -> SArray1dVectorC\n"
		"SArray1dVectorC___div__(SArray1dVectorC self, VectorC number) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC___add__", _wrap_SArray1dVectorC___add__, METH_VARARGS, (char *)"\n"
		"__add__(SArray1dVectorC arr) -> SArray1dVectorC\n"
		"SArray1dVectorC___add__(SArray1dVectorC self, VectorC number) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC___sub__", _wrap_SArray1dVectorC___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(SArray1dVectorC arr) -> SArray1dVectorC\n"
		"SArray1dVectorC___sub__(SArray1dVectorC self, VectorC number) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC___iadd__", _wrap_SArray1dVectorC___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(SArray1dVectorC arr) -> SArray1dVectorC\n"
		"SArray1dVectorC___iadd__(SArray1dVectorC self, VectorC number) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC___isub__", _wrap_SArray1dVectorC___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(SArray1dVectorC arr) -> SArray1dVectorC\n"
		"SArray1dVectorC___isub__(SArray1dVectorC self, VectorC number) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC___imul__", _wrap_SArray1dVectorC___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(SArray1dVectorC arr) -> SArray1dVectorC\n"
		"SArray1dVectorC___imul__(SArray1dVectorC self, VectorC number) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC___idiv__", _wrap_SArray1dVectorC___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(SArray1dVectorC arr) -> SArray1dVectorC\n"
		"SArray1dVectorC___idiv__(SArray1dVectorC self, VectorC number) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC_Sum", _wrap_SArray1dVectorC_Sum, METH_VARARGS, (char *)"SArray1dVectorC_Sum(SArray1dVectorC self) -> VectorC"},
	 { (char *)"SArray1dVectorC_SumOfSqr", _wrap_SArray1dVectorC_SumOfSqr, METH_VARARGS, (char *)"SArray1dVectorC_SumOfSqr(SArray1dVectorC self) -> VectorC"},
	 { (char *)"SArray1dVectorC_SArray1d", _wrap_SArray1dVectorC_SArray1d, METH_VARARGS, (char *)"\n"
		"SArray1d() -> SArray1dVectorC\n"
		"SArray1dVectorC_SArray1d(SArray1dVectorC self) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC_Size", _wrap_SArray1dVectorC_Size, METH_VARARGS, (char *)"SArray1dVectorC_Size(SArray1dVectorC self) -> SizeT"},
	 { (char *)"SArray1dVectorC_Range", _wrap_SArray1dVectorC_Range, METH_VARARGS, (char *)"SArray1dVectorC_Range(SArray1dVectorC self) -> IndexRangeC"},
	 { (char *)"SArray1dVectorC_Join", _wrap_SArray1dVectorC_Join, METH_VARARGS, (char *)"\n"
		"Join(SArray1dVectorC Oth) -> SArray1dVectorC\n"
		"SArray1dVectorC_Join(SArray1dVectorC self, VectorC Oth) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC_Append", _wrap_SArray1dVectorC_Append, METH_VARARGS, (char *)"\n"
		"Append(SArray1dVectorC a) -> SArray1dVectorC\n"
		"SArray1dVectorC_Append(SArray1dVectorC self, VectorC a) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC_From", _wrap_SArray1dVectorC_From, METH_VARARGS, (char *)"\n"
		"From(UIntT offset) -> SArray1dVectorC\n"
		"SArray1dVectorC_From(SArray1dVectorC self, UIntT offset, UIntT size) -> SArray1dVectorC\n"
		""},
	 { (char *)"SArray1dVectorC_After", _wrap_SArray1dVectorC_After, METH_VARARGS, (char *)"SArray1dVectorC_After(SArray1dVectorC self, UIntT offset) -> SArray1dVectorC"},
	 { (char *)"SArray1dVectorC_Before", _wrap_SArray1dVectorC_Before, METH_VARARGS, (char *)"SArray1dVectorC_Before(SArray1dVectorC self, UIntT offset) -> SArray1dVectorC"},
	 { (char *)"SArray1dVectorC___eq__", _wrap_SArray1dVectorC___eq__, METH_VARARGS, (char *)"SArray1dVectorC___eq__(SArray1dVectorC self, SArray1dVectorC vv) -> bool"},
	 { (char *)"SArray1dVectorC___ne__", _wrap_SArray1dVectorC___ne__, METH_VARARGS, (char *)"SArray1dVectorC___ne__(SArray1dVectorC self, SArray1dVectorC vv) -> bool"},
	 { (char *)"SArray1dVectorC_Hash", _wrap_SArray1dVectorC_Hash, METH_VARARGS, (char *)"SArray1dVectorC_Hash(SArray1dVectorC self) -> SizeT"},
	 { (char *)"SArray1dVectorC_DataStart", _wrap_SArray1dVectorC_DataStart, METH_VARARGS, (char *)"SArray1dVectorC_DataStart(SArray1dVectorC self) -> VectorC"},
	 { (char *)"SArray1dVectorC___getitem__", _wrap_SArray1dVectorC___getitem__, METH_VARARGS, (char *)"SArray1dVectorC___getitem__(SArray1dVectorC self, size_t i) -> VectorC"},
	 { (char *)"SArray1dVectorC___setitem__", _wrap_SArray1dVectorC___setitem__, METH_VARARGS, (char *)"SArray1dVectorC___setitem__(SArray1dVectorC self, size_t i, VectorC v)"},
	 { (char *)"SArray1dVectorC___str__", _wrap_SArray1dVectorC___str__, METH_VARARGS, (char *)"SArray1dVectorC___str__(SArray1dVectorC self) -> char"},
	 { (char *)"delete_SArray1dVectorC", _wrap_delete_SArray1dVectorC, METH_VARARGS, (char *)"delete_SArray1dVectorC(SArray1dVectorC self)"},
	 { (char *)"SArray1dVectorC_swigregister", SArray1dVectorC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SArray2dFloat", _wrap_new_SArray2dFloat, METH_VARARGS, (char *)"\n"
		"SArray2dFloat()\n"
		"SArray2dFloat(SizeT dim1, SizeT dim2)\n"
		"SArray2dFloat(Index2dC size)\n"
		"SArray2dFloat(SArray2dFloat arr, SizeT size1, SizeT size2)\n"
		"SArray2dFloat(SArray2dFloat arr, IndexRange2dC rng)\n"
		"SArray2dFloat(float data, SizeT size1, SizeT size2, bool copyMemory = False, \n"
		"    bool freeMemory = False, IntT stride = 0)\n"
		"SArray2dFloat(float data, SizeT size1, SizeT size2, bool copyMemory = False, \n"
		"    bool freeMemory = False)\n"
		"SArray2dFloat(float data, SizeT size1, SizeT size2, bool copyMemory = False)\n"
		"new_SArray2dFloat(float data, SizeT size1, SizeT size2) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat_ConstructAligned", _wrap_SArray2dFloat_ConstructAligned, METH_VARARGS, (char *)"SArray2dFloat_ConstructAligned(SizeT dim1, SizeT dim2, UIntT align) -> SArray2dFloat"},
	 { (char *)"SArray2dFloat_Copy", _wrap_SArray2dFloat_Copy, METH_VARARGS, (char *)"SArray2dFloat_Copy(SArray2dFloat self) -> SArray2dFloat"},
	 { (char *)"SArray2dFloat_Size1", _wrap_SArray2dFloat_Size1, METH_VARARGS, (char *)"SArray2dFloat_Size1(SArray2dFloat self) -> SizeT"},
	 { (char *)"SArray2dFloat_Size2", _wrap_SArray2dFloat_Size2, METH_VARARGS, (char *)"SArray2dFloat_Size2(SArray2dFloat self) -> SizeT"},
	 { (char *)"SArray2dFloat_Contains", _wrap_SArray2dFloat_Contains, METH_VARARGS, (char *)"SArray2dFloat_Contains(SArray2dFloat self, Index2dC i) -> bool"},
	 { (char *)"SArray2dFloat_Fill", _wrap_SArray2dFloat_Fill, METH_VARARGS, (char *)"SArray2dFloat_Fill(SArray2dFloat self, float d)"},
	 { (char *)"SArray2dFloat_Stride", _wrap_SArray2dFloat_Stride, METH_VARARGS, (char *)"SArray2dFloat_Stride(SArray2dFloat self) -> IntT"},
	 { (char *)"SArray2dFloat_IsContinuous", _wrap_SArray2dFloat_IsContinuous, METH_VARARGS, (char *)"SArray2dFloat_IsContinuous(SArray2dFloat self) -> bool"},
	 { (char *)"SArray2dFloat_Frame", _wrap_SArray2dFloat_Frame, METH_VARARGS, (char *)"SArray2dFloat_Frame(SArray2dFloat self) -> IndexRange2dC"},
	 { (char *)"SArray2dFloat_AsVector", _wrap_SArray2dFloat_AsVector, METH_VARARGS, (char *)"\n"
		"AsVector(bool alwaysCopy = False) -> SArray1dFloat\n"
		"SArray2dFloat_AsVector(SArray2dFloat self) -> SArray1dFloat\n"
		""},
	 { (char *)"SArray2dFloat___mul__", _wrap_SArray2dFloat___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(SArray2dFloat arr) -> SArray2dFloat\n"
		"SArray2dFloat___mul__(SArray2dFloat self, float number) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat___div__", _wrap_SArray2dFloat___div__, METH_VARARGS, (char *)"\n"
		"__div__(SArray2dFloat arr) -> SArray2dFloat\n"
		"SArray2dFloat___div__(SArray2dFloat self, float number) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat___add__", _wrap_SArray2dFloat___add__, METH_VARARGS, (char *)"\n"
		"__add__(SArray2dFloat arr) -> SArray2dFloat\n"
		"SArray2dFloat___add__(SArray2dFloat self, float number) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat___sub__", _wrap_SArray2dFloat___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(SArray2dFloat arr) -> SArray2dFloat\n"
		"SArray2dFloat___sub__(SArray2dFloat self, float number) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat___iadd__", _wrap_SArray2dFloat___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(SArray2dFloat arr) -> SArray2dFloat\n"
		"SArray2dFloat___iadd__(SArray2dFloat self, float number) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat___isub__", _wrap_SArray2dFloat___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(SArray2dFloat arr) -> SArray2dFloat\n"
		"SArray2dFloat___isub__(SArray2dFloat self, float number) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat___imul__", _wrap_SArray2dFloat___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(SArray2dFloat arr) -> SArray2dFloat\n"
		"SArray2dFloat___imul__(SArray2dFloat self, float number) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat___idiv__", _wrap_SArray2dFloat___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(SArray2dFloat arr) -> SArray2dFloat\n"
		"SArray2dFloat___idiv__(SArray2dFloat self, float number) -> SArray2dFloat\n"
		""},
	 { (char *)"SArray2dFloat___eq__", _wrap_SArray2dFloat___eq__, METH_VARARGS, (char *)"SArray2dFloat___eq__(SArray2dFloat self, SArray2dFloat op) -> bool"},
	 { (char *)"SArray2dFloat___ne__", _wrap_SArray2dFloat___ne__, METH_VARARGS, (char *)"SArray2dFloat___ne__(SArray2dFloat self, SArray2dFloat op) -> bool"},
	 { (char *)"SArray2dFloat_SumOfSqr", _wrap_SArray2dFloat_SumOfSqr, METH_VARARGS, (char *)"SArray2dFloat_SumOfSqr(SArray2dFloat self) -> float"},
	 { (char *)"SArray2dFloat_Sum", _wrap_SArray2dFloat_Sum, METH_VARARGS, (char *)"SArray2dFloat_Sum(SArray2dFloat self) -> float"},
	 { (char *)"SArray2dFloat_SliceRow", _wrap_SArray2dFloat_SliceRow, METH_VARARGS, (char *)"SArray2dFloat_SliceRow(SArray2dFloat self, IndexC i) -> SArray1dFloat"},
	 { (char *)"SArray2dFloat_SetColumn", _wrap_SArray2dFloat_SetColumn, METH_VARARGS, (char *)"\n"
		"SetColumn(IndexC i, SArray1dFloat val)\n"
		"SArray2dFloat_SetColumn(SArray2dFloat self, IndexC i, float val)\n"
		""},
	 { (char *)"SArray2dFloat_SetRow", _wrap_SArray2dFloat_SetRow, METH_VARARGS, (char *)"\n"
		"SetRow(IndexC i, SArray1dFloat val)\n"
		"SArray2dFloat_SetRow(SArray2dFloat self, IndexC i, float val)\n"
		""},
	 { (char *)"SArray2dFloat_SetSubArray", _wrap_SArray2dFloat_SetSubArray, METH_VARARGS, (char *)"SArray2dFloat_SetSubArray(SArray2dFloat self, Index2dC origin, SArray2dFloat vals)"},
	 { (char *)"SArray2dFloat_Hash", _wrap_SArray2dFloat_Hash, METH_VARARGS, (char *)"SArray2dFloat_Hash(SArray2dFloat self) -> SizeT"},
	 { (char *)"SArray2dFloat___str__", _wrap_SArray2dFloat___str__, METH_VARARGS, (char *)"SArray2dFloat___str__(SArray2dFloat self) -> char"},
	 { (char *)"delete_SArray2dFloat", _wrap_delete_SArray2dFloat, METH_VARARGS, (char *)"delete_SArray2dFloat(SArray2dFloat self)"},
	 { (char *)"SArray2dFloat_swigregister", SArray2dFloat_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SArray2dReal", _wrap_new_SArray2dReal, METH_VARARGS, (char *)"\n"
		"SArray2dReal()\n"
		"SArray2dReal(SizeT dim1, SizeT dim2)\n"
		"SArray2dReal(Index2dC size)\n"
		"SArray2dReal(SArray2dReal arr, SizeT size1, SizeT size2)\n"
		"SArray2dReal(SArray2dReal arr, IndexRange2dC rng)\n"
		"SArray2dReal(double data, SizeT size1, SizeT size2, bool copyMemory = False, \n"
		"    bool freeMemory = False, IntT stride = 0)\n"
		"SArray2dReal(double data, SizeT size1, SizeT size2, bool copyMemory = False, \n"
		"    bool freeMemory = False)\n"
		"SArray2dReal(double data, SizeT size1, SizeT size2, bool copyMemory = False)\n"
		"new_SArray2dReal(double data, SizeT size1, SizeT size2) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal_ConstructAligned", _wrap_SArray2dReal_ConstructAligned, METH_VARARGS, (char *)"SArray2dReal_ConstructAligned(SizeT dim1, SizeT dim2, UIntT align) -> SArray2dReal"},
	 { (char *)"SArray2dReal_Copy", _wrap_SArray2dReal_Copy, METH_VARARGS, (char *)"SArray2dReal_Copy(SArray2dReal self) -> SArray2dReal"},
	 { (char *)"SArray2dReal_Size1", _wrap_SArray2dReal_Size1, METH_VARARGS, (char *)"SArray2dReal_Size1(SArray2dReal self) -> SizeT"},
	 { (char *)"SArray2dReal_Size2", _wrap_SArray2dReal_Size2, METH_VARARGS, (char *)"SArray2dReal_Size2(SArray2dReal self) -> SizeT"},
	 { (char *)"SArray2dReal_Contains", _wrap_SArray2dReal_Contains, METH_VARARGS, (char *)"SArray2dReal_Contains(SArray2dReal self, Index2dC i) -> bool"},
	 { (char *)"SArray2dReal_Fill", _wrap_SArray2dReal_Fill, METH_VARARGS, (char *)"SArray2dReal_Fill(SArray2dReal self, double d)"},
	 { (char *)"SArray2dReal_Stride", _wrap_SArray2dReal_Stride, METH_VARARGS, (char *)"SArray2dReal_Stride(SArray2dReal self) -> IntT"},
	 { (char *)"SArray2dReal_IsContinuous", _wrap_SArray2dReal_IsContinuous, METH_VARARGS, (char *)"SArray2dReal_IsContinuous(SArray2dReal self) -> bool"},
	 { (char *)"SArray2dReal_Frame", _wrap_SArray2dReal_Frame, METH_VARARGS, (char *)"SArray2dReal_Frame(SArray2dReal self) -> IndexRange2dC"},
	 { (char *)"SArray2dReal_AsVector", _wrap_SArray2dReal_AsVector, METH_VARARGS, (char *)"\n"
		"AsVector(bool alwaysCopy = False) -> SArray1dReal\n"
		"SArray2dReal_AsVector(SArray2dReal self) -> SArray1dReal\n"
		""},
	 { (char *)"SArray2dReal___mul__", _wrap_SArray2dReal___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(SArray2dReal arr) -> SArray2dReal\n"
		"SArray2dReal___mul__(SArray2dReal self, double number) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal___div__", _wrap_SArray2dReal___div__, METH_VARARGS, (char *)"\n"
		"__div__(SArray2dReal arr) -> SArray2dReal\n"
		"SArray2dReal___div__(SArray2dReal self, double number) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal___add__", _wrap_SArray2dReal___add__, METH_VARARGS, (char *)"\n"
		"__add__(SArray2dReal arr) -> SArray2dReal\n"
		"SArray2dReal___add__(SArray2dReal self, double number) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal___sub__", _wrap_SArray2dReal___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(SArray2dReal arr) -> SArray2dReal\n"
		"SArray2dReal___sub__(SArray2dReal self, double number) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal___iadd__", _wrap_SArray2dReal___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(SArray2dReal arr) -> SArray2dReal\n"
		"SArray2dReal___iadd__(SArray2dReal self, double number) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal___isub__", _wrap_SArray2dReal___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(SArray2dReal arr) -> SArray2dReal\n"
		"SArray2dReal___isub__(SArray2dReal self, double number) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal___imul__", _wrap_SArray2dReal___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(SArray2dReal arr) -> SArray2dReal\n"
		"SArray2dReal___imul__(SArray2dReal self, double number) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal___idiv__", _wrap_SArray2dReal___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(SArray2dReal arr) -> SArray2dReal\n"
		"SArray2dReal___idiv__(SArray2dReal self, double number) -> SArray2dReal\n"
		""},
	 { (char *)"SArray2dReal___eq__", _wrap_SArray2dReal___eq__, METH_VARARGS, (char *)"SArray2dReal___eq__(SArray2dReal self, SArray2dReal op) -> bool"},
	 { (char *)"SArray2dReal___ne__", _wrap_SArray2dReal___ne__, METH_VARARGS, (char *)"SArray2dReal___ne__(SArray2dReal self, SArray2dReal op) -> bool"},
	 { (char *)"SArray2dReal_SumOfSqr", _wrap_SArray2dReal_SumOfSqr, METH_VARARGS, (char *)"SArray2dReal_SumOfSqr(SArray2dReal self) -> double"},
	 { (char *)"SArray2dReal_Sum", _wrap_SArray2dReal_Sum, METH_VARARGS, (char *)"SArray2dReal_Sum(SArray2dReal self) -> double"},
	 { (char *)"SArray2dReal_SliceRow", _wrap_SArray2dReal_SliceRow, METH_VARARGS, (char *)"SArray2dReal_SliceRow(SArray2dReal self, IndexC i) -> SArray1dReal"},
	 { (char *)"SArray2dReal_SetColumn", _wrap_SArray2dReal_SetColumn, METH_VARARGS, (char *)"\n"
		"SetColumn(IndexC i, SArray1dReal val)\n"
		"SArray2dReal_SetColumn(SArray2dReal self, IndexC i, double val)\n"
		""},
	 { (char *)"SArray2dReal_SetRow", _wrap_SArray2dReal_SetRow, METH_VARARGS, (char *)"\n"
		"SetRow(IndexC i, SArray1dReal val)\n"
		"SArray2dReal_SetRow(SArray2dReal self, IndexC i, double val)\n"
		""},
	 { (char *)"SArray2dReal_SetSubArray", _wrap_SArray2dReal_SetSubArray, METH_VARARGS, (char *)"SArray2dReal_SetSubArray(SArray2dReal self, Index2dC origin, SArray2dReal vals)"},
	 { (char *)"SArray2dReal_Hash", _wrap_SArray2dReal_Hash, METH_VARARGS, (char *)"SArray2dReal_Hash(SArray2dReal self) -> SizeT"},
	 { (char *)"SArray2dReal___str__", _wrap_SArray2dReal___str__, METH_VARARGS, (char *)"SArray2dReal___str__(SArray2dReal self) -> char"},
	 { (char *)"delete_SArray2dReal", _wrap_delete_SArray2dReal, METH_VARARGS, (char *)"delete_SArray2dReal(SArray2dReal self)"},
	 { (char *)"SArray2dReal_swigregister", SArray2dReal_swigregister, METH_VARARGS, NULL},
	 { (char *)"TVectorReal_Product", _wrap_TVectorReal_Product, METH_VARARGS, (char *)"TVectorReal_Product(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_SumOfSqr", _wrap_TVectorReal_SumOfSqr, METH_VARARGS, (char *)"TVectorReal_SumOfSqr(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_SumOfAbs", _wrap_TVectorReal_SumOfAbs, METH_VARARGS, (char *)"TVectorReal_SumOfAbs(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_MaxValue", _wrap_TVectorReal_MaxValue, METH_VARARGS, (char *)"TVectorReal_MaxValue(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_MaxMagnitude", _wrap_TVectorReal_MaxMagnitude, METH_VARARGS, (char *)"TVectorReal_MaxMagnitude(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_MaxAbsValue", _wrap_TVectorReal_MaxAbsValue, METH_VARARGS, (char *)"TVectorReal_MaxAbsValue(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_MinValue", _wrap_TVectorReal_MinValue, METH_VARARGS, (char *)"TVectorReal_MinValue(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_MinAbsValue", _wrap_TVectorReal_MinAbsValue, METH_VARARGS, (char *)"TVectorReal_MinAbsValue(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_Reciprocal", _wrap_TVectorReal_Reciprocal, METH_VARARGS, (char *)"TVectorReal_Reciprocal(TVectorReal self) -> TVectorReal"},
	 { (char *)"TVectorReal_Modulus", _wrap_TVectorReal_Modulus, METH_VARARGS, (char *)"TVectorReal_Modulus(TVectorReal self) -> double"},
	 { (char *)"TVectorReal_TMul", _wrap_TVectorReal_TMul, METH_VARARGS, (char *)"TVectorReal_TMul(TVectorReal self, TVectorReal b) -> double"},
	 { (char *)"TVectorReal_Dot", _wrap_TVectorReal_Dot, METH_VARARGS, (char *)"TVectorReal_Dot(TVectorReal self, TVectorReal v) -> double"},
	 { (char *)"TVectorReal_Dot2", _wrap_TVectorReal_Dot2, METH_VARARGS, (char *)"TVectorReal_Dot2(TVectorReal self, TVectorReal v1, TVectorReal v2) -> double"},
	 { (char *)"TVectorReal_ElemMul", _wrap_TVectorReal_ElemMul, METH_VARARGS, (char *)"TVectorReal_ElemMul(TVectorReal self, TVectorReal v2, TVectorReal result)"},
	 { (char *)"TVectorReal_ElemSum", _wrap_TVectorReal_ElemSum, METH_VARARGS, (char *)"TVectorReal_ElemSum(TVectorReal self, TVectorReal v2, TVectorReal result)"},
	 { (char *)"TVectorReal_ElemSubtract", _wrap_TVectorReal_ElemSubtract, METH_VARARGS, (char *)"TVectorReal_ElemSubtract(TVectorReal self, TVectorReal v2, TVectorReal result)"},
	 { (char *)"TVectorReal_SetSmallToBeZero", _wrap_TVectorReal_SetSmallToBeZero, METH_VARARGS, (char *)"TVectorReal_SetSmallToBeZero(TVectorReal self, double min) -> TVectorReal"},
	 { (char *)"TVectorReal_Unit", _wrap_TVectorReal_Unit, METH_VARARGS, (char *)"TVectorReal_Unit(TVectorReal self) -> TVectorReal"},
	 { (char *)"TVectorReal_MakeUnit", _wrap_TVectorReal_MakeUnit, METH_VARARGS, (char *)"TVectorReal_MakeUnit(TVectorReal self) -> TVectorReal"},
	 { (char *)"TVectorReal_MulAdd", _wrap_TVectorReal_MulAdd, METH_VARARGS, (char *)"TVectorReal_MulAdd(TVectorReal self, TVectorReal i, double a) -> TVectorReal"},
	 { (char *)"TVectorReal_MaxValueDistance", _wrap_TVectorReal_MaxValueDistance, METH_VARARGS, (char *)"TVectorReal_MaxValueDistance(TVectorReal self, TVectorReal i) -> double"},
	 { (char *)"TVectorReal_CityBlockDistance", _wrap_TVectorReal_CityBlockDistance, METH_VARARGS, (char *)"TVectorReal_CityBlockDistance(TVectorReal self, TVectorReal i) -> double"},
	 { (char *)"TVectorReal_SqrEuclidDistance", _wrap_TVectorReal_SqrEuclidDistance, METH_VARARGS, (char *)"TVectorReal_SqrEuclidDistance(TVectorReal self, TVectorReal i) -> double"},
	 { (char *)"TVectorReal_EuclidDistance", _wrap_TVectorReal_EuclidDistance, METH_VARARGS, (char *)"TVectorReal_EuclidDistance(TVectorReal self, TVectorReal i) -> double"},
	 { (char *)"TVectorReal_MaxIndex", _wrap_TVectorReal_MaxIndex, METH_VARARGS, (char *)"TVectorReal_MaxIndex(TVectorReal self) -> IndexC"},
	 { (char *)"TVectorReal_MaxAbsIndex", _wrap_TVectorReal_MaxAbsIndex, METH_VARARGS, (char *)"TVectorReal_MaxAbsIndex(TVectorReal self) -> IndexC"},
	 { (char *)"TVectorReal_MinIndex", _wrap_TVectorReal_MinIndex, METH_VARARGS, (char *)"TVectorReal_MinIndex(TVectorReal self) -> IndexC"},
	 { (char *)"TVectorReal_MinAbsIndex", _wrap_TVectorReal_MinAbsIndex, METH_VARARGS, (char *)"TVectorReal_MinAbsIndex(TVectorReal self) -> IndexC"},
	 { (char *)"TVectorReal___str__", _wrap_TVectorReal___str__, METH_VARARGS, (char *)"TVectorReal___str__(TVectorReal self) -> char"},
	 { (char *)"new_TVectorReal", _wrap_new_TVectorReal, METH_VARARGS, (char *)"new_TVectorReal() -> TVectorReal"},
	 { (char *)"delete_TVectorReal", _wrap_delete_TVectorReal, METH_VARARGS, (char *)"delete_TVectorReal(TVectorReal self)"},
	 { (char *)"TVectorReal_swigregister", TVectorReal_swigregister, METH_VARARGS, NULL},
	 { (char *)"TVectorFloat_Product", _wrap_TVectorFloat_Product, METH_VARARGS, (char *)"TVectorFloat_Product(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_SumOfSqr", _wrap_TVectorFloat_SumOfSqr, METH_VARARGS, (char *)"TVectorFloat_SumOfSqr(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_SumOfAbs", _wrap_TVectorFloat_SumOfAbs, METH_VARARGS, (char *)"TVectorFloat_SumOfAbs(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_MaxValue", _wrap_TVectorFloat_MaxValue, METH_VARARGS, (char *)"TVectorFloat_MaxValue(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_MaxMagnitude", _wrap_TVectorFloat_MaxMagnitude, METH_VARARGS, (char *)"TVectorFloat_MaxMagnitude(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_MaxAbsValue", _wrap_TVectorFloat_MaxAbsValue, METH_VARARGS, (char *)"TVectorFloat_MaxAbsValue(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_MinValue", _wrap_TVectorFloat_MinValue, METH_VARARGS, (char *)"TVectorFloat_MinValue(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_MinAbsValue", _wrap_TVectorFloat_MinAbsValue, METH_VARARGS, (char *)"TVectorFloat_MinAbsValue(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_Reciprocal", _wrap_TVectorFloat_Reciprocal, METH_VARARGS, (char *)"TVectorFloat_Reciprocal(TVectorFloat self) -> TVectorFloat"},
	 { (char *)"TVectorFloat_Modulus", _wrap_TVectorFloat_Modulus, METH_VARARGS, (char *)"TVectorFloat_Modulus(TVectorFloat self) -> float"},
	 { (char *)"TVectorFloat_TMul", _wrap_TVectorFloat_TMul, METH_VARARGS, (char *)"TVectorFloat_TMul(TVectorFloat self, TVectorFloat b) -> float"},
	 { (char *)"TVectorFloat_Dot", _wrap_TVectorFloat_Dot, METH_VARARGS, (char *)"TVectorFloat_Dot(TVectorFloat self, TVectorFloat v) -> float"},
	 { (char *)"TVectorFloat_Dot2", _wrap_TVectorFloat_Dot2, METH_VARARGS, (char *)"TVectorFloat_Dot2(TVectorFloat self, TVectorFloat v1, TVectorFloat v2) -> float"},
	 { (char *)"TVectorFloat_ElemMul", _wrap_TVectorFloat_ElemMul, METH_VARARGS, (char *)"TVectorFloat_ElemMul(TVectorFloat self, TVectorFloat v2, TVectorFloat result)"},
	 { (char *)"TVectorFloat_ElemSum", _wrap_TVectorFloat_ElemSum, METH_VARARGS, (char *)"TVectorFloat_ElemSum(TVectorFloat self, TVectorFloat v2, TVectorFloat result)"},
	 { (char *)"TVectorFloat_ElemSubtract", _wrap_TVectorFloat_ElemSubtract, METH_VARARGS, (char *)"TVectorFloat_ElemSubtract(TVectorFloat self, TVectorFloat v2, TVectorFloat result)"},
	 { (char *)"TVectorFloat_SetSmallToBeZero", _wrap_TVectorFloat_SetSmallToBeZero, METH_VARARGS, (char *)"TVectorFloat_SetSmallToBeZero(TVectorFloat self, float min) -> TVectorFloat"},
	 { (char *)"TVectorFloat_Unit", _wrap_TVectorFloat_Unit, METH_VARARGS, (char *)"TVectorFloat_Unit(TVectorFloat self) -> TVectorFloat"},
	 { (char *)"TVectorFloat_MakeUnit", _wrap_TVectorFloat_MakeUnit, METH_VARARGS, (char *)"TVectorFloat_MakeUnit(TVectorFloat self) -> TVectorFloat"},
	 { (char *)"TVectorFloat_MulAdd", _wrap_TVectorFloat_MulAdd, METH_VARARGS, (char *)"TVectorFloat_MulAdd(TVectorFloat self, TVectorFloat i, float a) -> TVectorFloat"},
	 { (char *)"TVectorFloat_MaxValueDistance", _wrap_TVectorFloat_MaxValueDistance, METH_VARARGS, (char *)"TVectorFloat_MaxValueDistance(TVectorFloat self, TVectorFloat i) -> float"},
	 { (char *)"TVectorFloat_CityBlockDistance", _wrap_TVectorFloat_CityBlockDistance, METH_VARARGS, (char *)"TVectorFloat_CityBlockDistance(TVectorFloat self, TVectorFloat i) -> float"},
	 { (char *)"TVectorFloat_SqrEuclidDistance", _wrap_TVectorFloat_SqrEuclidDistance, METH_VARARGS, (char *)"TVectorFloat_SqrEuclidDistance(TVectorFloat self, TVectorFloat i) -> float"},
	 { (char *)"TVectorFloat_EuclidDistance", _wrap_TVectorFloat_EuclidDistance, METH_VARARGS, (char *)"TVectorFloat_EuclidDistance(TVectorFloat self, TVectorFloat i) -> float"},
	 { (char *)"TVectorFloat_MaxIndex", _wrap_TVectorFloat_MaxIndex, METH_VARARGS, (char *)"TVectorFloat_MaxIndex(TVectorFloat self) -> IndexC"},
	 { (char *)"TVectorFloat_MaxAbsIndex", _wrap_TVectorFloat_MaxAbsIndex, METH_VARARGS, (char *)"TVectorFloat_MaxAbsIndex(TVectorFloat self) -> IndexC"},
	 { (char *)"TVectorFloat_MinIndex", _wrap_TVectorFloat_MinIndex, METH_VARARGS, (char *)"TVectorFloat_MinIndex(TVectorFloat self) -> IndexC"},
	 { (char *)"TVectorFloat_MinAbsIndex", _wrap_TVectorFloat_MinAbsIndex, METH_VARARGS, (char *)"TVectorFloat_MinAbsIndex(TVectorFloat self) -> IndexC"},
	 { (char *)"TVectorFloat___str__", _wrap_TVectorFloat___str__, METH_VARARGS, (char *)"TVectorFloat___str__(TVectorFloat self) -> char"},
	 { (char *)"new_TVectorFloat", _wrap_new_TVectorFloat, METH_VARARGS, (char *)"new_TVectorFloat() -> TVectorFloat"},
	 { (char *)"delete_TVectorFloat", _wrap_delete_TVectorFloat, METH_VARARGS, (char *)"delete_TVectorFloat(TVectorFloat self)"},
	 { (char *)"TVectorFloat_swigregister", TVectorFloat_swigregister, METH_VARARGS, NULL},
	 { (char *)"VectorC_ConstructAligned", _wrap_VectorC_ConstructAligned, METH_VARARGS, (char *)"VectorC_ConstructAligned(SizeT dim, UIntT align) -> VectorC"},
	 { (char *)"new_VectorC", _wrap_new_VectorC, METH_VARARGS, (char *)"\n"
		"VectorC()\n"
		"VectorC(SizeT size)\n"
		"VectorC(SArray1dReal oth)\n"
		"VectorC(TVectorReal oth)\n"
		"VectorC(SArray1dFloat oth)\n"
		"VectorC(RealT v1, RealT v2)\n"
		"VectorC(RealT v1, RealT v2, RealT v3)\n"
		"VectorC(RealT v1, RealT v2, RealT v3, RealT v4)\n"
		"VectorC(RealT v1, RealT v2, RealT v3, RealT v4, RealT v5)\n"
		"new_VectorC(RealT v1, RealT v2, RealT v3, RealT v4, RealT v5, RealT v6) -> VectorC\n"
		""},
	 { (char *)"VectorC_IsReal", _wrap_VectorC_IsReal, METH_VARARGS, (char *)"VectorC_IsReal(VectorC self) -> bool"},
	 { (char *)"VectorC___mul__", _wrap_VectorC___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(VectorC arr) -> VectorC\n"
		"VectorC___mul__(VectorC self, RealT number) -> VectorC\n"
		""},
	 { (char *)"VectorC___div__", _wrap_VectorC___div__, METH_VARARGS, (char *)"\n"
		"__div__(VectorC arr) -> VectorC\n"
		"VectorC___div__(VectorC self, RealT number) -> VectorC\n"
		""},
	 { (char *)"VectorC___add__", _wrap_VectorC___add__, METH_VARARGS, (char *)"\n"
		"__add__(VectorC arr) -> VectorC\n"
		"VectorC___add__(VectorC self, RealT number) -> VectorC\n"
		""},
	 { (char *)"VectorC___sub__", _wrap_VectorC___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(VectorC arr) -> VectorC\n"
		"VectorC___sub__(VectorC self, RealT number) -> VectorC\n"
		""},
	 { (char *)"VectorC___iadd__", _wrap_VectorC___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(VectorC arr) -> VectorC\n"
		"VectorC___iadd__(VectorC self, RealT number) -> VectorC\n"
		""},
	 { (char *)"VectorC___isub__", _wrap_VectorC___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(VectorC arr) -> VectorC\n"
		"VectorC___isub__(VectorC self, RealT number) -> VectorC\n"
		""},
	 { (char *)"VectorC___imul__", _wrap_VectorC___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(VectorC arr) -> VectorC\n"
		"VectorC___imul__(VectorC self, RealT number) -> VectorC\n"
		""},
	 { (char *)"VectorC___idiv__", _wrap_VectorC___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(VectorC arr) -> VectorC\n"
		"VectorC___idiv__(VectorC self, RealT number) -> VectorC\n"
		""},
	 { (char *)"VectorC_Join", _wrap_VectorC_Join, METH_VARARGS, (char *)"\n"
		"Join(VectorC Oth) -> VectorC\n"
		"VectorC_Join(VectorC self, RealT Oth) -> VectorC\n"
		""},
	 { (char *)"VectorC_Append", _wrap_VectorC_Append, METH_VARARGS, (char *)"\n"
		"Append(VectorC a) -> VectorC\n"
		"VectorC_Append(VectorC self, RealT a) -> VectorC\n"
		""},
	 { (char *)"VectorC_From", _wrap_VectorC_From, METH_VARARGS, (char *)"\n"
		"From(UIntT offset) -> VectorC\n"
		"VectorC_From(VectorC self, UIntT offset, UIntT size) -> VectorC\n"
		""},
	 { (char *)"VectorC_After", _wrap_VectorC_After, METH_VARARGS, (char *)"VectorC_After(VectorC self, UIntT offset) -> VectorC"},
	 { (char *)"VectorC_Before", _wrap_VectorC_Before, METH_VARARGS, (char *)"VectorC_Before(VectorC self, UIntT offset) -> VectorC"},
	 { (char *)"VectorC___eq__", _wrap_VectorC___eq__, METH_VARARGS, (char *)"VectorC___eq__(VectorC self, VectorC vv) -> bool"},
	 { (char *)"VectorC___ne__", _wrap_VectorC___ne__, METH_VARARGS, (char *)"VectorC___ne__(VectorC self, VectorC vv) -> bool"},
	 { (char *)"VectorC_Reciprocal", _wrap_VectorC_Reciprocal, METH_VARARGS, (char *)"VectorC_Reciprocal(VectorC self) -> VectorC"},
	 { (char *)"VectorC_TMul", _wrap_VectorC_TMul, METH_VARARGS, (char *)"VectorC_TMul(VectorC self, VectorC b) -> RealT"},
	 { (char *)"VectorC_Dot", _wrap_VectorC_Dot, METH_VARARGS, (char *)"VectorC_Dot(VectorC self, VectorC v) -> RealT"},
	 { (char *)"VectorC_Dot2", _wrap_VectorC_Dot2, METH_VARARGS, (char *)"VectorC_Dot2(VectorC self, VectorC v1, VectorC v2) -> RealT"},
	 { (char *)"VectorC_ElemMul", _wrap_VectorC_ElemMul, METH_VARARGS, (char *)"VectorC_ElemMul(VectorC self, VectorC v2, VectorC result)"},
	 { (char *)"VectorC_ElemSum", _wrap_VectorC_ElemSum, METH_VARARGS, (char *)"VectorC_ElemSum(VectorC self, VectorC v2, VectorC result)"},
	 { (char *)"VectorC_ElemSubtract", _wrap_VectorC_ElemSubtract, METH_VARARGS, (char *)"VectorC_ElemSubtract(VectorC self, VectorC v2, VectorC result)"},
	 { (char *)"VectorC_SetSmallToBeZero", _wrap_VectorC_SetSmallToBeZero, METH_VARARGS, (char *)"VectorC_SetSmallToBeZero(VectorC self, RealT min) -> VectorC"},
	 { (char *)"VectorC_OuterProduct", _wrap_VectorC_OuterProduct, METH_VARARGS, (char *)"\n"
		"OuterProduct(VectorC a) -> MatrixC\n"
		"OuterProduct(VectorC a, RealT b) -> MatrixC\n"
		"VectorC_OuterProduct(VectorC self) -> MatrixC\n"
		""},
	 { (char *)"VectorC_Unit", _wrap_VectorC_Unit, METH_VARARGS, (char *)"VectorC_Unit(VectorC self) -> VectorC"},
	 { (char *)"VectorC_MakeUnit", _wrap_VectorC_MakeUnit, METH_VARARGS, (char *)"VectorC_MakeUnit(VectorC self) -> VectorC"},
	 { (char *)"VectorC_MulAdd", _wrap_VectorC_MulAdd, METH_VARARGS, (char *)"VectorC_MulAdd(VectorC self, VectorC i, RealT a) -> VectorC"},
	 { (char *)"VectorC_MaxValueDistance", _wrap_VectorC_MaxValueDistance, METH_VARARGS, (char *)"VectorC_MaxValueDistance(VectorC self, VectorC i) -> RealT"},
	 { (char *)"VectorC_CityBlockDistance", _wrap_VectorC_CityBlockDistance, METH_VARARGS, (char *)"VectorC_CityBlockDistance(VectorC self, VectorC i) -> RealT"},
	 { (char *)"VectorC_SqrEuclidDistance", _wrap_VectorC_SqrEuclidDistance, METH_VARARGS, (char *)"VectorC_SqrEuclidDistance(VectorC self, VectorC i) -> RealT"},
	 { (char *)"VectorC_EuclidDistance", _wrap_VectorC_EuclidDistance, METH_VARARGS, (char *)"VectorC_EuclidDistance(VectorC self, VectorC i) -> RealT"},
	 { (char *)"delete_VectorC", _wrap_delete_VectorC, METH_VARARGS, (char *)"delete_VectorC(VectorC self)"},
	 { (char *)"VectorC_swigregister", VectorC_swigregister, METH_VARARGS, NULL},
	 { (char *)"RandomVector", _wrap_RandomVector, METH_VARARGS, (char *)"\n"
		"RandomVector(int n, RealT scale = 1.0) -> VectorC\n"
		"RandomVector(int n) -> VectorC\n"
		""},
	 { (char *)"SetZero", _wrap_SetZero, METH_VARARGS, (char *)"SetZero(VectorC vec)"},
	 { (char *)"Sigmoid", _wrap_Sigmoid, METH_VARARGS, (char *)"Sigmoid(VectorC z) -> VectorC"},
	 { (char *)"SigmoidIP", _wrap_SigmoidIP, METH_VARARGS, (char *)"SigmoidIP(VectorC z)"},
	 { (char *)"Log", _wrap_Log, METH_VARARGS, (char *)"Log(VectorC z) -> VectorC"},
	 { (char *)"LogIP", _wrap_LogIP, METH_VARARGS, (char *)"LogIP(VectorC z)"},
	 { (char *)"Exp", _wrap_Exp, METH_VARARGS, (char *)"Exp(VectorC z) -> VectorC"},
	 { (char *)"new_TMatrixReal", _wrap_new_TMatrixReal, METH_VARARGS, (char *)"\n"
		"TMatrixReal()\n"
		"TMatrixReal(SArray2dReal oth)\n"
		"TMatrixReal(TVectorReal vec)\n"
		"TMatrixReal(SizeT rows, SizeT cols)\n"
		"TMatrixReal(SizeT rows, SizeT cols, double data)\n"
		"TMatrixReal(SizeT rows, SizeT cols, double data, bool useCopy, \n"
		"    bool manageMemory = False)\n"
		"TMatrixReal(SizeT rows, SizeT cols, double data, bool useCopy)\n"
		"TMatrixReal(SizeT rows, SizeT cols, double data)\n"
		"TMatrixReal(SizeT rows, SizeT cols, SArray1dReal data, SizeT stride = 0)\n"
		"TMatrixReal(SizeT rows, SizeT cols, SArray1dReal data)\n"
		"TMatrixReal(double v1, double v2, double v3, double v4)\n"
		"new_TMatrixReal(double v1, double v2, double v3, double v4, double v5, \n"
		"    double v6, double v7, double v8, double v9) -> TMatrixReal\n"
		""},
	 { (char *)"TMatrixReal_Rows", _wrap_TMatrixReal_Rows, METH_VARARGS, (char *)"TMatrixReal_Rows(TMatrixReal self) -> SizeT"},
	 { (char *)"TMatrixReal_Cols", _wrap_TMatrixReal_Cols, METH_VARARGS, (char *)"TMatrixReal_Cols(TMatrixReal self) -> SizeT"},
	 { (char *)"TMatrixReal___mul__", _wrap_TMatrixReal___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(double val) -> TMatrixReal\n"
		"__mul__(TVectorReal vector) -> TVectorReal\n"
		"TMatrixReal___mul__(TMatrixReal self, TMatrixReal mat) -> TMatrixReal\n"
		""},
	 { (char *)"TMatrixReal_MulT", _wrap_TMatrixReal_MulT, METH_VARARGS, (char *)"TMatrixReal_MulT(TMatrixReal self, TMatrixReal B) -> TMatrixReal"},
	 { (char *)"TMatrixReal_TMul", _wrap_TMatrixReal_TMul, METH_VARARGS, (char *)"\n"
		"TMul(TMatrixReal B) -> TMatrixReal\n"
		"TMatrixReal_TMul(TMatrixReal self, TVectorReal vec) -> TVectorReal\n"
		""},
	 { (char *)"TMatrixReal_AAT", _wrap_TMatrixReal_AAT, METH_VARARGS, (char *)"TMatrixReal_AAT(TMatrixReal self) -> TMatrixReal"},
	 { (char *)"TMatrixReal_ATA", _wrap_TMatrixReal_ATA, METH_VARARGS, (char *)"TMatrixReal_ATA(TMatrixReal self) -> TMatrixReal"},
	 { (char *)"TMatrixReal_T", _wrap_TMatrixReal_T, METH_VARARGS, (char *)"TMatrixReal_T(TMatrixReal self) -> TMatrixReal"},
	 { (char *)"TMatrixReal_Identity", _wrap_TMatrixReal_Identity, METH_VARARGS, (char *)"TMatrixReal_Identity(UIntT n) -> TMatrixReal"},
	 { (char *)"TMatrixReal_SetDiagonal", _wrap_TMatrixReal_SetDiagonal, METH_VARARGS, (char *)"TMatrixReal_SetDiagonal(TMatrixReal self, TVectorReal d) -> TMatrixReal"},
	 { (char *)"TMatrixReal_AddDiagonal", _wrap_TMatrixReal_AddDiagonal, METH_VARARGS, (char *)"TMatrixReal_AddDiagonal(TMatrixReal self, TVectorReal d) -> TMatrixReal"},
	 { (char *)"TMatrixReal_SubMatrix", _wrap_TMatrixReal_SubMatrix, METH_VARARGS, (char *)"TMatrixReal_SubMatrix(TMatrixReal self, SizeT size1, SizeT size2) -> TMatrixReal"},
	 { (char *)"TMatrixReal_SumOfAbs", _wrap_TMatrixReal_SumOfAbs, METH_VARARGS, (char *)"TMatrixReal_SumOfAbs(TMatrixReal self) -> double"},
	 { (char *)"TMatrixReal_AddOuterProduct", _wrap_TMatrixReal_AddOuterProduct, METH_VARARGS, (char *)"\n"
		"AddOuterProduct(TVectorReal vec1, TVectorReal vec2) -> TMatrixReal\n"
		"TMatrixReal_AddOuterProduct(TMatrixReal self, TVectorReal vec1, TVectorReal vec2, \n"
		"    double a) -> TMatrixReal\n"
		""},
	 { (char *)"TMatrixReal_SetSmallToBeZero", _wrap_TMatrixReal_SetSmallToBeZero, METH_VARARGS, (char *)"TMatrixReal_SetSmallToBeZero(TMatrixReal self, double min) -> TMatrixReal"},
	 { (char *)"TMatrixReal_MulAdd", _wrap_TMatrixReal_MulAdd, METH_VARARGS, (char *)"TMatrixReal_MulAdd(TMatrixReal self, TMatrixReal i, double a) -> TMatrixReal"},
	 { (char *)"TMatrixReal_SwapRows", _wrap_TMatrixReal_SwapRows, METH_VARARGS, (char *)"TMatrixReal_SwapRows(TMatrixReal self, int i, int j)"},
	 { (char *)"delete_TMatrixReal", _wrap_delete_TMatrixReal, METH_VARARGS, (char *)"delete_TMatrixReal(TMatrixReal self)"},
	 { (char *)"TMatrixReal_swigregister", TMatrixReal_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TMatrixFloat", _wrap_new_TMatrixFloat, METH_VARARGS, (char *)"\n"
		"TMatrixFloat()\n"
		"TMatrixFloat(SArray2dFloat oth)\n"
		"TMatrixFloat(TVectorFloat vec)\n"
		"TMatrixFloat(SizeT rows, SizeT cols)\n"
		"TMatrixFloat(SizeT rows, SizeT cols, float data)\n"
		"TMatrixFloat(SizeT rows, SizeT cols, float data, bool useCopy, bool manageMemory = False)\n"
		"TMatrixFloat(SizeT rows, SizeT cols, float data, bool useCopy)\n"
		"TMatrixFloat(SizeT rows, SizeT cols, float data)\n"
		"TMatrixFloat(SizeT rows, SizeT cols, SArray1dFloat data, SizeT stride = 0)\n"
		"TMatrixFloat(SizeT rows, SizeT cols, SArray1dFloat data)\n"
		"TMatrixFloat(float v1, float v2, float v3, float v4)\n"
		"new_TMatrixFloat(float v1, float v2, float v3, float v4, float v5, float v6, \n"
		"    float v7, float v8, float v9) -> TMatrixFloat\n"
		""},
	 { (char *)"TMatrixFloat_Rows", _wrap_TMatrixFloat_Rows, METH_VARARGS, (char *)"TMatrixFloat_Rows(TMatrixFloat self) -> SizeT"},
	 { (char *)"TMatrixFloat_Cols", _wrap_TMatrixFloat_Cols, METH_VARARGS, (char *)"TMatrixFloat_Cols(TMatrixFloat self) -> SizeT"},
	 { (char *)"TMatrixFloat___mul__", _wrap_TMatrixFloat___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(float val) -> TMatrixFloat\n"
		"__mul__(TVectorFloat vector) -> TVectorFloat\n"
		"TMatrixFloat___mul__(TMatrixFloat self, TMatrixFloat mat) -> TMatrixFloat\n"
		""},
	 { (char *)"TMatrixFloat_MulT", _wrap_TMatrixFloat_MulT, METH_VARARGS, (char *)"TMatrixFloat_MulT(TMatrixFloat self, TMatrixFloat B) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_TMul", _wrap_TMatrixFloat_TMul, METH_VARARGS, (char *)"\n"
		"TMul(TMatrixFloat B) -> TMatrixFloat\n"
		"TMatrixFloat_TMul(TMatrixFloat self, TVectorFloat vec) -> TVectorFloat\n"
		""},
	 { (char *)"TMatrixFloat_AAT", _wrap_TMatrixFloat_AAT, METH_VARARGS, (char *)"TMatrixFloat_AAT(TMatrixFloat self) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_ATA", _wrap_TMatrixFloat_ATA, METH_VARARGS, (char *)"TMatrixFloat_ATA(TMatrixFloat self) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_T", _wrap_TMatrixFloat_T, METH_VARARGS, (char *)"TMatrixFloat_T(TMatrixFloat self) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_Identity", _wrap_TMatrixFloat_Identity, METH_VARARGS, (char *)"TMatrixFloat_Identity(UIntT n) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_SetDiagonal", _wrap_TMatrixFloat_SetDiagonal, METH_VARARGS, (char *)"TMatrixFloat_SetDiagonal(TMatrixFloat self, TVectorFloat d) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_AddDiagonal", _wrap_TMatrixFloat_AddDiagonal, METH_VARARGS, (char *)"TMatrixFloat_AddDiagonal(TMatrixFloat self, TVectorFloat d) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_SubMatrix", _wrap_TMatrixFloat_SubMatrix, METH_VARARGS, (char *)"TMatrixFloat_SubMatrix(TMatrixFloat self, SizeT size1, SizeT size2) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_SumOfAbs", _wrap_TMatrixFloat_SumOfAbs, METH_VARARGS, (char *)"TMatrixFloat_SumOfAbs(TMatrixFloat self) -> float"},
	 { (char *)"TMatrixFloat_AddOuterProduct", _wrap_TMatrixFloat_AddOuterProduct, METH_VARARGS, (char *)"\n"
		"AddOuterProduct(TVectorFloat vec1, TVectorFloat vec2) -> TMatrixFloat\n"
		"TMatrixFloat_AddOuterProduct(TMatrixFloat self, TVectorFloat vec1, TVectorFloat vec2, \n"
		"    float a) -> TMatrixFloat\n"
		""},
	 { (char *)"TMatrixFloat_SetSmallToBeZero", _wrap_TMatrixFloat_SetSmallToBeZero, METH_VARARGS, (char *)"TMatrixFloat_SetSmallToBeZero(TMatrixFloat self, float min) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_MulAdd", _wrap_TMatrixFloat_MulAdd, METH_VARARGS, (char *)"TMatrixFloat_MulAdd(TMatrixFloat self, TMatrixFloat i, float a) -> TMatrixFloat"},
	 { (char *)"TMatrixFloat_SwapRows", _wrap_TMatrixFloat_SwapRows, METH_VARARGS, (char *)"TMatrixFloat_SwapRows(TMatrixFloat self, int i, int j)"},
	 { (char *)"delete_TMatrixFloat", _wrap_delete_TMatrixFloat, METH_VARARGS, (char *)"delete_TMatrixFloat(TMatrixFloat self)"},
	 { (char *)"TMatrixFloat_swigregister", TMatrixFloat_swigregister, METH_VARARGS, NULL},
	 { (char *)"MatrixC_IsReal", _wrap_MatrixC_IsReal, METH_VARARGS, (char *)"MatrixC_IsReal(MatrixC self) -> bool"},
	 { (char *)"new_MatrixC", _wrap_new_MatrixC, METH_VARARGS, (char *)"\n"
		"MatrixC()\n"
		"MatrixC(VectorC vec)\n"
		"MatrixC(UIntT rows, UIntT cols)\n"
		"MatrixC(UIntT rows, UIntT cols, RealT data)\n"
		"MatrixC(UIntT rows, UIntT cols, RealT data)\n"
		"MatrixC(UIntT rows, UIntT cols, VectorC data)\n"
		"MatrixC(SizeT rows, SizeT cols, VectorC data)\n"
		"MatrixC(TMatrixReal oth)\n"
		"MatrixC(SArray2dReal oth)\n"
		"MatrixC(RealT v1, RealT v2, RealT v3, RealT v4)\n"
		"MatrixC(RealT v1, RealT v2, RealT v3, RealT v4, RealT v5, RealT v6, \n"
		"    RealT v7, RealT v8, RealT v9)\n"
		"new_MatrixC(SArray2dFloat oth) -> MatrixC\n"
		""},
	 { (char *)"MatrixC_Inverse", _wrap_MatrixC_Inverse, METH_VARARGS, (char *)"MatrixC_Inverse(MatrixC self) -> MatrixC"},
	 { (char *)"MatrixC_InverseIP", _wrap_MatrixC_InverseIP, METH_VARARGS, (char *)"\n"
		"InverseIP(RealT det) -> bool\n"
		"MatrixC_InverseIP(MatrixC self) -> bool\n"
		""},
	 { (char *)"MatrixC_PseudoInverse", _wrap_MatrixC_PseudoInverse, METH_VARARGS, (char *)"\n"
		"PseudoInverse(RealT thresh = 1e-5) -> MatrixC\n"
		"MatrixC_PseudoInverse(MatrixC self) -> MatrixC\n"
		""},
	 { (char *)"MatrixC_Det", _wrap_MatrixC_Det, METH_VARARGS, (char *)"MatrixC_Det(MatrixC self) -> RealT"},
	 { (char *)"MatrixC_NormaliseRows", _wrap_MatrixC_NormaliseRows, METH_VARARGS, (char *)"MatrixC_NormaliseRows(MatrixC self)"},
	 { (char *)"MatrixC_NormaliseColumns", _wrap_MatrixC_NormaliseColumns, METH_VARARGS, (char *)"MatrixC_NormaliseColumns(MatrixC self)"},
	 { (char *)"MatrixC_AsVector", _wrap_MatrixC_AsVector, METH_VARARGS, (char *)"\n"
		"AsVector(bool alwaysCopy = False) -> VectorC\n"
		"MatrixC_AsVector(MatrixC self) -> VectorC\n"
		""},
	 { (char *)"MatrixC___div__", _wrap_MatrixC___div__, METH_VARARGS, (char *)"\n"
		"__div__(MatrixC arr) -> MatrixC\n"
		"MatrixC___div__(MatrixC self, RealT number) -> MatrixC\n"
		""},
	 { (char *)"MatrixC___add__", _wrap_MatrixC___add__, METH_VARARGS, (char *)"\n"
		"__add__(MatrixC arr) -> MatrixC\n"
		"MatrixC___add__(MatrixC self, RealT number) -> MatrixC\n"
		""},
	 { (char *)"MatrixC___sub__", _wrap_MatrixC___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(MatrixC arr) -> MatrixC\n"
		"MatrixC___sub__(MatrixC self, RealT number) -> MatrixC\n"
		""},
	 { (char *)"MatrixC___iadd__", _wrap_MatrixC___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(MatrixC arr) -> MatrixC\n"
		"MatrixC___iadd__(MatrixC self, RealT number) -> MatrixC\n"
		""},
	 { (char *)"MatrixC___isub__", _wrap_MatrixC___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(MatrixC arr) -> MatrixC\n"
		"MatrixC___isub__(MatrixC self, RealT number) -> MatrixC\n"
		""},
	 { (char *)"MatrixC___imul__", _wrap_MatrixC___imul__, METH_VARARGS, (char *)"\n"
		"__imul__(MatrixC arr) -> MatrixC\n"
		"MatrixC___imul__(MatrixC self, RealT number) -> MatrixC\n"
		""},
	 { (char *)"MatrixC___idiv__", _wrap_MatrixC___idiv__, METH_VARARGS, (char *)"\n"
		"__idiv__(MatrixC arr) -> MatrixC\n"
		"MatrixC___idiv__(MatrixC self, RealT number) -> MatrixC\n"
		""},
	 { (char *)"MatrixC___eq__", _wrap_MatrixC___eq__, METH_VARARGS, (char *)"MatrixC___eq__(MatrixC self, MatrixC op) -> bool"},
	 { (char *)"MatrixC___ne__", _wrap_MatrixC___ne__, METH_VARARGS, (char *)"MatrixC___ne__(MatrixC self, MatrixC op) -> bool"},
	 { (char *)"MatrixC_SumOfSqr", _wrap_MatrixC_SumOfSqr, METH_VARARGS, (char *)"MatrixC_SumOfSqr(MatrixC self) -> RealT"},
	 { (char *)"MatrixC_Sum", _wrap_MatrixC_Sum, METH_VARARGS, (char *)"MatrixC_Sum(MatrixC self) -> RealT"},
	 { (char *)"MatrixC_SliceRow", _wrap_MatrixC_SliceRow, METH_VARARGS, (char *)"MatrixC_SliceRow(MatrixC self, IndexC i) -> VectorC"},
	 { (char *)"MatrixC_SetColumn", _wrap_MatrixC_SetColumn, METH_VARARGS, (char *)"\n"
		"SetColumn(IndexC i, VectorC val)\n"
		"MatrixC_SetColumn(MatrixC self, IndexC i, RealT val)\n"
		""},
	 { (char *)"MatrixC_SetRow", _wrap_MatrixC_SetRow, METH_VARARGS, (char *)"\n"
		"SetRow(IndexC i, VectorC val)\n"
		"MatrixC_SetRow(MatrixC self, IndexC i, RealT val)\n"
		""},
	 { (char *)"MatrixC_SetSubArray", _wrap_MatrixC_SetSubArray, METH_VARARGS, (char *)"MatrixC_SetSubArray(MatrixC self, Index2dC origin, MatrixC vals)"},
	 { (char *)"MatrixC_Hash", _wrap_MatrixC_Hash, METH_VARARGS, (char *)"MatrixC_Hash(MatrixC self) -> SizeT"},
	 { (char *)"MatrixC___mul__", _wrap_MatrixC___mul__, METH_VARARGS, (char *)"\n"
		"__mul__(MatrixC arr) -> MatrixC\n"
		"__mul__(RealT number) -> MatrixC\n"
		"MatrixC___mul__(MatrixC self, VectorC vector) -> VectorC\n"
		""},
	 { (char *)"MatrixC_MulT", _wrap_MatrixC_MulT, METH_VARARGS, (char *)"MatrixC_MulT(MatrixC self, MatrixC B) -> MatrixC"},
	 { (char *)"MatrixC_TMul", _wrap_MatrixC_TMul, METH_VARARGS, (char *)"\n"
		"TMul(MatrixC B) -> MatrixC\n"
		"MatrixC_TMul(MatrixC self, VectorC vec) -> VectorC\n"
		""},
	 { (char *)"MatrixC_AAT", _wrap_MatrixC_AAT, METH_VARARGS, (char *)"MatrixC_AAT(MatrixC self) -> MatrixC"},
	 { (char *)"MatrixC_ATA", _wrap_MatrixC_ATA, METH_VARARGS, (char *)"MatrixC_ATA(MatrixC self) -> MatrixC"},
	 { (char *)"MatrixC_T", _wrap_MatrixC_T, METH_VARARGS, (char *)"MatrixC_T(MatrixC self) -> MatrixC"},
	 { (char *)"MatrixC_Identity", _wrap_MatrixC_Identity, METH_VARARGS, (char *)"MatrixC_Identity(UIntT n) -> MatrixC"},
	 { (char *)"MatrixC_SetDiagonal", _wrap_MatrixC_SetDiagonal, METH_VARARGS, (char *)"MatrixC_SetDiagonal(MatrixC self, VectorC d) -> MatrixC"},
	 { (char *)"MatrixC_AddDiagonal", _wrap_MatrixC_AddDiagonal, METH_VARARGS, (char *)"MatrixC_AddDiagonal(MatrixC self, VectorC d) -> MatrixC"},
	 { (char *)"MatrixC_SubMatrix", _wrap_MatrixC_SubMatrix, METH_VARARGS, (char *)"MatrixC_SubMatrix(MatrixC self, SizeT size1, SizeT size2) -> MatrixC"},
	 { (char *)"MatrixC_AddOuterProduct", _wrap_MatrixC_AddOuterProduct, METH_VARARGS, (char *)"\n"
		"AddOuterProduct(TVectorFloat vec1, TVectorFloat vec2) -> TMatrixReal\n"
		"AddOuterProduct(TVectorFloat vec1, TVectorFloat vec2, float a) -> TMatrixReal\n"
		"AddOuterProduct(VectorC vec1, VectorC vec2) -> MatrixC\n"
		"MatrixC_AddOuterProduct(MatrixC self, VectorC vec1, VectorC vec2, RealT a) -> MatrixC\n"
		""},
	 { (char *)"MatrixC_SetSmallToBeZero", _wrap_MatrixC_SetSmallToBeZero, METH_VARARGS, (char *)"MatrixC_SetSmallToBeZero(MatrixC self, RealT min) -> MatrixC"},
	 { (char *)"MatrixC_MulAdd", _wrap_MatrixC_MulAdd, METH_VARARGS, (char *)"MatrixC_MulAdd(MatrixC self, MatrixC i, RealT a) -> MatrixC"},
	 { (char *)"delete_MatrixC", _wrap_delete_MatrixC, METH_VARARGS, (char *)"delete_MatrixC(MatrixC self)"},
	 { (char *)"MatrixC_swigregister", MatrixC_swigregister, METH_VARARGS, NULL},
	 { (char *)"SVD", _wrap_SVD, METH_VARARGS, (char *)"\n"
		"SVD(MatrixC M) -> VectorC\n"
		"SVD(MatrixC M, MatrixC u, MatrixC v) -> VectorC\n"
		""},
	 { (char *)"SVD_IP", _wrap_SVD_IP, METH_VARARGS, (char *)"\n"
		"SVD_IP(MatrixC M) -> VectorC\n"
		"SVD_IP(MatrixC M, MatrixC u, MatrixC v) -> VectorC\n"
		""},
	 { (char *)"EigenValues", _wrap_EigenValues, METH_VARARGS, (char *)"EigenValues(MatrixC M) -> VectorC"},
	 { (char *)"EigenValuesIP", _wrap_EigenValuesIP, METH_VARARGS, (char *)"EigenValuesIP(MatrixC M) -> VectorC"},
	 { (char *)"FastEigenValues", _wrap_FastEigenValues, METH_VARARGS, (char *)"FastEigenValues(MatrixC M) -> VectorC"},
	 { (char *)"EigenVectors", _wrap_EigenVectors, METH_VARARGS, (char *)"EigenVectors(MatrixC M, MatrixC E) -> VectorC"},
	 { (char *)"EigenVectorsIP", _wrap_EigenVectorsIP, METH_VARARGS, (char *)"EigenVectorsIP(MatrixC M) -> VectorC"},
	 { (char *)"FastEigenVectors", _wrap_FastEigenVectors, METH_VARARGS, (char *)"FastEigenVectors(MatrixC M) -> VectorC"},
	 { (char *)"MaxEigenValue", _wrap_MaxEigenValue, METH_VARARGS, (char *)"MaxEigenValue(MatrixC M, VectorC maxv) -> RealT"},
	 { (char *)"RandomMatrix", _wrap_RandomMatrix, METH_VARARGS, (char *)"\n"
		"RandomMatrix(int n, int m, RealT scale = 1) -> MatrixC\n"
		"RandomMatrix(int n, int m) -> MatrixC\n"
		""},
	 { (char *)"RandomSymmetricMatrix", _wrap_RandomSymmetricMatrix, METH_VARARGS, (char *)"\n"
		"RandomSymmetricMatrix(int n, RealT scale = 1) -> MatrixC\n"
		"RandomSymmetricMatrix(int n) -> MatrixC\n"
		""},
	 { (char *)"RandomPositiveDefiniteMatrix", _wrap_RandomPositiveDefiniteMatrix, METH_VARARGS, (char *)"RandomPositiveDefiniteMatrix(int n) -> MatrixC"},
	 { (char *)"new_MatrixRUTC", _wrap_new_MatrixRUTC, METH_VARARGS, (char *)"\n"
		"MatrixRUTC()\n"
		"MatrixRUTC(SizeT size)\n"
		"MatrixRUTC(MatrixC oth)\n"
		"new_MatrixRUTC(SArray2dReal oth) -> MatrixRUTC\n"
		""},
	 { (char *)"MatrixRUTC_Inverse", _wrap_MatrixRUTC_Inverse, METH_VARARGS, (char *)"MatrixRUTC_Inverse(MatrixRUTC self) -> MatrixRUTC"},
	 { (char *)"MatrixRUTC_InverseIP", _wrap_MatrixRUTC_InverseIP, METH_VARARGS, (char *)"MatrixRUTC_InverseIP(MatrixRUTC self) -> bool"},
	 { (char *)"MatrixRUTC_AddOuterProduct", _wrap_MatrixRUTC_AddOuterProduct, METH_VARARGS, (char *)"\n"
		"AddOuterProduct(VectorC vec)\n"
		"MatrixRUTC_AddOuterProduct(MatrixRUTC self, VectorC vec, RealT a)\n"
		""},
	 { (char *)"MatrixRUTC_SubtractOuterProduct", _wrap_MatrixRUTC_SubtractOuterProduct, METH_VARARGS, (char *)"\n"
		"SubtractOuterProduct(VectorC vec)\n"
		"MatrixRUTC_SubtractOuterProduct(MatrixRUTC self, VectorC vec, RealT a)\n"
		""},
	 { (char *)"MatrixRUTC___iadd__", _wrap_MatrixRUTC___iadd__, METH_VARARGS, (char *)"MatrixRUTC___iadd__(MatrixRUTC self, MatrixRUTC mat) -> MatrixRUTC"},
	 { (char *)"MatrixRUTC___isub__", _wrap_MatrixRUTC___isub__, METH_VARARGS, (char *)"MatrixRUTC___isub__(MatrixRUTC self, MatrixRUTC mat) -> MatrixRUTC"},
	 { (char *)"MatrixRUTC___imul__", _wrap_MatrixRUTC___imul__, METH_VARARGS, (char *)"MatrixRUTC___imul__(MatrixRUTC self, RealT val) -> MatrixRUTC"},
	 { (char *)"MatrixRUTC___idiv__", _wrap_MatrixRUTC___idiv__, METH_VARARGS, (char *)"MatrixRUTC___idiv__(MatrixRUTC self, RealT val) -> MatrixRUTC"},
	 { (char *)"MatrixRUTC_ZeroLowerLeft", _wrap_MatrixRUTC_ZeroLowerLeft, METH_VARARGS, (char *)"MatrixRUTC_ZeroLowerLeft(MatrixRUTC self)"},
	 { (char *)"MatrixRUTC_MakeSymmetric", _wrap_MatrixRUTC_MakeSymmetric, METH_VARARGS, (char *)"MatrixRUTC_MakeSymmetric(MatrixRUTC self)"},
	 { (char *)"MatrixRUTC_Det", _wrap_MatrixRUTC_Det, METH_VARARGS, (char *)"MatrixRUTC_Det(MatrixRUTC self) -> RealT"},
	 { (char *)"delete_MatrixRUTC", _wrap_delete_MatrixRUTC, METH_VARARGS, (char *)"delete_MatrixRUTC(MatrixRUTC self)"},
	 { (char *)"MatrixRUTC_swigregister", MatrixRUTC_swigregister, METH_VARARGS, NULL},
	 { (char *)"OuterProductRUT", _wrap_OuterProductRUT, METH_VARARGS, (char *)"\n"
		"OuterProductRUT(VectorC vec) -> MatrixRUTC\n"
		"OuterProductRUT(VectorC vec, RealT a) -> MatrixRUTC\n"
		""},
	 { (char *)"SolveIP", _wrap_SolveIP, METH_VARARGS, (char *)"\n"
		"SolveIP(MatrixC A, VectorC b) -> bool\n"
		"SolveIP(MatrixC A, MatrixC B) -> bool\n"
		"SolveIP(MatrixRUTC A, VectorC b) -> bool\n"
		""},
	 { (char *)"Solve", _wrap_Solve, METH_VARARGS, (char *)"\n"
		"Solve(MatrixC A, VectorC b) -> VectorC\n"
		"Solve(MatrixC A, MatrixC B) -> MatrixC\n"
		"Solve(MatrixRUTC A, VectorC b) -> VectorC\n"
		""},
	 { (char *)"new_VectorMatrixC", _wrap_new_VectorMatrixC, METH_VARARGS, (char *)"\n"
		"VectorMatrixC()\n"
		"VectorMatrixC(UIntT dim)\n"
		"VectorMatrixC(VectorC vec, MatrixC mat)\n"
		"new_VectorMatrixC(VectorMatrixC vm) -> VectorMatrixC\n"
		""},
	 { (char *)"VectorMatrixC_Vector", _wrap_VectorMatrixC_Vector, METH_VARARGS, (char *)"\n"
		"Vector() -> VectorC\n"
		"VectorMatrixC_Vector(VectorMatrixC self) -> VectorC\n"
		""},
	 { (char *)"VectorMatrixC_Matrix", _wrap_VectorMatrixC_Matrix, METH_VARARGS, (char *)"\n"
		"Matrix() -> MatrixC\n"
		"VectorMatrixC_Matrix(VectorMatrixC self) -> MatrixC\n"
		""},
	 { (char *)"VectorMatrixC_Copy", _wrap_VectorMatrixC_Copy, METH_VARARGS, (char *)"VectorMatrixC_Copy(VectorMatrixC self) -> VectorMatrixC"},
	 { (char *)"VectorMatrixC_SetZero", _wrap_VectorMatrixC_SetZero, METH_VARARGS, (char *)"VectorMatrixC_SetZero(VectorMatrixC self)"},
	 { (char *)"VectorMatrixC_Sort", _wrap_VectorMatrixC_Sort, METH_VARARGS, (char *)"VectorMatrixC_Sort(VectorMatrixC self)"},
	 { (char *)"VectorMatrixC___str__", _wrap_VectorMatrixC___str__, METH_VARARGS, (char *)"VectorMatrixC___str__(VectorMatrixC self) -> char"},
	 { (char *)"delete_VectorMatrixC", _wrap_delete_VectorMatrixC, METH_VARARGS, (char *)"delete_VectorMatrixC(VectorMatrixC self)"},
	 { (char *)"VectorMatrixC_swigregister", VectorMatrixC_swigregister, METH_VARARGS, NULL},
	 { (char *)"MeanCovarianceC_Copy", _wrap_MeanCovarianceC_Copy, METH_VARARGS, (char *)"MeanCovarianceC_Copy(MeanCovarianceC self) -> MeanCovarianceC"},
	 { (char *)"new_MeanCovarianceC", _wrap_new_MeanCovarianceC, METH_VARARGS, (char *)"\n"
		"MeanCovarianceC()\n"
		"MeanCovarianceC(MeanCovarianceC meanCov)\n"
		"MeanCovarianceC(SizeT n)\n"
		"MeanCovarianceC(unsigned int n)\n"
		"MeanCovarianceC(VectorC point)\n"
		"MeanCovarianceC(RealT n, VectorC mean, MatrixC ncov)\n"
		"MeanCovarianceC(SArray1dVectorC data, bool sampleStatistics = True)\n"
		"new_MeanCovarianceC(SArray1dVectorC data) -> MeanCovarianceC\n"
		""},
	 { (char *)"MeanCovarianceC_Number", _wrap_MeanCovarianceC_Number, METH_VARARGS, (char *)"MeanCovarianceC_Number(MeanCovarianceC self) -> RealT"},
	 { (char *)"MeanCovarianceC_Mean", _wrap_MeanCovarianceC_Mean, METH_VARARGS, (char *)"\n"
		"Mean() -> VectorC\n"
		"MeanCovarianceC_Mean(MeanCovarianceC self) -> VectorC\n"
		""},
	 { (char *)"MeanCovarianceC_Covariance", _wrap_MeanCovarianceC_Covariance, METH_VARARGS, (char *)"\n"
		"Covariance() -> MatrixC\n"
		"MeanCovarianceC_Covariance(MeanCovarianceC self) -> MatrixC\n"
		""},
	 { (char *)"MeanCovarianceC_SetZero", _wrap_MeanCovarianceC_SetZero, METH_VARARGS, (char *)"MeanCovarianceC_SetZero(MeanCovarianceC self) -> MeanCovarianceC"},
	 { (char *)"MeanCovarianceC___iadd__", _wrap_MeanCovarianceC___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(VectorC point) -> MeanCovarianceC\n"
		"MeanCovarianceC___iadd__(MeanCovarianceC self, MeanCovarianceC meanCov) -> MeanCovarianceC\n"
		""},
	 { (char *)"MeanCovarianceC___isub__", _wrap_MeanCovarianceC___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(VectorC point) -> MeanCovarianceC\n"
		"MeanCovarianceC___isub__(MeanCovarianceC self, MeanCovarianceC meanCov) -> MeanCovarianceC\n"
		""},
	 { (char *)"MeanCovarianceC_Add", _wrap_MeanCovarianceC_Add, METH_VARARGS, (char *)"MeanCovarianceC_Add(MeanCovarianceC self, VectorC point, VectorC var) -> MeanCovarianceC"},
	 { (char *)"MeanCovarianceC_Remove", _wrap_MeanCovarianceC_Remove, METH_VARARGS, (char *)"MeanCovarianceC_Remove(MeanCovarianceC self, VectorC point, VectorC var) -> MeanCovarianceC"},
	 { (char *)"MeanCovarianceC_SetSum", _wrap_MeanCovarianceC_SetSum, METH_VARARGS, (char *)"MeanCovarianceC_SetSum(MeanCovarianceC self, MeanCovarianceC meanCov1, MeanCovarianceC meanCov2) -> MeanCovarianceC"},
	 { (char *)"MeanCovarianceC___mul__", _wrap_MeanCovarianceC___mul__, METH_VARARGS, (char *)"MeanCovarianceC___mul__(MeanCovarianceC self, MeanCovarianceC oth) -> MeanCovarianceC"},
	 { (char *)"MeanCovarianceC_Gauss", _wrap_MeanCovarianceC_Gauss, METH_VARARGS, (char *)"MeanCovarianceC_Gauss(MeanCovarianceC self, VectorC vec) -> RealT"},
	 { (char *)"MeanCovarianceC_MahalanobisDistance", _wrap_MeanCovarianceC_MahalanobisDistance, METH_VARARGS, (char *)"MeanCovarianceC_MahalanobisDistance(MeanCovarianceC self, VectorC vec) -> RealT"},
	 { (char *)"MeanCovarianceC_ClearCache", _wrap_MeanCovarianceC_ClearCache, METH_VARARGS, (char *)"MeanCovarianceC_ClearCache(MeanCovarianceC self)"},
	 { (char *)"MeanCovarianceC_Hash", _wrap_MeanCovarianceC_Hash, METH_VARARGS, (char *)"MeanCovarianceC_Hash(MeanCovarianceC self) -> UIntT"},
	 { (char *)"MeanCovarianceC___str__", _wrap_MeanCovarianceC___str__, METH_VARARGS, (char *)"MeanCovarianceC___str__(MeanCovarianceC self) -> char"},
	 { (char *)"delete_MeanCovarianceC", _wrap_delete_MeanCovarianceC, METH_VARARGS, (char *)"delete_MeanCovarianceC(MeanCovarianceC self)"},
	 { (char *)"MeanCovarianceC_swigregister", MeanCovarianceC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Affine2dC", _wrap_new_Affine2dC, METH_VARARGS, (char *)"new_Affine2dC() -> Affine2dC"},
	 { (char *)"delete_Affine2dC", _wrap_delete_Affine2dC, METH_VARARGS, (char *)"delete_Affine2dC(Affine2dC self)"},
	 { (char *)"Affine2dC_swigregister", Affine2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"DateC_NowUTC", _wrap_DateC_NowUTC, METH_VARARGS, (char *)"DateC_NowUTC() -> DateC"},
	 { (char *)"DateC_NowLocal", _wrap_DateC_NowLocal, METH_VARARGS, (char *)"DateC_NowLocal() -> DateC"},
	 { (char *)"DateC_NowVirtual", _wrap_DateC_NowVirtual, METH_VARARGS, (char *)"DateC_NowVirtual() -> DateC"},
	 { (char *)"DateC_TimeZoneOffset", _wrap_DateC_TimeZoneOffset, METH_VARARGS, (char *)"DateC_TimeZoneOffset() -> DateC"},
	 { (char *)"new_DateC", _wrap_new_DateC, METH_VARARGS, (char *)"\n"
		"DateC()\n"
		"DateC(bool setval, bool useVirt = False)\n"
		"DateC(bool setval)\n"
		"DateC(RealT val)\n"
		"DateC(IntT year, IntT month, IntT day, IntT hour = 0, IntT min = 0, \n"
		"    IntT sec = 0, IntT usec = 0, bool useLocalTimeZone = False)\n"
		"DateC(IntT year, IntT month, IntT day, IntT hour = 0, IntT min = 0, \n"
		"    IntT sec = 0, IntT usec = 0)\n"
		"DateC(IntT year, IntT month, IntT day, IntT hour = 0, IntT min = 0, \n"
		"    IntT sec = 0)\n"
		"DateC(IntT year, IntT month, IntT day, IntT hour = 0, IntT min = 0)\n"
		"DateC(IntT year, IntT month, IntT day, IntT hour = 0)\n"
		"DateC(IntT year, IntT month, IntT day)\n"
		"DateC(long xsec, long xusec)\n"
		"DateC(DateC val)\n"
		"new_DateC(StringC str) -> DateC\n"
		""},
	 { (char *)"DateC_IsLeapYear", _wrap_DateC_IsLeapYear, METH_VARARGS, (char *)"DateC_IsLeapYear(int year) -> bool"},
	 { (char *)"DateC_YearToDaysSince1970", _wrap_DateC_YearToDaysSince1970, METH_VARARGS, (char *)"DateC_YearToDaysSince1970(int year) -> int"},
	 { (char *)"DateC_IsValid", _wrap_DateC_IsValid, METH_VARARGS, (char *)"DateC_IsValid(DateC self) -> bool"},
	 { (char *)"DateC_IsZero", _wrap_DateC_IsZero, METH_VARARGS, (char *)"DateC_IsZero(DateC self) -> bool"},
	 { (char *)"DateC_SetInvalid", _wrap_DateC_SetInvalid, METH_VARARGS, (char *)"DateC_SetInvalid(DateC self)"},
	 { (char *)"DateC_SetToNow", _wrap_DateC_SetToNow, METH_VARARGS, (char *)"\n"
		"SetToNow(bool useVirt = False)\n"
		"DateC_SetToNow(DateC self)\n"
		""},
	 { (char *)"DateC_MaxUSeconds", _wrap_DateC_MaxUSeconds, METH_VARARGS, (char *)"DateC_MaxUSeconds(DateC self) -> long"},
	 { (char *)"DateC_Resolution", _wrap_DateC_Resolution, METH_VARARGS, (char *)"DateC_Resolution(DateC self) -> long"},
	 { (char *)"DateC_NormalisePos", _wrap_DateC_NormalisePos, METH_VARARGS, (char *)"DateC_NormalisePos(DateC self)"},
	 { (char *)"DateC_NormaliseNeg", _wrap_DateC_NormaliseNeg, METH_VARARGS, (char *)"DateC_NormaliseNeg(DateC self)"},
	 { (char *)"DateC___eq__", _wrap_DateC___eq__, METH_VARARGS, (char *)"DateC___eq__(DateC self, DateC oth) -> bool"},
	 { (char *)"DateC___ne__", _wrap_DateC___ne__, METH_VARARGS, (char *)"DateC___ne__(DateC self, DateC oth) -> bool"},
	 { (char *)"DateC___gt__", _wrap_DateC___gt__, METH_VARARGS, (char *)"DateC___gt__(DateC self, DateC oth) -> bool"},
	 { (char *)"DateC___lt__", _wrap_DateC___lt__, METH_VARARGS, (char *)"DateC___lt__(DateC self, DateC oth) -> bool"},
	 { (char *)"DateC___ge__", _wrap_DateC___ge__, METH_VARARGS, (char *)"DateC___ge__(DateC self, DateC oth) -> bool"},
	 { (char *)"DateC___le__", _wrap_DateC___le__, METH_VARARGS, (char *)"DateC___le__(DateC self, DateC oth) -> bool"},
	 { (char *)"DateC___add__", _wrap_DateC___add__, METH_VARARGS, (char *)"DateC___add__(DateC self, DateC oth) -> DateC"},
	 { (char *)"DateC___sub__", _wrap_DateC___sub__, METH_VARARGS, (char *)"DateC___sub__(DateC self, DateC oth) -> DateC"},
	 { (char *)"DateC___isub__", _wrap_DateC___isub__, METH_VARARGS, (char *)"\n"
		"__isub__(DateC val) -> DateC\n"
		"DateC___isub__(DateC self, double val) -> DateC\n"
		""},
	 { (char *)"DateC___iadd__", _wrap_DateC___iadd__, METH_VARARGS, (char *)"\n"
		"__iadd__(DateC val) -> DateC\n"
		"DateC___iadd__(DateC self, double val) -> DateC\n"
		""},
	 { (char *)"DateC_Text", _wrap_DateC_Text, METH_VARARGS, (char *)"DateC_Text(DateC self) -> StringC"},
	 { (char *)"DateC_ODBC", _wrap_DateC_ODBC, METH_VARARGS, (char *)"\n"
		"ODBC(bool convertUTCToLocal = False) -> StringC\n"
		"DateC_ODBC(DateC self) -> StringC\n"
		""},
	 { (char *)"DateC_SetODBC", _wrap_DateC_SetODBC, METH_VARARGS, (char *)"DateC_SetODBC(DateC self, StringC odbcStr) -> bool"},
	 { (char *)"DateC_CTime", _wrap_DateC_CTime, METH_VARARGS, (char *)"\n"
		"CTime(bool convertUTCToLocal = False) -> StringC\n"
		"DateC_CTime(DateC self) -> StringC\n"
		""},
	 { (char *)"DateC_CTimeShort", _wrap_DateC_CTimeShort, METH_VARARGS, (char *)"\n"
		"CTimeShort(bool convertUTCToLocal = False) -> StringC\n"
		"DateC_CTimeShort(DateC self) -> StringC\n"
		""},
	 { (char *)"DateC_USeconds", _wrap_DateC_USeconds, METH_VARARGS, (char *)"DateC_USeconds(DateC self) -> long"},
	 { (char *)"DateC_TotalSeconds", _wrap_DateC_TotalSeconds, METH_VARARGS, (char *)"DateC_TotalSeconds(DateC self) -> long"},
	 { (char *)"DateC_Double", _wrap_DateC_Double, METH_VARARGS, (char *)"DateC_Double(DateC self) -> double"},
	 { (char *)"DateC_Seconds", _wrap_DateC_Seconds, METH_VARARGS, (char *)"\n"
		"Seconds(bool convertUTCToLocal = False) -> IntT\n"
		"DateC_Seconds(DateC self) -> IntT\n"
		""},
	 { (char *)"DateC_Minute", _wrap_DateC_Minute, METH_VARARGS, (char *)"\n"
		"Minute(bool convertUTCToLocal = False) -> IntT\n"
		"DateC_Minute(DateC self) -> IntT\n"
		""},
	 { (char *)"DateC_Hour", _wrap_DateC_Hour, METH_VARARGS, (char *)"\n"
		"Hour(bool convertUTCToLocal = False) -> IntT\n"
		"DateC_Hour(DateC self) -> IntT\n"
		""},
	 { (char *)"DateC_Month", _wrap_DateC_Month, METH_VARARGS, (char *)"\n"
		"Month(bool convertUTCToLocal = False) -> IntT\n"
		"DateC_Month(DateC self) -> IntT\n"
		""},
	 { (char *)"DateC_Year", _wrap_DateC_Year, METH_VARARGS, (char *)"\n"
		"Year(bool convertUTCToLocal = False) -> IntT\n"
		"DateC_Year(DateC self) -> IntT\n"
		""},
	 { (char *)"DateC_DayInMonth", _wrap_DateC_DayInMonth, METH_VARARGS, (char *)"\n"
		"DayInMonth(bool convertUTCToLocal = False) -> IntT\n"
		"DateC_DayInMonth(DateC self) -> IntT\n"
		""},
	 { (char *)"DateC_DayInYear", _wrap_DateC_DayInYear, METH_VARARGS, (char *)"\n"
		"DayInYear(bool convertUTCToLocal = False) -> IntT\n"
		"DateC_DayInYear(DateC self) -> IntT\n"
		""},
	 { (char *)"DateC_DayInWeek", _wrap_DateC_DayInWeek, METH_VARARGS, (char *)"\n"
		"DayInWeek(bool convertUTCToLocal = False) -> IntT\n"
		"DateC_DayInWeek(DateC self) -> IntT\n"
		""},
	 { (char *)"DateC_TextDayInWeek", _wrap_DateC_TextDayInWeek, METH_VARARGS, (char *)"\n"
		"TextDayInWeek(bool convertUTCToLocal = False) -> StringC\n"
		"DateC_TextDayInWeek(DateC self) -> StringC\n"
		""},
	 { (char *)"DateC_DaylightSaving", _wrap_DateC_DaylightSaving, METH_VARARGS, (char *)"DateC_DaylightSaving(DateC self) -> bool"},
	 { (char *)"DateC_Wait", _wrap_DateC_Wait, METH_VARARGS, (char *)"DateC_Wait(DateC self) -> bool"},
	 { (char *)"delete_DateC", _wrap_delete_DateC, METH_VARARGS, (char *)"delete_DateC(DateC self)"},
	 { (char *)"DateC_swigregister", DateC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_HashInt64Int64C", _wrap_new_HashInt64Int64C, METH_VARARGS, (char *)"\n"
		"HashInt64Int64C(UIntT nBins = 23)\n"
		"new_HashInt64Int64C() -> HashInt64Int64C\n"
		""},
	 { (char *)"HashInt64Int64C_Lookup", _wrap_HashInt64Int64C_Lookup, METH_VARARGS, (char *)"HashInt64Int64C_Lookup(HashInt64Int64C self, long key) -> bool"},
	 { (char *)"HashInt64Int64C_Update", _wrap_HashInt64Int64C_Update, METH_VARARGS, (char *)"\n"
		"Update(long key, long data) -> bool\n"
		"HashInt64Int64C_Update(HashInt64Int64C self, long key) -> long\n"
		""},
	 { (char *)"HashInt64Int64C_Insert", _wrap_HashInt64Int64C_Insert, METH_VARARGS, (char *)"HashInt64Int64C_Insert(HashInt64Int64C self, long key, long data) -> bool"},
	 { (char *)"HashInt64Int64C_Access", _wrap_HashInt64Int64C_Access, METH_VARARGS, (char *)"\n"
		"Access(long key, long default = long()) -> long\n"
		"HashInt64Int64C_Access(HashInt64Int64C self, long key) -> long\n"
		""},
	 { (char *)"HashInt64Int64C_AccessCopy", _wrap_HashInt64Int64C_AccessCopy, METH_VARARGS, (char *)"\n"
		"AccessCopy(long key, long default = long()) -> long\n"
		"HashInt64Int64C_AccessCopy(HashInt64Int64C self, long key) -> long\n"
		""},
	 { (char *)"HashInt64Int64C_Del", _wrap_HashInt64Int64C_Del, METH_VARARGS, (char *)"\n"
		"Del(long key, bool allowResize = True) -> bool\n"
		"HashInt64Int64C_Del(HashInt64Int64C self, long key) -> bool\n"
		""},
	 { (char *)"HashInt64Int64C_Get", _wrap_HashInt64Int64C_Get, METH_VARARGS, (char *)"\n"
		"Get(long key, bool allowResize = True) -> long\n"
		"HashInt64Int64C_Get(HashInt64Int64C self, long key) -> long\n"
		""},
	 { (char *)"HashInt64Int64C_IsElm", _wrap_HashInt64Int64C_IsElm, METH_VARARGS, (char *)"HashInt64Int64C_IsElm(HashInt64Int64C self, long key) -> bool"},
	 { (char *)"HashInt64Int64C_Empty", _wrap_HashInt64Int64C_Empty, METH_VARARGS, (char *)"HashInt64Int64C_Empty(HashInt64Int64C self)"},
	 { (char *)"HashInt64Int64C_Bins", _wrap_HashInt64Int64C_Bins, METH_VARARGS, (char *)"HashInt64Int64C_Bins(HashInt64Int64C self) -> UIntT"},
	 { (char *)"HashInt64Int64C_Resize", _wrap_HashInt64Int64C_Resize, METH_VARARGS, (char *)"HashInt64Int64C_Resize(HashInt64Int64C self, SizeT newSize)"},
	 { (char *)"delete_HashInt64Int64C", _wrap_delete_HashInt64Int64C, METH_VARARGS, (char *)"delete_HashInt64Int64C(HashInt64Int64C self)"},
	 { (char *)"HashInt64Int64C_swigregister", HashInt64Int64C_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_HashInt64Int64IterC", _wrap_new_HashInt64Int64IterC, METH_VARARGS, (char *)"\n"
		"HashInt64Int64IterC()\n"
		"HashInt64Int64IterC(HashInt64Int64C nTab)\n"
		"new_HashInt64Int64IterC(HashInt64Int64IterC oth) -> HashInt64Int64IterC\n"
		""},
	 { (char *)"HashInt64Int64IterC_First", _wrap_HashInt64Int64IterC_First, METH_VARARGS, (char *)"HashInt64Int64IterC_First(HashInt64Int64IterC self) -> bool"},
	 { (char *)"HashInt64Int64IterC_Next", _wrap_HashInt64Int64IterC_Next, METH_VARARGS, (char *)"HashInt64Int64IterC_Next(HashInt64Int64IterC self) -> bool"},
	 { (char *)"HashInt64Int64IterC_IsElm", _wrap_HashInt64Int64IterC_IsElm, METH_VARARGS, (char *)"HashInt64Int64IterC_IsElm(HashInt64Int64IterC self) -> bool"},
	 { (char *)"HashInt64Int64IterC_Key", _wrap_HashInt64Int64IterC_Key, METH_VARARGS, (char *)"HashInt64Int64IterC_Key(HashInt64Int64IterC self) -> long"},
	 { (char *)"HashInt64Int64IterC_Data", _wrap_HashInt64Int64IterC_Data, METH_VARARGS, (char *)"\n"
		"Data() -> long\n"
		"HashInt64Int64IterC_Data(HashInt64Int64IterC self) -> long\n"
		""},
	 { (char *)"HashInt64Int64IterC_Del", _wrap_HashInt64Int64IterC_Del, METH_VARARGS, (char *)"HashInt64Int64IterC_Del(HashInt64Int64IterC self) -> bool"},
	 { (char *)"delete_HashInt64Int64IterC", _wrap_delete_HashInt64Int64IterC, METH_VARARGS, (char *)"delete_HashInt64Int64IterC(HashInt64Int64IterC self)"},
	 { (char *)"HashInt64Int64IterC_swigregister", HashInt64Int64IterC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DPIPortImageByteC", _wrap_new_DPIPortImageByteC, METH_VARARGS, (char *)"new_DPIPortImageByteC() -> DPIPortImageByteC"},
	 { (char *)"DPIPortImageByteC_Get", _wrap_DPIPortImageByteC_Get, METH_VARARGS, (char *)"DPIPortImageByteC_Get(DPIPortImageByteC self, ImageByteC buff) -> bool"},
	 { (char *)"DPIPortImageByteC_SetAttr", _wrap_DPIPortImageByteC_SetAttr, METH_VARARGS, (char *)"DPIPortImageByteC_SetAttr(DPIPortImageByteC self, StringC attrName, StringC attrValue) -> bool"},
	 { (char *)"DPIPortImageByteC_GetAttr", _wrap_DPIPortImageByteC_GetAttr, METH_VARARGS, (char *)"DPIPortImageByteC_GetAttr(DPIPortImageByteC self, StringC attrName, StringC attrValue) -> bool"},
	 { (char *)"delete_DPIPortImageByteC", _wrap_delete_DPIPortImageByteC, METH_VARARGS, (char *)"delete_DPIPortImageByteC(DPIPortImageByteC self)"},
	 { (char *)"DPIPortImageByteC_swigregister", DPIPortImageByteC_swigregister, METH_VARARGS, NULL},
	 { (char *)"OpenISequence", _wrap_OpenISequence, METH_VARARGS, (char *)"OpenISequence(DPIPortImageByteC arg0, StringC arg1) -> bool"},
	 { (char *)"SysLogOpen", _wrap_SysLogOpen, METH_VARARGS, (char *)"\n"
		"SysLogOpen(StringC name, bool logPid = False, bool sendStdErr = True, \n"
		"    bool stdErrOnly = False, int facility = -1, \n"
		"    bool logFileLine = False) -> bool\n"
		"SysLogOpen(StringC name, bool logPid = False, bool sendStdErr = True, \n"
		"    bool stdErrOnly = False, int facility = -1) -> bool\n"
		"SysLogOpen(StringC name, bool logPid = False, bool sendStdErr = True, \n"
		"    bool stdErrOnly = False) -> bool\n"
		"SysLogOpen(StringC name, bool logPid = False, bool sendStdErr = True) -> bool\n"
		"SysLogOpen(StringC name, bool logPid = False) -> bool\n"
		"SysLogOpen(StringC name) -> bool\n"
		""},
	 { (char *)"FunctionC_Apply", _wrap_FunctionC_Apply, METH_VARARGS, (char *)"FunctionC_Apply(FunctionC self, VectorC data) -> VectorC"},
	 { (char *)"FunctionC_InputSize", _wrap_FunctionC_InputSize, METH_VARARGS, (char *)"FunctionC_InputSize(FunctionC self) -> UIntT"},
	 { (char *)"FunctionC_OutputSize", _wrap_FunctionC_OutputSize, METH_VARARGS, (char *)"FunctionC_OutputSize(FunctionC self) -> UIntT"},
	 { (char *)"FunctionC___str__", _wrap_FunctionC___str__, METH_VARARGS, (char *)"FunctionC___str__(FunctionC self) -> char"},
	 { (char *)"new_FunctionC", _wrap_new_FunctionC, METH_VARARGS, (char *)"new_FunctionC() -> FunctionC"},
	 { (char *)"delete_FunctionC", _wrap_delete_FunctionC, METH_VARARGS, (char *)"delete_FunctionC(FunctionC self)"},
	 { (char *)"FunctionC_swigregister", FunctionC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SampleOfUInt", _wrap_new_SampleOfUInt, METH_VARARGS, (char *)"\n"
		"SampleOfUInt(SizeT maxSize = 10)\n"
		"SampleOfUInt()\n"
		"new_SampleOfUInt(SArray1dUInt dat) -> SampleOfUInt\n"
		""},
	 { (char *)"SampleOfUInt_Copy", _wrap_SampleOfUInt_Copy, METH_VARARGS, (char *)"SampleOfUInt_Copy(SampleOfUInt self) -> SampleOfUInt"},
	 { (char *)"SampleOfUInt_CompactFrom", _wrap_SampleOfUInt_CompactFrom, METH_VARARGS, (char *)"\n"
		"CompactFrom(IndexC start, SizeT size) -> SampleOfUInt\n"
		"SampleOfUInt_CompactFrom(SampleOfUInt self, IndexC start, SizeT size) -> SampleOfUInt\n"
		""},
	 { (char *)"SampleOfUInt_ExtractEntry", _wrap_SampleOfUInt_ExtractEntry, METH_VARARGS, (char *)"SampleOfUInt_ExtractEntry(SampleOfUInt self, int ind) -> unsigned int"},
	 { (char *)"SampleOfUInt_Fill", _wrap_SampleOfUInt_Fill, METH_VARARGS, (char *)"SampleOfUInt_Fill(SampleOfUInt self, unsigned int value)"},
	 { (char *)"SampleOfUInt_Append", _wrap_SampleOfUInt_Append, METH_VARARGS, (char *)"\n"
		"Append(unsigned int dat) -> IndexC\n"
		"SampleOfUInt_Append(SampleOfUInt self, SampleOfUInt newData) -> IndexC\n"
		""},
	 { (char *)"SampleOfUInt___iadd__", _wrap_SampleOfUInt___iadd__, METH_VARARGS, (char *)"SampleOfUInt___iadd__(SampleOfUInt self, unsigned int dat) -> IndexC"},
	 { (char *)"SampleOfUInt_Size", _wrap_SampleOfUInt_Size, METH_VARARGS, (char *)"SampleOfUInt_Size(SampleOfUInt self) -> SizeT"},
	 { (char *)"SampleOfUInt_PickElement", _wrap_SampleOfUInt_PickElement, METH_VARARGS, (char *)"SampleOfUInt_PickElement(SampleOfUInt self, UIntT i) -> unsigned int"},
	 { (char *)"SampleOfUInt_Nth", _wrap_SampleOfUInt_Nth, METH_VARARGS, (char *)"\n"
		"Nth(UIntT i) -> unsigned int\n"
		"SampleOfUInt_Nth(SampleOfUInt self, UIntT i) -> unsigned int\n"
		""},
	 { (char *)"SampleOfUInt_Pick", _wrap_SampleOfUInt_Pick, METH_VARARGS, (char *)"SampleOfUInt_Pick(SampleOfUInt self) -> unsigned int"},
	 { (char *)"SampleOfUInt_Sample", _wrap_SampleOfUInt_Sample, METH_VARARGS, (char *)"\n"
		"Sample() -> unsigned int\n"
		"SampleOfUInt_Sample(SampleOfUInt self) -> unsigned int\n"
		""},
	 { (char *)"SampleOfUInt_First", _wrap_SampleOfUInt_First, METH_VARARGS, (char *)"\n"
		"First() -> unsigned int\n"
		"SampleOfUInt_First(SampleOfUInt self) -> unsigned int\n"
		""},
	 { (char *)"SampleOfUInt_Last", _wrap_SampleOfUInt_Last, METH_VARARGS, (char *)"\n"
		"Last() -> unsigned int\n"
		"SampleOfUInt_Last(SampleOfUInt self) -> unsigned int\n"
		""},
	 { (char *)"SampleOfUInt_IsEmpty", _wrap_SampleOfUInt_IsEmpty, METH_VARARGS, (char *)"SampleOfUInt_IsEmpty(SampleOfUInt self) -> bool"},
	 { (char *)"SampleOfUInt_IsValid", _wrap_SampleOfUInt_IsValid, METH_VARARGS, (char *)"SampleOfUInt_IsValid(SampleOfUInt self) -> bool"},
	 { (char *)"SampleOfUInt___getitem__", _wrap_SampleOfUInt___getitem__, METH_VARARGS, (char *)"SampleOfUInt___getitem__(SampleOfUInt self, size_t i) -> unsigned int"},
	 { (char *)"SampleOfUInt___setitem__", _wrap_SampleOfUInt___setitem__, METH_VARARGS, (char *)"SampleOfUInt___setitem__(SampleOfUInt self, size_t i, unsigned int v)"},
	 { (char *)"SampleOfUInt___str__", _wrap_SampleOfUInt___str__, METH_VARARGS, (char *)"SampleOfUInt___str__(SampleOfUInt self) -> char"},
	 { (char *)"delete_SampleOfUInt", _wrap_delete_SampleOfUInt, METH_VARARGS, (char *)"delete_SampleOfUInt(SampleOfUInt self)"},
	 { (char *)"SampleOfUInt_swigregister", SampleOfUInt_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SampleOfVectorC", _wrap_new_SampleOfVectorC, METH_VARARGS, (char *)"\n"
		"SampleOfVectorC(SizeT maxSize = 10)\n"
		"SampleOfVectorC()\n"
		"new_SampleOfVectorC(SArray1dVectorC dat) -> SampleOfVectorC\n"
		""},
	 { (char *)"SampleOfVectorC_Copy", _wrap_SampleOfVectorC_Copy, METH_VARARGS, (char *)"SampleOfVectorC_Copy(SampleOfVectorC self) -> SampleOfVectorC"},
	 { (char *)"SampleOfVectorC_CompactFrom", _wrap_SampleOfVectorC_CompactFrom, METH_VARARGS, (char *)"\n"
		"CompactFrom(IndexC start, SizeT size) -> SampleOfVectorC\n"
		"SampleOfVectorC_CompactFrom(SampleOfVectorC self, IndexC start, SizeT size) -> SampleOfVectorC\n"
		""},
	 { (char *)"SampleOfVectorC_ExtractEntry", _wrap_SampleOfVectorC_ExtractEntry, METH_VARARGS, (char *)"SampleOfVectorC_ExtractEntry(SampleOfVectorC self, int ind) -> VectorC"},
	 { (char *)"SampleOfVectorC_Fill", _wrap_SampleOfVectorC_Fill, METH_VARARGS, (char *)"SampleOfVectorC_Fill(SampleOfVectorC self, VectorC value)"},
	 { (char *)"SampleOfVectorC_Append", _wrap_SampleOfVectorC_Append, METH_VARARGS, (char *)"\n"
		"Append(VectorC dat) -> IndexC\n"
		"SampleOfVectorC_Append(SampleOfVectorC self, SampleOfVectorC newData) -> IndexC\n"
		""},
	 { (char *)"SampleOfVectorC___iadd__", _wrap_SampleOfVectorC___iadd__, METH_VARARGS, (char *)"SampleOfVectorC___iadd__(SampleOfVectorC self, VectorC dat) -> IndexC"},
	 { (char *)"SampleOfVectorC_Size", _wrap_SampleOfVectorC_Size, METH_VARARGS, (char *)"SampleOfVectorC_Size(SampleOfVectorC self) -> SizeT"},
	 { (char *)"SampleOfVectorC_PickElement", _wrap_SampleOfVectorC_PickElement, METH_VARARGS, (char *)"SampleOfVectorC_PickElement(SampleOfVectorC self, UIntT i) -> VectorC"},
	 { (char *)"SampleOfVectorC_Nth", _wrap_SampleOfVectorC_Nth, METH_VARARGS, (char *)"\n"
		"Nth(UIntT i) -> VectorC\n"
		"SampleOfVectorC_Nth(SampleOfVectorC self, UIntT i) -> VectorC\n"
		""},
	 { (char *)"SampleOfVectorC_Pick", _wrap_SampleOfVectorC_Pick, METH_VARARGS, (char *)"SampleOfVectorC_Pick(SampleOfVectorC self) -> VectorC"},
	 { (char *)"SampleOfVectorC_Sample", _wrap_SampleOfVectorC_Sample, METH_VARARGS, (char *)"\n"
		"Sample() -> VectorC\n"
		"SampleOfVectorC_Sample(SampleOfVectorC self) -> VectorC\n"
		""},
	 { (char *)"SampleOfVectorC_First", _wrap_SampleOfVectorC_First, METH_VARARGS, (char *)"\n"
		"First() -> VectorC\n"
		"SampleOfVectorC_First(SampleOfVectorC self) -> VectorC\n"
		""},
	 { (char *)"SampleOfVectorC_Last", _wrap_SampleOfVectorC_Last, METH_VARARGS, (char *)"\n"
		"Last() -> VectorC\n"
		"SampleOfVectorC_Last(SampleOfVectorC self) -> VectorC\n"
		""},
	 { (char *)"SampleOfVectorC_IsEmpty", _wrap_SampleOfVectorC_IsEmpty, METH_VARARGS, (char *)"SampleOfVectorC_IsEmpty(SampleOfVectorC self) -> bool"},
	 { (char *)"SampleOfVectorC_IsValid", _wrap_SampleOfVectorC_IsValid, METH_VARARGS, (char *)"SampleOfVectorC_IsValid(SampleOfVectorC self) -> bool"},
	 { (char *)"SampleOfVectorC___getitem__", _wrap_SampleOfVectorC___getitem__, METH_VARARGS, (char *)"SampleOfVectorC___getitem__(SampleOfVectorC self, size_t i) -> VectorC"},
	 { (char *)"SampleOfVectorC___setitem__", _wrap_SampleOfVectorC___setitem__, METH_VARARGS, (char *)"SampleOfVectorC___setitem__(SampleOfVectorC self, size_t i, VectorC v)"},
	 { (char *)"SampleOfVectorC___str__", _wrap_SampleOfVectorC___str__, METH_VARARGS, (char *)"SampleOfVectorC___str__(SampleOfVectorC self) -> char"},
	 { (char *)"delete_SampleOfVectorC", _wrap_delete_SampleOfVectorC, METH_VARARGS, (char *)"delete_SampleOfVectorC(SampleOfVectorC self)"},
	 { (char *)"SampleOfVectorC_swigregister", SampleOfVectorC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SampleVectorC", _wrap_new_SampleVectorC, METH_VARARGS, (char *)"\n"
		"SampleVectorC(SizeT maxSize = 10)\n"
		"SampleVectorC()\n"
		"SampleVectorC(SArray1dVectorC dat)\n"
		"SampleVectorC(SampleOfVectorC svec)\n"
		"SampleVectorC(SampleOfVectorC svec, SArray1dIndexC featureSet)\n"
		"new_SampleVectorC(MeanCovarianceC meanCovariance) -> SampleVectorC\n"
		""},
	 { (char *)"SampleVectorC_VectorSize", _wrap_SampleVectorC_VectorSize, METH_VARARGS, (char *)"SampleVectorC_VectorSize(SampleVectorC self) -> UIntT"},
	 { (char *)"SampleVectorC_Mean", _wrap_SampleVectorC_Mean, METH_VARARGS, (char *)"\n"
		"Mean() -> VectorC\n"
		"SampleVectorC_Mean(SampleVectorC self, RavlN::SampleC<(RavlN::RealT)> weights) -> VectorC\n"
		""},
	 { (char *)"SampleVectorC_MeanCovariance", _wrap_SampleVectorC_MeanCovariance, METH_VARARGS, (char *)"\n"
		"MeanCovariance(bool sampleStatistics = True) -> MeanCovarianceC\n"
		"MeanCovariance() -> MeanCovarianceC\n"
		"MeanCovariance(RavlN::SampleC<(RavlN::RealT)> weights, bool sampleStatistics = True) -> MeanCovarianceC\n"
		"SampleVectorC_MeanCovariance(SampleVectorC self, RavlN::SampleC<(RavlN::RealT)> weights) -> MeanCovarianceC\n"
		""},
	 { (char *)"SampleVectorC_SumOuterProducts", _wrap_SampleVectorC_SumOuterProducts, METH_VARARGS, (char *)"\n"
		"SumOuterProducts() -> MatrixRUTC\n"
		"SampleVectorC_SumOuterProducts(SampleVectorC self, RavlN::SampleC<(RavlN::RealT)> w) -> MatrixRUTC\n"
		""},
	 { (char *)"SampleVectorC_TMul", _wrap_SampleVectorC_TMul, METH_VARARGS, (char *)"\n"
		"TMul(SampleOfVectorC sam2) -> MatrixC\n"
		"SampleVectorC_TMul(SampleVectorC self, SampleOfVectorC sam2, RavlN::SampleC<(RavlN::RealT)> w) -> MatrixC\n"
		""},
	 { (char *)"SampleVectorC_Normalise", _wrap_SampleVectorC_Normalise, METH_VARARGS, (char *)"\n"
		"Normalise(MeanCovarianceC stats)\n"
		"Normalise(FunctionC func)\n"
		"Normalise(MeanCovarianceC stats, SampleVectorC sampleVector, \n"
		"    bool addBiasElement = False)\n"
		"SampleVectorC_Normalise(SampleVectorC self, MeanCovarianceC stats, SampleVectorC sampleVector)\n"
		""},
	 { (char *)"SampleVectorC_UndoNormalisation", _wrap_SampleVectorC_UndoNormalisation, METH_VARARGS, (char *)"\n"
		"UndoNormalisation(MeanCovarianceC stats)\n"
		"UndoNormalisation(MeanCovarianceC stats, SampleVectorC sampleVector, \n"
		"    bool removeBiasElement = False)\n"
		"SampleVectorC_UndoNormalisation(SampleVectorC self, MeanCovarianceC stats, SampleVectorC sampleVector)\n"
		""},
	 { (char *)"delete_SampleVectorC", _wrap_delete_SampleVectorC, METH_VARARGS, (char *)"delete_SampleVectorC(SampleVectorC self)"},
	 { (char *)"SampleVectorC_swigregister", SampleVectorC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SampleLabelC", _wrap_new_SampleLabelC, METH_VARARGS, (char *)"\n"
		"SampleLabelC(SizeT maxSize = 10)\n"
		"SampleLabelC()\n"
		"SampleLabelC(SArray1dUInt dat)\n"
		"new_SampleLabelC(SampleOfUInt sample) -> SampleLabelC\n"
		""},
	 { (char *)"SampleLabelC_MaxValue", _wrap_SampleLabelC_MaxValue, METH_VARARGS, (char *)"SampleLabelC_MaxValue(SampleLabelC self) -> UIntT"},
	 { (char *)"SampleLabelC_LabelSums", _wrap_SampleLabelC_LabelSums, METH_VARARGS, (char *)"SampleLabelC_LabelSums(SampleLabelC self) -> SArray1dUInt"},
	 { (char *)"SampleLabelC_SampleVector", _wrap_SampleLabelC_SampleVector, METH_VARARGS, (char *)"\n"
		"SampleVector(RealT inClass = 1, RealT outClass = 0, IntT maxLabel = -1) -> SampleOfVectorC\n"
		"SampleVector(RealT inClass = 1, RealT outClass = 0) -> SampleOfVectorC\n"
		"SampleVector(RealT inClass = 1) -> SampleOfVectorC\n"
		"SampleLabelC_SampleVector(SampleLabelC self) -> SampleOfVectorC\n"
		""},
	 { (char *)"SampleLabelC_SetClassName", _wrap_SampleLabelC_SetClassName, METH_VARARGS, (char *)"SampleLabelC_SetClassName(SampleLabelC self, UIntT label, StringC className) -> bool"},
	 { (char *)"SampleLabelC_GetClassName", _wrap_SampleLabelC_GetClassName, METH_VARARGS, (char *)"SampleLabelC_GetClassName(SampleLabelC self, UIntT label, StringC className) -> bool"},
	 { (char *)"SampleLabelC_Label2ClassNames", _wrap_SampleLabelC_Label2ClassNames, METH_VARARGS, (char *)"SampleLabelC_Label2ClassNames(SampleLabelC self) -> RavlN::RCHashC<(RavlN::UIntT,RavlN::StringC)>"},
	 { (char *)"delete_SampleLabelC", _wrap_delete_SampleLabelC, METH_VARARGS, (char *)"delete_SampleLabelC(SampleLabelC self)"},
	 { (char *)"SampleLabelC_swigregister", SampleLabelC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DataSetBaseC", _wrap_new_DataSetBaseC, METH_VARARGS, (char *)"new_DataSetBaseC() -> DataSetBaseC"},
	 { (char *)"DataSetBaseC_Shuffle", _wrap_DataSetBaseC_Shuffle, METH_VARARGS, (char *)"DataSetBaseC_Shuffle(DataSetBaseC self)"},
	 { (char *)"delete_DataSetBaseC", _wrap_delete_DataSetBaseC, METH_VARARGS, (char *)"delete_DataSetBaseC(DataSetBaseC self)"},
	 { (char *)"DataSetBaseC_swigregister", DataSetBaseC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DataSet1SampleVectorC", _wrap_new_DataSet1SampleVectorC, METH_VARARGS, (char *)"\n"
		"DataSet1SampleVectorC()\n"
		"DataSet1SampleVectorC(UIntT sizeEstimate)\n"
		"new_DataSet1SampleVectorC(SampleVectorC dat) -> DataSet1SampleVectorC\n"
		""},
	 { (char *)"DataSet1SampleVectorC_Sample1", _wrap_DataSet1SampleVectorC_Sample1, METH_VARARGS, (char *)"\n"
		"Sample1() -> SampleVectorC\n"
		"DataSet1SampleVectorC_Sample1(DataSet1SampleVectorC self) -> SampleVectorC\n"
		""},
	 { (char *)"DataSet1SampleVectorC_Append", _wrap_DataSet1SampleVectorC_Append, METH_VARARGS, (char *)"\n"
		"Append(Element1T data) -> IndexC\n"
		"DataSet1SampleVectorC_Append(DataSet1SampleVectorC self, DataSet1SampleVectorC data)\n"
		""},
	 { (char *)"DataSet1SampleVectorC_ExtractSample", _wrap_DataSet1SampleVectorC_ExtractSample, METH_VARARGS, (char *)"DataSet1SampleVectorC_ExtractSample(DataSet1SampleVectorC self, RealT proportion) -> DataSet1SampleVectorC"},
	 { (char *)"DataSet1SampleVectorC_Size", _wrap_DataSet1SampleVectorC_Size, METH_VARARGS, (char *)"DataSet1SampleVectorC_Size(DataSet1SampleVectorC self) -> UIntT"},
	 { (char *)"delete_DataSet1SampleVectorC", _wrap_delete_DataSet1SampleVectorC, METH_VARARGS, (char *)"delete_DataSet1SampleVectorC(DataSet1SampleVectorC self)"},
	 { (char *)"DataSet1SampleVectorC_swigregister", DataSet1SampleVectorC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DataSet2SampleVectorSampleLabelC", _wrap_new_DataSet2SampleVectorSampleLabelC, METH_VARARGS, (char *)"\n"
		"DataSet2SampleVectorSampleLabelC()\n"
		"DataSet2SampleVectorSampleLabelC(UIntT sizeEstimate)\n"
		"new_DataSet2SampleVectorSampleLabelC(SampleVectorC dat1, SampleLabelC dat2) -> DataSet2SampleVectorSampleLabelC\n"
		""},
	 { (char *)"DataSet2SampleVectorSampleLabelC_Sample2", _wrap_DataSet2SampleVectorSampleLabelC_Sample2, METH_VARARGS, (char *)"\n"
		"Sample2() -> SampleLabelC\n"
		"DataSet2SampleVectorSampleLabelC_Sample2(DataSet2SampleVectorSampleLabelC self) -> SampleLabelC\n"
		""},
	 { (char *)"DataSet2SampleVectorSampleLabelC_Append", _wrap_DataSet2SampleVectorSampleLabelC_Append, METH_VARARGS, (char *)"\n"
		"Append(Element1T data1, Element2T data2) -> IndexC\n"
		"Append(DataSet2SampleVectorSampleLabelC data)\n"
		"DataSet2SampleVectorSampleLabelC_Append(DataSet2SampleVectorSampleLabelC self, RavlN::SampleC<(RavlN::DataSet2C<(RavlN::SampleVectorC,RavlN::SampleLabelC)>::Element1T)> sample1, \n"
		"    Element2T element2)\n"
		""},
	 { (char *)"DataSet2SampleVectorSampleLabelC_ExtractSample", _wrap_DataSet2SampleVectorSampleLabelC_ExtractSample, METH_VARARGS, (char *)"DataSet2SampleVectorSampleLabelC_ExtractSample(DataSet2SampleVectorSampleLabelC self, RealT proportion) -> DataSet2SampleVectorSampleLabelC"},
	 { (char *)"delete_DataSet2SampleVectorSampleLabelC", _wrap_delete_DataSet2SampleVectorSampleLabelC, METH_VARARGS, (char *)"delete_DataSet2SampleVectorSampleLabelC(DataSet2SampleVectorSampleLabelC self)"},
	 { (char *)"DataSet2SampleVectorSampleLabelC_swigregister", DataSet2SampleVectorSampleLabelC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DataSetVectorLabelC", _wrap_new_DataSetVectorLabelC, METH_VARARGS, (char *)"\n"
		"DataSetVectorLabelC()\n"
		"DataSetVectorLabelC(DataSet2SampleVectorSampleLabelC dataSet)\n"
		"DataSetVectorLabelC(UIntT sizeEstimate)\n"
		"DataSetVectorLabelC(SampleVectorC vec, SampleLabelC lab)\n"
		"new_DataSetVectorLabelC(RavlN::SArray1dC<(RavlN::MeanCovarianceC)> stats) -> DataSetVectorLabelC\n"
		""},
	 { (char *)"DataSetVectorLabelC_SeperateLabels", _wrap_DataSetVectorLabelC_SeperateLabels, METH_VARARGS, (char *)"DataSetVectorLabelC_SeperateLabels(DataSetVectorLabelC self) -> RavlN::SArray1dC<(RavlN::SampleVectorC)>"},
	 { (char *)"DataSetVectorLabelC_GlobalMean", _wrap_DataSetVectorLabelC_GlobalMean, METH_VARARGS, (char *)"DataSetVectorLabelC_GlobalMean(DataSetVectorLabelC self) -> VectorC"},
	 { (char *)"DataSetVectorLabelC_ClassMeans", _wrap_DataSetVectorLabelC_ClassMeans, METH_VARARGS, (char *)"DataSetVectorLabelC_ClassMeans(DataSetVectorLabelC self) -> SArray1dVectorC"},
	 { (char *)"DataSetVectorLabelC_ClassMeansLabels", _wrap_DataSetVectorLabelC_ClassMeansLabels, METH_VARARGS, (char *)"DataSetVectorLabelC_ClassMeansLabels(DataSetVectorLabelC self) -> DataSetVectorLabelC"},
	 { (char *)"DataSetVectorLabelC_ClassNums", _wrap_DataSetVectorLabelC_ClassNums, METH_VARARGS, (char *)"DataSetVectorLabelC_ClassNums(DataSetVectorLabelC self) -> SArray1dUInt"},
	 { (char *)"DataSetVectorLabelC_ClassStats", _wrap_DataSetVectorLabelC_ClassStats, METH_VARARGS, (char *)"\n"
		"ClassStats(bool sampleStatistics = True) -> RavlN::SArray1dC<(RavlN::MeanCovarianceC)>\n"
		"DataSetVectorLabelC_ClassStats(DataSetVectorLabelC self) -> RavlN::SArray1dC<(RavlN::MeanCovarianceC)>\n"
		""},
	 { (char *)"DataSetVectorLabelC_BetweenClassScatter", _wrap_DataSetVectorLabelC_BetweenClassScatter, METH_VARARGS, (char *)"DataSetVectorLabelC_BetweenClassScatter(DataSetVectorLabelC self) -> MatrixC"},
	 { (char *)"DataSetVectorLabelC_WithinClassScatter", _wrap_DataSetVectorLabelC_WithinClassScatter, METH_VARARGS, (char *)"\n"
		"WithinClassScatter(bool sampleStatistics = False) -> MatrixC\n"
		"DataSetVectorLabelC_WithinClassScatter(DataSetVectorLabelC self) -> MatrixC\n"
		""},
	 { (char *)"DataSetVectorLabelC_ExtractPerLabel", _wrap_DataSetVectorLabelC_ExtractPerLabel, METH_VARARGS, (char *)"DataSetVectorLabelC_ExtractPerLabel(DataSetVectorLabelC self, UIntT numSamples) -> DataSetVectorLabelC"},
	 { (char *)"DataSetVectorLabelC___str__", _wrap_DataSetVectorLabelC___str__, METH_VARARGS, (char *)"DataSetVectorLabelC___str__(DataSetVectorLabelC self) -> char"},
	 { (char *)"delete_DataSetVectorLabelC", _wrap_delete_DataSetVectorLabelC, METH_VARARGS, (char *)"delete_DataSetVectorLabelC(DataSetVectorLabelC self)"},
	 { (char *)"DataSetVectorLabelC_swigregister", DataSetVectorLabelC_swigregister, METH_VARARGS, NULL},
	 { (char *)"CreateDataSet", _wrap_CreateDataSet, METH_VARARGS, (char *)"\n"
		"CreateDataSet(UIntT dimension = 2, UIntT classes = 2, UIntT samplesPerClass = 1000, \n"
		"    RealT dist = 3.0) -> DataSetVectorLabelC\n"
		"CreateDataSet(UIntT dimension = 2, UIntT classes = 2, UIntT samplesPerClass = 1000) -> DataSetVectorLabelC\n"
		"CreateDataSet(UIntT dimension = 2, UIntT classes = 2) -> DataSetVectorLabelC\n"
		"CreateDataSet(UIntT dimension = 2) -> DataSetVectorLabelC\n"
		"CreateDataSet() -> DataSetVectorLabelC\n"
		""},
	 { (char *)"SaveDataSetVectorLabel", _wrap_SaveDataSetVectorLabel, METH_VARARGS, (char *)"SaveDataSetVectorLabel(StringC filename, DataSetVectorLabelC dataset) -> bool"},
	 { (char *)"LoadDataSetVectorLabel", _wrap_LoadDataSetVectorLabel, METH_VARARGS, (char *)"\n"
		"LoadDataSetVectorLabel(StringC filename, DataSetVectorLabelC dataset) -> bool\n"
		"LoadDataSetVectorLabel(StringC dataSetFile, bool shuffle, bool equaliseSamples, \n"
		"    UIntT samplesPerClass, SArray1dIndexC features, \n"
		"    FunctionC normaliseFunc, DataSetVectorLabelC dataSet) -> bool\n"
		"LoadDataSetVectorLabel(StringC dataSetFile, bool shuffle, bool equaliseSamples, \n"
		"    UIntT samplesPerClass, SArray1dIndexC features, \n"
		"    DataSetNormaliseT normType, FunctionC normaliseFunc, \n"
		"    DataSetVectorLabelC dataSet) -> bool\n"
		""},
	 { (char *)"SaveDataSetVectorLabelCSV", _wrap_SaveDataSetVectorLabelCSV, METH_VARARGS, (char *)"SaveDataSetVectorLabelCSV(StringC filename, DataSetVectorLabelC dataset) -> bool"},
	 { (char *)"LoadDataSetVectorLabelCSV", _wrap_LoadDataSetVectorLabelCSV, METH_VARARGS, (char *)"LoadDataSetVectorLabelCSV(StringC filename, DataSetVectorLabelC dataset) -> bool"},
	 { (char *)"new_ClassifierC", _wrap_new_ClassifierC, METH_VARARGS, (char *)"new_ClassifierC() -> ClassifierC"},
	 { (char *)"ClassifierC_Classify", _wrap_ClassifierC_Classify, METH_VARARGS, (char *)"ClassifierC_Classify(ClassifierC self, VectorC vector) -> UIntT"},
	 { (char *)"ClassifierC_Confidence", _wrap_ClassifierC_Confidence, METH_VARARGS, (char *)"ClassifierC_Confidence(ClassifierC self, VectorC vector) -> VectorC"},
	 { (char *)"delete_ClassifierC", _wrap_delete_ClassifierC, METH_VARARGS, (char *)"delete_ClassifierC(ClassifierC self)"},
	 { (char *)"ClassifierC_swigregister", ClassifierC_swigregister, METH_VARARGS, NULL},
	 { (char *)"ClassifierDiscriminantFunctionC_Discriminant", _wrap_ClassifierDiscriminantFunctionC_Discriminant, METH_VARARGS, (char *)"ClassifierDiscriminantFunctionC_Discriminant(ClassifierDiscriminantFunctionC self) -> FunctionC"},
	 { (char *)"new_ClassifierDiscriminantFunctionC", _wrap_new_ClassifierDiscriminantFunctionC, METH_VARARGS, (char *)"new_ClassifierDiscriminantFunctionC() -> ClassifierDiscriminantFunctionC"},
	 { (char *)"delete_ClassifierDiscriminantFunctionC", _wrap_delete_ClassifierDiscriminantFunctionC, METH_VARARGS, (char *)"delete_ClassifierDiscriminantFunctionC(ClassifierDiscriminantFunctionC self)"},
	 { (char *)"ClassifierDiscriminantFunctionC_swigregister", ClassifierDiscriminantFunctionC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DesignFunctionSupervisedC", _wrap_new_DesignFunctionSupervisedC, METH_VARARGS, (char *)"\n"
		"DesignFunctionSupervisedC()\n"
		"new_DesignFunctionSupervisedC(DesignFunctionSupervisedC other) -> DesignFunctionSupervisedC\n"
		""},
	 { (char *)"DesignFunctionSupervisedC_Apply", _wrap_DesignFunctionSupervisedC_Apply, METH_VARARGS, (char *)"\n"
		"Apply(SampleOfVectorC data, SampleOfVectorC out) -> FunctionC\n"
		"Apply(SampleOfVectorC data, SampleOfVectorC out, RavlN::SampleC<(RavlN::RealT)> weight) -> FunctionC\n"
		"Apply(RavlN::SampleC<(RavlN::TVectorC<(float)>)> data, RavlN::SampleC<(RavlN::TVectorC<(float)>)> out) -> FunctionC\n"
		"DesignFunctionSupervisedC_Apply(DesignFunctionSupervisedC self, RavlN::SampleC<(RavlN::TVectorC<(float)>)> data, \n"
		"    RavlN::SampleC<(RavlN::TVectorC<(float)>)> out, \n"
		"    RavlN::SampleC<(float)> weight) -> FunctionC\n"
		""},
	 { (char *)"delete_DesignFunctionSupervisedC", _wrap_delete_DesignFunctionSupervisedC, METH_VARARGS, (char *)"delete_DesignFunctionSupervisedC(DesignFunctionSupervisedC self)"},
	 { (char *)"DesignFunctionSupervisedC_swigregister", DesignFunctionSupervisedC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DesignFuncLSQC", _wrap_new_DesignFuncLSQC, METH_VARARGS, (char *)"new_DesignFuncLSQC(UIntT order, bool orthogonal) -> DesignFuncLSQC"},
	 { (char *)"delete_DesignFuncLSQC", _wrap_delete_DesignFuncLSQC, METH_VARARGS, (char *)"delete_DesignFuncLSQC(DesignFuncLSQC self)"},
	 { (char *)"DesignFuncLSQC_swigregister", DesignFuncLSQC_swigregister, METH_VARARGS, NULL},
	 { (char *)"DesignClassifierSupervisedC_Apply", _wrap_DesignClassifierSupervisedC_Apply, METH_VARARGS, (char *)"\n"
		"Apply(SampleOfVectorC data, SampleOfUInt out) -> ClassifierC\n"
		"Apply(SampleOfVectorC data, SampleOfUInt out, RavlN::SampleC<(RavlN::RealT)> weight) -> ClassifierC\n"
		"Apply(SampleOfVectorC data, SampleOfUInt out, SArray1dIndexC featureSet) -> ClassifierC\n"
		"Apply(SampleOfVectorC data, SampleOfUInt out, SArray1dIndexC featureSet, \n"
		"    RavlN::SampleC<(RavlN::RealT)> weight) -> ClassifierC\n"
		"DesignClassifierSupervisedC_Apply(DesignClassifierSupervisedC self, DataSetVectorLabelC dset) -> ClassifierC\n"
		""},
	 { (char *)"new_DesignClassifierSupervisedC", _wrap_new_DesignClassifierSupervisedC, METH_VARARGS, (char *)"new_DesignClassifierSupervisedC() -> DesignClassifierSupervisedC"},
	 { (char *)"delete_DesignClassifierSupervisedC", _wrap_delete_DesignClassifierSupervisedC, METH_VARARGS, (char *)"delete_DesignClassifierSupervisedC(DesignClassifierSupervisedC self)"},
	 { (char *)"DesignClassifierSupervisedC_swigregister", DesignClassifierSupervisedC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DesignDiscriminantFunctionC", _wrap_new_DesignDiscriminantFunctionC, METH_VARARGS, (char *)"new_DesignDiscriminantFunctionC(DesignFunctionSupervisedC designFunc) -> DesignDiscriminantFunctionC"},
	 { (char *)"DesignDiscriminantFunctionC_Apply", _wrap_DesignDiscriminantFunctionC_Apply, METH_VARARGS, (char *)"\n"
		"DesignDiscriminantFunctionC_Apply(DesignDiscriminantFunctionC self, SampleOfVectorC data, \n"
		"    SampleOfUInt out) -> ClassifierDiscriminantFunctionC\n"
		""},
	 { (char *)"delete_DesignDiscriminantFunctionC", _wrap_delete_DesignDiscriminantFunctionC, METH_VARARGS, (char *)"delete_DesignDiscriminantFunctionC(DesignDiscriminantFunctionC self)"},
	 { (char *)"DesignDiscriminantFunctionC_swigregister", DesignDiscriminantFunctionC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DesignClassifierNeuralNetwork2C", _wrap_new_DesignClassifierNeuralNetwork2C, METH_VARARGS, (char *)"\n"
		"DesignClassifierNeuralNetwork2C(UIntT nLayers, UIntT nHidden, bool doNormalisation, \n"
		"    RealT regularisation = 0, RealT desiredError = 0.00001, \n"
		"    UIntT maxEpochs = 5000, UIntT displayEpochs = 0, \n"
		"    bool useSigmoid = True)\n"
		"DesignClassifierNeuralNetwork2C(UIntT nLayers, UIntT nHidden, bool doNormalisation, \n"
		"    RealT regularisation = 0, RealT desiredError = 0.00001, \n"
		"    UIntT maxEpochs = 5000, UIntT displayEpochs = 0)\n"
		"DesignClassifierNeuralNetwork2C(UIntT nLayers, UIntT nHidden, bool doNormalisation, \n"
		"    RealT regularisation = 0, RealT desiredError = 0.00001, \n"
		"    UIntT maxEpochs = 5000)\n"
		"DesignClassifierNeuralNetwork2C(UIntT nLayers, UIntT nHidden, bool doNormalisation, \n"
		"    RealT regularisation = 0, RealT desiredError = 0.00001)\n"
		"DesignClassifierNeuralNetwork2C(UIntT nLayers, UIntT nHidden, bool doNormalisation, \n"
		"    RealT regularisation = 0)\n"
		"new_DesignClassifierNeuralNetwork2C(UIntT nLayers, UIntT nHidden, bool doNormalisation) -> DesignClassifierNeuralNetwork2C\n"
		""},
	 { (char *)"delete_DesignClassifierNeuralNetwork2C", _wrap_delete_DesignClassifierNeuralNetwork2C, METH_VARARGS, (char *)"delete_DesignClassifierNeuralNetwork2C(DesignClassifierNeuralNetwork2C self)"},
	 { (char *)"DesignClassifierNeuralNetwork2C_swigregister", DesignClassifierNeuralNetwork2C_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DesignClassifierLogisticRegressionC", _wrap_new_DesignClassifierLogisticRegressionC, METH_VARARGS, (char *)"new_DesignClassifierLogisticRegressionC(RealT regularisation) -> DesignClassifierLogisticRegressionC"},
	 { (char *)"delete_DesignClassifierLogisticRegressionC", _wrap_delete_DesignClassifierLogisticRegressionC, METH_VARARGS, (char *)"delete_DesignClassifierLogisticRegressionC(DesignClassifierLogisticRegressionC self)"},
	 { (char *)"DesignClassifierLogisticRegressionC_swigregister", DesignClassifierLogisticRegressionC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ErrorC", _wrap_new_ErrorC, METH_VARARGS, (char *)"new_ErrorC() -> ErrorC"},
	 { (char *)"ErrorC_Error", _wrap_ErrorC_Error, METH_VARARGS, (char *)"ErrorC_Error(ErrorC self, ClassifierC classifier, DataSetVectorLabelC dset) -> RealT"},
	 { (char *)"delete_ErrorC", _wrap_delete_ErrorC, METH_VARARGS, (char *)"delete_ErrorC(ErrorC self)"},
	 { (char *)"ErrorC_swigregister", ErrorC_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_GnuPlot2dC", _wrap_new_GnuPlot2dC, METH_VARARGS, (char *)"\n"
		"GnuPlot2dC(StringC title = \"My Plot\")\n"
		"new_GnuPlot2dC() -> GnuPlot2dC\n"
		""},
	 { (char *)"GnuPlot2dC_Plot", _wrap_GnuPlot2dC_Plot, METH_VARARGS, (char *)"\n"
		"Plot(SArray1dPoint2dC points, StringC dataName = \"\") -> bool\n"
		"Plot(SArray1dPoint2dC points) -> bool\n"
		"Plot(StringC function) -> bool\n"
		"Plot(DataSetVectorLabelC dataSet, UIntT fv1 = 0, UIntT fv2 = 1, \n"
		"    UIntT samplesPerClass = 0) -> bool\n"
		"Plot(DataSetVectorLabelC dataSet, UIntT fv1 = 0, UIntT fv2 = 1) -> bool\n"
		"Plot(DataSetVectorLabelC dataSet, UIntT fv1 = 0) -> bool\n"
		"GnuPlot2dC_Plot(GnuPlot2dC self, DataSetVectorLabelC dataSet) -> bool\n"
		""},
	 { (char *)"GnuPlot2dC_SetXLabel", _wrap_GnuPlot2dC_SetXLabel, METH_VARARGS, (char *)"GnuPlot2dC_SetXLabel(GnuPlot2dC self, StringC xlabel) -> bool"},
	 { (char *)"GnuPlot2dC_SetYLabel", _wrap_GnuPlot2dC_SetYLabel, METH_VARARGS, (char *)"GnuPlot2dC_SetYLabel(GnuPlot2dC self, StringC ylabel) -> bool"},
	 { (char *)"GnuPlot2dC_SetXRange", _wrap_GnuPlot2dC_SetXRange, METH_VARARGS, (char *)"GnuPlot2dC_SetXRange(GnuPlot2dC self, RealRangeC xrange) -> bool"},
	 { (char *)"GnuPlot2dC_SetYRange", _wrap_GnuPlot2dC_SetYRange, METH_VARARGS, (char *)"GnuPlot2dC_SetYRange(GnuPlot2dC self, RealRangeC yrange) -> bool"},
	 { (char *)"GnuPlot2dC_SetLineStyle", _wrap_GnuPlot2dC_SetLineStyle, METH_VARARGS, (char *)"GnuPlot2dC_SetLineStyle(GnuPlot2dC self, StringC lineStyle) -> bool"},
	 { (char *)"GnuPlot2dC_Command", _wrap_GnuPlot2dC_Command, METH_VARARGS, (char *)"GnuPlot2dC_Command(GnuPlot2dC self, StringC command) -> bool"},
	 { (char *)"delete_GnuPlot2dC", _wrap_delete_GnuPlot2dC, METH_VARARGS, (char *)"delete_GnuPlot2dC(GnuPlot2dC self)"},
	 { (char *)"GnuPlot2dC_swigregister", GnuPlot2dC_swigregister, METH_VARARGS, NULL},
	 { (char *)"Load", _wrap_Load, METH_VARARGS, (char *)"\n"
		"Load(StringC filename, ImageByteC arg1) -> bool\n"
		"Load(StringC filename, RavlImageN::ImageC<(RavlN::RealT)> arg1) -> bool\n"
		"Load(StringC filename, ImageByteRGBValueC arg1) -> bool\n"
		"Load(StringC filename, ClassifierC classifier) -> bool\n"
		""},
	 { (char *)"Save", _wrap_Save, METH_VARARGS, (char *)"\n"
		"Save(StringC filename, ImageByteC arg1) -> bool\n"
		"Save(StringC filename, RavlImageN::ImageC<(RavlN::RealT)> arg1) -> bool\n"
		"Save(StringC filename, ImageByteRGBValueC arg1) -> bool\n"
		"Save(StringC filename, ClassifierC classifier) -> bool\n"
		""},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_RavlN__DataSetVectorLabelCTo_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DataSet1C< RavlN::SampleVectorC > *) (RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) ((RavlN::DataSetVectorLabelC *) x));
}
static void *_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_tTo_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DataSet1C< RavlN::SampleVectorC > *)  ((RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) x));
}
static void *_p_RavlN__SampleVectorCTo_p_RavlN__SampleCT_RavlN__VectorC_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SampleC< RavlN::VectorC > *)  ((RavlN::SampleVectorC *) x));
}
static void *_p_RavlImageN__ImageCT_unsigned_char_tTo_p_RavlN__Array2dCT_unsigned_char_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::Array2dC< unsigned char > *)  ((RavlImageN::ImageC< unsigned char > *) x));
}
static void *_p_RavlN__ConstDLIterCT_unsigned_char_tTo_p_RavlN__DLIterCT_unsigned_char_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DLIterC< unsigned char > *)  ((RavlN::ConstDLIterC< unsigned char > *) x));
}
static void *_p_RavlN__ConstDLIterCT_int_tTo_p_RavlN__DLIterCT_int_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DLIterC< int > *)  ((RavlN::ConstDLIterC< int > *) x));
}
static void *_p_RavlN__MatrixCTo_p_RavlN__TMatrixCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::TMatrixC< double > *)  ((RavlN::MatrixC *) x));
}
static void *_p_RavlN__MatrixRUTCTo_p_RavlN__TMatrixCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::TMatrixC< double > *) (RavlN::MatrixC *) ((RavlN::MatrixRUTC *) x));
}
static void *_p_RavlN__VectorCTo_p_RavlN__TVectorCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::TVectorC< double > *)  ((RavlN::VectorC *) x));
}
static void *_p_RavlN__MatrixCTo_p_RavlN__SArray2dCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SArray2dC< double > *) (RavlN::TMatrixC< RavlN::RealT > *) ((RavlN::MatrixC *) x));
}
static void *_p_RavlN__TMatrixCT_double_tTo_p_RavlN__SArray2dCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SArray2dC< double > *)  ((RavlN::TMatrixC< double > *) x));
}
static void *_p_RavlN__MatrixRUTCTo_p_RavlN__SArray2dCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SArray2dC< double > *) (RavlN::TMatrixC< RavlN::RealT > *)(RavlN::MatrixC *) ((RavlN::MatrixRUTC *) x));
}
static void *_p_RavlN__VectorCTo_p_RavlN__SArray1dCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SArray1dC< double > *) (RavlN::TVectorC< RavlN::RealT > *) ((RavlN::VectorC *) x));
}
static void *_p_RavlN__TVectorCT_double_tTo_p_RavlN__SArray1dCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SArray1dC< double > *)  ((RavlN::TVectorC< double > *) x));
}
static void *_p_RavlN__ConstDLIterCT_double_tTo_p_RavlN__DLIterCT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DLIterC< double > *)  ((RavlN::ConstDLIterC< double > *) x));
}
static void *_p_RavlN__TMatrixCT_float_tTo_p_RavlN__SArray2dCT_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SArray2dC< float > *)  ((RavlN::TMatrixC< float > *) x));
}
static void *_p_RavlN__TVectorCT_float_tTo_p_RavlN__SArray1dCT_float_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SArray1dC< float > *)  ((RavlN::TVectorC< float > *) x));
}
static void *_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_tTo_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::Array2dC< RavlImageN::ByteRGBValueC > *)  ((RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *) x));
}
static void *_p_RavlN__DesignClassifierNeuralNetwork2CTo_p_RavlN__DesignClassifierSupervisedC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DesignClassifierSupervisedC *)  ((RavlN::DesignClassifierNeuralNetwork2C *) x));
}
static void *_p_RavlN__DesignClassifierLogisticRegressionCTo_p_RavlN__DesignClassifierSupervisedC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DesignClassifierSupervisedC *)  ((RavlN::DesignClassifierLogisticRegressionC *) x));
}
static void *_p_RavlN__DesignDiscriminantFunctionCTo_p_RavlN__DesignClassifierSupervisedC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DesignClassifierSupervisedC *)  ((RavlN::DesignDiscriminantFunctionC *) x));
}
static void *_p_RavlN__DesignFuncLSQCTo_p_RavlN__DesignFunctionSupervisedC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DesignFunctionSupervisedC *)  ((RavlN::DesignFuncLSQC *) x));
}
static void *_p_RavlN__ClassifierDiscriminantFunctionCTo_p_RavlN__ClassifierC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::ClassifierC *)  ((RavlN::ClassifierDiscriminantFunctionC *) x));
}
static void *_p_RavlN__MatrixRUTCTo_p_RavlN__MatrixC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::MatrixC *)  ((RavlN::MatrixRUTC *) x));
}
static void *_p_RavlN__Polygon2dCTo_p_RavlN__PointSet2dC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::PointSet2dC *)  ((RavlN::Polygon2dC *) x));
}
static void *_p_RavlN__DataSetVectorLabelCTo_p_RavlN__DataSetBaseC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DataSetBaseC *) (RavlN::DataSet1C< RavlN::SampleVectorC > *)(RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) ((RavlN::DataSetVectorLabelC *) x));
}
static void *_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_tTo_p_RavlN__DataSetBaseC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DataSetBaseC *) (RavlN::DataSet1C< RavlN::SampleVectorC > *) ((RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *) x));
}
static void *_p_RavlN__DataSet1CT_RavlN__SampleVectorC_tTo_p_RavlN__DataSetBaseC(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DataSetBaseC *)  ((RavlN::DataSet1C< RavlN::SampleVectorC > *) x));
}
static void *_p_RavlN__DataSetVectorLabelCTo_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *)  ((RavlN::DataSetVectorLabelC *) x));
}
static void *_p_RavlN__SampleLabelCTo_p_RavlN__SampleCT_unsigned_int_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::SampleC< unsigned int > *)  ((RavlN::SampleLabelC *) x));
}
static void *_p_RavlN__ConstDLIterCT_unsigned_int_tTo_p_RavlN__DLIterCT_unsigned_int_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DLIterC< unsigned int > *)  ((RavlN::ConstDLIterC< unsigned int > *) x));
}
static void *_p_RavlN__Polygon2dCTo_p_RavlN__DListCT_RavlN__Point2dC_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DListC< RavlN::Point2dC > *) (RavlN::PointSet2dC *) ((RavlN::Polygon2dC *) x));
}
static void *_p_RavlN__PointSet2dCTo_p_RavlN__DListCT_RavlN__Point2dC_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DListC< RavlN::Point2dC > *)  ((RavlN::PointSet2dC *) x));
}
static void *_p_RavlN__ConstDLIterCT_short_tTo_p_RavlN__DLIterCT_short_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DLIterC< short > *)  ((RavlN::ConstDLIterC< short > *) x));
}
static void *_p_RavlN__ConstDLIterCT_long_tTo_p_RavlN__DLIterCT_long_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((RavlN::DLIterC< long > *)  ((RavlN::ConstDLIterC< long > *) x));
}
static swig_type_info _swigt__p_Element1T = {"_p_Element1T", "Element1T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Element2T = {"_p_Element2T", "Element2T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_K = {"_p_K", "K *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlImageN__ByteRGBValueC = {"_p_RavlImageN__ByteRGBValueC", "RavlImageN::ByteRGBValueC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlImageN__FontC = {"_p_RavlImageN__FontC", "RavlImageN::FontC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t = {"_p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t", "RavlImageN::ImageC< RavlImageN::ByteRGBValueC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlImageN__ImageCT_double_t = {"_p_RavlImageN__ImageCT_double_t", "RavlImageN::ImageC< RavlN::RealT > *|RavlImageN::ImageC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlImageN__ImageCT_unsigned_char_t = {"_p_RavlImageN__ImageCT_unsigned_char_t", "RavlImageN::ImageC< unsigned char > *|RavlImageN::ImageC< RavlN::ByteT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlImageN__RealRGBValueC = {"_p_RavlImageN__RealRGBValueC", "RavlImageN::RealRGBValueC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__Affine2dC = {"_p_RavlN__Affine2dC", "RavlN::Affine2dC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t = {"_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t", "RavlN::Array2dC< RavlImageN::ByteRGBValueC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t = {"_p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t", "RavlN::Array2dC< RavlImageN::RealRGBValueC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__Array2dCT_double_t = {"_p_RavlN__Array2dCT_double_t", "RavlN::Array2dC< RavlN::RealT > *|RavlN::Array2dC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__Array2dCT_unsigned_char_t = {"_p_RavlN__Array2dCT_unsigned_char_t", "RavlN::Array2dC< unsigned char > *|RavlN::Array2dC< RavlN::ByteT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ClassifierC = {"_p_RavlN__ClassifierC", "RavlN::ClassifierC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ClassifierDiscriminantFunctionC = {"_p_RavlN__ClassifierDiscriminantFunctionC", "RavlN::ClassifierDiscriminantFunctionC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ConstDLIterCT_double_t = {"_p_RavlN__ConstDLIterCT_double_t", "RavlN::ConstDLIterC< RavlN::RealT > *|RavlN::ConstDLIterC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ConstDLIterCT_int_t = {"_p_RavlN__ConstDLIterCT_int_t", "RavlN::ConstDLIterC< RavlN::IntT > *|RavlN::ConstDLIterC< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ConstDLIterCT_long_t = {"_p_RavlN__ConstDLIterCT_long_t", "RavlN::ConstDLIterC< long > *|RavlN::ConstDLIterC< RavlN::Int64T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ConstDLIterCT_short_t = {"_p_RavlN__ConstDLIterCT_short_t", "RavlN::ConstDLIterC< short > *|RavlN::ConstDLIterC< RavlN::Int16T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ConstDLIterCT_unsigned_char_t = {"_p_RavlN__ConstDLIterCT_unsigned_char_t", "RavlN::ConstDLIterC< unsigned char > *|RavlN::ConstDLIterC< RavlN::ByteT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ConstDLIterCT_unsigned_int_t = {"_p_RavlN__ConstDLIterCT_unsigned_int_t", "RavlN::ConstDLIterC< RavlN::UIntT > *|RavlN::ConstDLIterC< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DLIterCT_RavlN__Point2dC_t = {"_p_RavlN__DLIterCT_RavlN__Point2dC_t", "RavlN::DLIterC< RavlN::Point2dC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DLIterCT_double_t = {"_p_RavlN__DLIterCT_double_t", "RavlN::DLIterC< RavlN::RealT > *|RavlN::DLIterC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DLIterCT_int_t = {"_p_RavlN__DLIterCT_int_t", "RavlN::DLIterC< RavlN::IntT > *|RavlN::DLIterC< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DLIterCT_long_t = {"_p_RavlN__DLIterCT_long_t", "RavlN::DLIterC< long > *|RavlN::DLIterC< RavlN::Int64T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DLIterCT_short_t = {"_p_RavlN__DLIterCT_short_t", "RavlN::DLIterC< short > *|RavlN::DLIterC< RavlN::Int16T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DLIterCT_unsigned_char_t = {"_p_RavlN__DLIterCT_unsigned_char_t", "RavlN::DLIterC< unsigned char > *|RavlN::DLIterC< RavlN::ByteT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DLIterCT_unsigned_int_t = {"_p_RavlN__DLIterCT_unsigned_int_t", "RavlN::DLIterC< RavlN::UIntT > *|RavlN::DLIterC< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DListCT_RavlN__Point2dC_t = {"_p_RavlN__DListCT_RavlN__Point2dC_t", "RavlN::DListC< RavlN::Point2dC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DListCT_double_t = {"_p_RavlN__DListCT_double_t", "RavlN::DListC< RavlN::RealT > *|RavlN::DListC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DListCT_int_t = {"_p_RavlN__DListCT_int_t", "RavlN::DListC< RavlN::IntT > *|RavlN::DListC< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DListCT_long_t = {"_p_RavlN__DListCT_long_t", "RavlN::DListC< long > *|RavlN::DListC< RavlN::Int64T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DListCT_short_t = {"_p_RavlN__DListCT_short_t", "RavlN::DListC< short > *|RavlN::DListC< RavlN::Int16T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DListCT_unsigned_char_t = {"_p_RavlN__DListCT_unsigned_char_t", "RavlN::DListC< unsigned char > *|RavlN::DListC< RavlN::ByteT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DListCT_unsigned_int_t = {"_p_RavlN__DListCT_unsigned_int_t", "RavlN::DListC< RavlN::UIntT > *|RavlN::DListC< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t = {"_p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t", "RavlN::DPIPortC< RavlImageN::ImageC< unsigned char > > *|RavlN::DPIPortC< RavlImageN::ImageC< RavlN::ByteT > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DataSet1CT_RavlN__SampleVectorC_t = {"_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t", "RavlN::DataSet1C< RavlN::SampleVectorC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t = {"_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t", "RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DataSetBaseC = {"_p_RavlN__DataSetBaseC", "RavlN::DataSetBaseC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DataSetVectorLabelC = {"_p_RavlN__DataSetVectorLabelC", "RavlN::DataSetVectorLabelC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DateC = {"_p_RavlN__DateC", "RavlN::DateC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DesignClassifierLogisticRegressionC = {"_p_RavlN__DesignClassifierLogisticRegressionC", "RavlN::DesignClassifierLogisticRegressionC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DesignClassifierNeuralNetwork2C = {"_p_RavlN__DesignClassifierNeuralNetwork2C", "RavlN::DesignClassifierNeuralNetwork2C *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DesignClassifierSupervisedC = {"_p_RavlN__DesignClassifierSupervisedC", "RavlN::DesignClassifierSupervisedC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DesignDiscriminantFunctionC = {"_p_RavlN__DesignDiscriminantFunctionC", "RavlN::DesignDiscriminantFunctionC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DesignFuncLSQC = {"_p_RavlN__DesignFuncLSQC", "RavlN::DesignFuncLSQC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__DesignFunctionSupervisedC = {"_p_RavlN__DesignFunctionSupervisedC", "RavlN::DesignFunctionSupervisedC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__ErrorC = {"_p_RavlN__ErrorC", "RavlN::ErrorC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__FunctionC = {"_p_RavlN__FunctionC", "RavlN::FunctionC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__GnuPlot2dC = {"_p_RavlN__GnuPlot2dC", "RavlN::GnuPlot2dC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__HashCT_long_long_t = {"_p_RavlN__HashCT_long_long_t", "RavlN::HashC< long,long > *|RavlN::HashC< RavlN::Int64T,RavlN::Int64T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__HashIterCT_long_long_t = {"_p_RavlN__HashIterCT_long_long_t", "RavlN::HashIterC< long,long > *|RavlN::HashIterC< RavlN::Int64T,RavlN::Int64T > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__Index2dC = {"_p_RavlN__Index2dC", "RavlN::Index2dC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__IndexC = {"_p_RavlN__IndexC", "RavlN::IndexC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__IndexRange2dC = {"_p_RavlN__IndexRange2dC", "RavlN::IndexRange2dC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__IndexRangeC = {"_p_RavlN__IndexRangeC", "RavlN::IndexRangeC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__MatrixC = {"_p_RavlN__MatrixC", "RavlN::MatrixC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__MatrixRUTC = {"_p_RavlN__MatrixRUTC", "RavlN::MatrixRUTC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__MeanCovarianceC = {"_p_RavlN__MeanCovarianceC", "RavlN::MeanCovarianceC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__Point2dC = {"_p_RavlN__Point2dC", "RavlN::Point2dC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__PointSet2dC = {"_p_RavlN__PointSet2dC", "RavlN::PointSet2dC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__Polygon2dC = {"_p_RavlN__Polygon2dC", "RavlN::Polygon2dC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__RCHashCT_unsigned_int_RavlN__StringC_t = {"_p_RavlN__RCHashCT_unsigned_int_RavlN__StringC_t", "RavlN::RCHashC< unsigned int,RavlN::StringC > *|RavlN::RCHashC< RavlN::UIntT,RavlN::StringC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__RealRange2dC = {"_p_RavlN__RealRange2dC", "RavlN::RealRange2dC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__RealRangeC = {"_p_RavlN__RealRangeC", "RavlN::RealRangeC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray1dCT_RavlN__IndexC_t = {"_p_RavlN__SArray1dCT_RavlN__IndexC_t", "RavlN::SArray1dC< RavlN::IndexC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t = {"_p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t", "RavlN::SArray1dC< RavlN::MeanCovarianceC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray1dCT_RavlN__Point2dC_t = {"_p_RavlN__SArray1dCT_RavlN__Point2dC_t", "RavlN::SArray1dC< RavlN::Point2dC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray1dCT_RavlN__SampleVectorC_t = {"_p_RavlN__SArray1dCT_RavlN__SampleVectorC_t", "RavlN::SArray1dC< RavlN::SampleVectorC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray1dCT_RavlN__VectorC_t = {"_p_RavlN__SArray1dCT_RavlN__VectorC_t", "RavlN::SArray1dC< RavlN::VectorC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray1dCT_double_t = {"_p_RavlN__SArray1dCT_double_t", "RavlN::SArray1dC< RavlN::RealT > *|RavlN::SArray1dC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray1dCT_float_t = {"_p_RavlN__SArray1dCT_float_t", "RavlN::SArray1dC< float > *|RavlN::SArray1dC< RavlN::FloatT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray1dCT_unsigned_int_t = {"_p_RavlN__SArray1dCT_unsigned_int_t", "RavlN::SArray1dC< RavlN::UIntT > *|RavlN::SArray1dC< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray2dCT_double_t = {"_p_RavlN__SArray2dCT_double_t", "RavlN::SArray2dC< RavlN::RealT > *|RavlN::SArray2dC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SArray2dCT_float_t = {"_p_RavlN__SArray2dCT_float_t", "RavlN::SArray2dC< float > *|RavlN::SArray2dC< RavlN::FloatT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t = {"_p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t", "RavlN::SampleC< RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T > *|RavlN::SampleC< RavlN::SampleVectorC::ElementT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t = {"_p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t", "RavlN::SampleC< RavlN::TVectorC< float > > *|RavlN::SampleC< RavlN::TVectorC< RavlN::FloatT > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleCT_RavlN__VectorC_t = {"_p_RavlN__SampleCT_RavlN__VectorC_t", "RavlN::SampleC< RavlN::VectorC > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleCT_double_t = {"_p_RavlN__SampleCT_double_t", "RavlN::SampleC< RavlN::RealT > *|RavlN::SampleC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleCT_float_t = {"_p_RavlN__SampleCT_float_t", "RavlN::SampleC< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleCT_unsigned_int_t = {"_p_RavlN__SampleCT_unsigned_int_t", "RavlN::SampleC< RavlN::UIntT > *|RavlN::SampleC< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleLabelC = {"_p_RavlN__SampleLabelC", "RavlN::SampleLabelC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleLabelC__ElementT = {"_p_RavlN__SampleLabelC__ElementT", "RavlN::SampleLabelC::ElementT *|RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element2T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleVectorC = {"_p_RavlN__SampleVectorC", "RavlN::SampleVectorC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SampleVectorC__ElementT = {"_p_RavlN__SampleVectorC__ElementT", "RavlN::DataSet1C< RavlN::SampleVectorC >::Element1T *|RavlN::SampleVectorC::ElementT *|RavlN::DataSet2C< RavlN::SampleVectorC,RavlN::SampleLabelC >::Element1T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__SizeC = {"_p_RavlN__SizeC", "RavlN::SizeC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__StringC = {"_p_RavlN__StringC", "RavlN::StringC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__TMatrixCT_double_t = {"_p_RavlN__TMatrixCT_double_t", "RavlN::TMatrixC< RavlN::RealT > *|RavlN::TMatrixC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__TMatrixCT_float_t = {"_p_RavlN__TMatrixCT_float_t", "RavlN::TMatrixC< float > *|RavlN::TMatrixC< RavlN::FloatT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__TVectorCT_double_t = {"_p_RavlN__TVectorCT_double_t", "RavlN::TVectorC< RavlN::RealT > *|RavlN::TVectorC< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__TVectorCT_float_t = {"_p_RavlN__TVectorCT_float_t", "RavlN::TVectorC< float > *|RavlN::TVectorC< RavlN::FloatT > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__VectorC = {"_p_RavlN__VectorC", "RavlN::VectorC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RavlN__VectorMatrixC = {"_p_RavlN__VectorMatrixC", "RavlN::VectorMatrixC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_T = {"_p_T", "T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UIntT = {"_p_UIntT", "UIntT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *|RavlN::RealT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *|RavlN::FloatT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|RavlN::IntT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *|RavlN::Int64T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|RavlN::Int16T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "RavlN::SizeT *|size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|RavlN::ByteT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|RavlN::UIntT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|RavlN::UInt64T *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_Element1T,
  &_swigt__p_Element2T,
  &_swigt__p_K,
  &_swigt__p_RavlImageN__ByteRGBValueC,
  &_swigt__p_RavlImageN__FontC,
  &_swigt__p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t,
  &_swigt__p_RavlImageN__ImageCT_double_t,
  &_swigt__p_RavlImageN__ImageCT_unsigned_char_t,
  &_swigt__p_RavlImageN__RealRGBValueC,
  &_swigt__p_RavlN__Affine2dC,
  &_swigt__p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t,
  &_swigt__p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t,
  &_swigt__p_RavlN__Array2dCT_double_t,
  &_swigt__p_RavlN__Array2dCT_unsigned_char_t,
  &_swigt__p_RavlN__ClassifierC,
  &_swigt__p_RavlN__ClassifierDiscriminantFunctionC,
  &_swigt__p_RavlN__ConstDLIterCT_double_t,
  &_swigt__p_RavlN__ConstDLIterCT_int_t,
  &_swigt__p_RavlN__ConstDLIterCT_long_t,
  &_swigt__p_RavlN__ConstDLIterCT_short_t,
  &_swigt__p_RavlN__ConstDLIterCT_unsigned_char_t,
  &_swigt__p_RavlN__ConstDLIterCT_unsigned_int_t,
  &_swigt__p_RavlN__DLIterCT_RavlN__Point2dC_t,
  &_swigt__p_RavlN__DLIterCT_double_t,
  &_swigt__p_RavlN__DLIterCT_int_t,
  &_swigt__p_RavlN__DLIterCT_long_t,
  &_swigt__p_RavlN__DLIterCT_short_t,
  &_swigt__p_RavlN__DLIterCT_unsigned_char_t,
  &_swigt__p_RavlN__DLIterCT_unsigned_int_t,
  &_swigt__p_RavlN__DListCT_RavlN__Point2dC_t,
  &_swigt__p_RavlN__DListCT_double_t,
  &_swigt__p_RavlN__DListCT_int_t,
  &_swigt__p_RavlN__DListCT_long_t,
  &_swigt__p_RavlN__DListCT_short_t,
  &_swigt__p_RavlN__DListCT_unsigned_char_t,
  &_swigt__p_RavlN__DListCT_unsigned_int_t,
  &_swigt__p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t,
  &_swigt__p_RavlN__DataSet1CT_RavlN__SampleVectorC_t,
  &_swigt__p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t,
  &_swigt__p_RavlN__DataSetBaseC,
  &_swigt__p_RavlN__DataSetVectorLabelC,
  &_swigt__p_RavlN__DateC,
  &_swigt__p_RavlN__DesignClassifierLogisticRegressionC,
  &_swigt__p_RavlN__DesignClassifierNeuralNetwork2C,
  &_swigt__p_RavlN__DesignClassifierSupervisedC,
  &_swigt__p_RavlN__DesignDiscriminantFunctionC,
  &_swigt__p_RavlN__DesignFuncLSQC,
  &_swigt__p_RavlN__DesignFunctionSupervisedC,
  &_swigt__p_RavlN__ErrorC,
  &_swigt__p_RavlN__FunctionC,
  &_swigt__p_RavlN__GnuPlot2dC,
  &_swigt__p_RavlN__HashCT_long_long_t,
  &_swigt__p_RavlN__HashIterCT_long_long_t,
  &_swigt__p_RavlN__Index2dC,
  &_swigt__p_RavlN__IndexC,
  &_swigt__p_RavlN__IndexRange2dC,
  &_swigt__p_RavlN__IndexRangeC,
  &_swigt__p_RavlN__MatrixC,
  &_swigt__p_RavlN__MatrixRUTC,
  &_swigt__p_RavlN__MeanCovarianceC,
  &_swigt__p_RavlN__Point2dC,
  &_swigt__p_RavlN__PointSet2dC,
  &_swigt__p_RavlN__Polygon2dC,
  &_swigt__p_RavlN__RCHashCT_unsigned_int_RavlN__StringC_t,
  &_swigt__p_RavlN__RealRange2dC,
  &_swigt__p_RavlN__RealRangeC,
  &_swigt__p_RavlN__SArray1dCT_RavlN__IndexC_t,
  &_swigt__p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t,
  &_swigt__p_RavlN__SArray1dCT_RavlN__Point2dC_t,
  &_swigt__p_RavlN__SArray1dCT_RavlN__SampleVectorC_t,
  &_swigt__p_RavlN__SArray1dCT_RavlN__VectorC_t,
  &_swigt__p_RavlN__SArray1dCT_double_t,
  &_swigt__p_RavlN__SArray1dCT_float_t,
  &_swigt__p_RavlN__SArray1dCT_unsigned_int_t,
  &_swigt__p_RavlN__SArray2dCT_double_t,
  &_swigt__p_RavlN__SArray2dCT_float_t,
  &_swigt__p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t,
  &_swigt__p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t,
  &_swigt__p_RavlN__SampleCT_RavlN__VectorC_t,
  &_swigt__p_RavlN__SampleCT_double_t,
  &_swigt__p_RavlN__SampleCT_float_t,
  &_swigt__p_RavlN__SampleCT_unsigned_int_t,
  &_swigt__p_RavlN__SampleLabelC,
  &_swigt__p_RavlN__SampleLabelC__ElementT,
  &_swigt__p_RavlN__SampleVectorC,
  &_swigt__p_RavlN__SampleVectorC__ElementT,
  &_swigt__p_RavlN__SizeC,
  &_swigt__p_RavlN__StringC,
  &_swigt__p_RavlN__TMatrixCT_double_t,
  &_swigt__p_RavlN__TMatrixCT_float_t,
  &_swigt__p_RavlN__TVectorCT_double_t,
  &_swigt__p_RavlN__TVectorCT_float_t,
  &_swigt__p_RavlN__VectorC,
  &_swigt__p_RavlN__VectorMatrixC,
  &_swigt__p_T,
  &_swigt__p_UIntT,
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_long,
  &_swigt__p_short,
  &_swigt__p_size_t,
  &_swigt__p_std__ostream,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
};

static swig_cast_info _swigc__p_Element1T[] = {  {&_swigt__p_Element1T, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Element2T[] = {  {&_swigt__p_Element2T, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_K[] = {  {&_swigt__p_K, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlImageN__ByteRGBValueC[] = {  {&_swigt__p_RavlImageN__ByteRGBValueC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlImageN__FontC[] = {  {&_swigt__p_RavlImageN__FontC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t[] = {  {&_swigt__p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlImageN__ImageCT_double_t[] = {  {&_swigt__p_RavlImageN__ImageCT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlImageN__ImageCT_unsigned_char_t[] = {  {&_swigt__p_RavlImageN__ImageCT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlImageN__RealRGBValueC[] = {  {&_swigt__p_RavlImageN__RealRGBValueC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__Affine2dC[] = {  {&_swigt__p_RavlN__Affine2dC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t[] = {  {&_swigt__p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0, 0, 0},  {&_swigt__p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t, _p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_tTo_p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t[] = {  {&_swigt__p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__Array2dCT_double_t[] = {  {&_swigt__p_RavlN__Array2dCT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__Array2dCT_unsigned_char_t[] = {  {&_swigt__p_RavlN__Array2dCT_unsigned_char_t, 0, 0, 0},  {&_swigt__p_RavlImageN__ImageCT_unsigned_char_t, _p_RavlImageN__ImageCT_unsigned_char_tTo_p_RavlN__Array2dCT_unsigned_char_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ClassifierC[] = {  {&_swigt__p_RavlN__ClassifierC, 0, 0, 0},  {&_swigt__p_RavlN__ClassifierDiscriminantFunctionC, _p_RavlN__ClassifierDiscriminantFunctionCTo_p_RavlN__ClassifierC, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ClassifierDiscriminantFunctionC[] = {  {&_swigt__p_RavlN__ClassifierDiscriminantFunctionC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ConstDLIterCT_double_t[] = {  {&_swigt__p_RavlN__ConstDLIterCT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ConstDLIterCT_int_t[] = {  {&_swigt__p_RavlN__ConstDLIterCT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ConstDLIterCT_long_t[] = {  {&_swigt__p_RavlN__ConstDLIterCT_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ConstDLIterCT_short_t[] = {  {&_swigt__p_RavlN__ConstDLIterCT_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ConstDLIterCT_unsigned_char_t[] = {  {&_swigt__p_RavlN__ConstDLIterCT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ConstDLIterCT_unsigned_int_t[] = {  {&_swigt__p_RavlN__ConstDLIterCT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DLIterCT_RavlN__Point2dC_t[] = {  {&_swigt__p_RavlN__DLIterCT_RavlN__Point2dC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DLIterCT_double_t[] = {  {&_swigt__p_RavlN__DLIterCT_double_t, 0, 0, 0},  {&_swigt__p_RavlN__ConstDLIterCT_double_t, _p_RavlN__ConstDLIterCT_double_tTo_p_RavlN__DLIterCT_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DLIterCT_int_t[] = {  {&_swigt__p_RavlN__DLIterCT_int_t, 0, 0, 0},  {&_swigt__p_RavlN__ConstDLIterCT_int_t, _p_RavlN__ConstDLIterCT_int_tTo_p_RavlN__DLIterCT_int_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DLIterCT_long_t[] = {  {&_swigt__p_RavlN__DLIterCT_long_t, 0, 0, 0},  {&_swigt__p_RavlN__ConstDLIterCT_long_t, _p_RavlN__ConstDLIterCT_long_tTo_p_RavlN__DLIterCT_long_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DLIterCT_short_t[] = {  {&_swigt__p_RavlN__DLIterCT_short_t, 0, 0, 0},  {&_swigt__p_RavlN__ConstDLIterCT_short_t, _p_RavlN__ConstDLIterCT_short_tTo_p_RavlN__DLIterCT_short_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DLIterCT_unsigned_char_t[] = {  {&_swigt__p_RavlN__DLIterCT_unsigned_char_t, 0, 0, 0},  {&_swigt__p_RavlN__ConstDLIterCT_unsigned_char_t, _p_RavlN__ConstDLIterCT_unsigned_char_tTo_p_RavlN__DLIterCT_unsigned_char_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DLIterCT_unsigned_int_t[] = {  {&_swigt__p_RavlN__DLIterCT_unsigned_int_t, 0, 0, 0},  {&_swigt__p_RavlN__ConstDLIterCT_unsigned_int_t, _p_RavlN__ConstDLIterCT_unsigned_int_tTo_p_RavlN__DLIterCT_unsigned_int_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DListCT_RavlN__Point2dC_t[] = {  {&_swigt__p_RavlN__Polygon2dC, _p_RavlN__Polygon2dCTo_p_RavlN__DListCT_RavlN__Point2dC_t, 0, 0},  {&_swigt__p_RavlN__DListCT_RavlN__Point2dC_t, 0, 0, 0},  {&_swigt__p_RavlN__PointSet2dC, _p_RavlN__PointSet2dCTo_p_RavlN__DListCT_RavlN__Point2dC_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DListCT_double_t[] = {  {&_swigt__p_RavlN__DListCT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DListCT_int_t[] = {  {&_swigt__p_RavlN__DListCT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DListCT_long_t[] = {  {&_swigt__p_RavlN__DListCT_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DListCT_short_t[] = {  {&_swigt__p_RavlN__DListCT_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DListCT_unsigned_char_t[] = {  {&_swigt__p_RavlN__DListCT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DListCT_unsigned_int_t[] = {  {&_swigt__p_RavlN__DListCT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t[] = {  {&_swigt__p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DataSet1CT_RavlN__SampleVectorC_t[] = {  {&_swigt__p_RavlN__DataSetVectorLabelC, _p_RavlN__DataSetVectorLabelCTo_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0, 0},  {&_swigt__p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0, 0, 0},  {&_swigt__p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, _p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_tTo_p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t[] = {  {&_swigt__p_RavlN__DataSetVectorLabelC, _p_RavlN__DataSetVectorLabelCTo_p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0, 0},  {&_swigt__p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DataSetBaseC[] = {  {&_swigt__p_RavlN__DataSetVectorLabelC, _p_RavlN__DataSetVectorLabelCTo_p_RavlN__DataSetBaseC, 0, 0},  {&_swigt__p_RavlN__DataSetBaseC, 0, 0, 0},  {&_swigt__p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t, _p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_tTo_p_RavlN__DataSetBaseC, 0, 0},  {&_swigt__p_RavlN__DataSet1CT_RavlN__SampleVectorC_t, _p_RavlN__DataSet1CT_RavlN__SampleVectorC_tTo_p_RavlN__DataSetBaseC, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DataSetVectorLabelC[] = {  {&_swigt__p_RavlN__DataSetVectorLabelC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DateC[] = {  {&_swigt__p_RavlN__DateC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DesignClassifierLogisticRegressionC[] = {  {&_swigt__p_RavlN__DesignClassifierLogisticRegressionC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DesignClassifierNeuralNetwork2C[] = {  {&_swigt__p_RavlN__DesignClassifierNeuralNetwork2C, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DesignClassifierSupervisedC[] = {  {&_swigt__p_RavlN__DesignClassifierNeuralNetwork2C, _p_RavlN__DesignClassifierNeuralNetwork2CTo_p_RavlN__DesignClassifierSupervisedC, 0, 0},  {&_swigt__p_RavlN__DesignClassifierLogisticRegressionC, _p_RavlN__DesignClassifierLogisticRegressionCTo_p_RavlN__DesignClassifierSupervisedC, 0, 0},  {&_swigt__p_RavlN__DesignClassifierSupervisedC, 0, 0, 0},  {&_swigt__p_RavlN__DesignDiscriminantFunctionC, _p_RavlN__DesignDiscriminantFunctionCTo_p_RavlN__DesignClassifierSupervisedC, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DesignDiscriminantFunctionC[] = {  {&_swigt__p_RavlN__DesignDiscriminantFunctionC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DesignFuncLSQC[] = {  {&_swigt__p_RavlN__DesignFuncLSQC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__DesignFunctionSupervisedC[] = {  {&_swigt__p_RavlN__DesignFuncLSQC, _p_RavlN__DesignFuncLSQCTo_p_RavlN__DesignFunctionSupervisedC, 0, 0},  {&_swigt__p_RavlN__DesignFunctionSupervisedC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__ErrorC[] = {  {&_swigt__p_RavlN__ErrorC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__FunctionC[] = {  {&_swigt__p_RavlN__FunctionC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__GnuPlot2dC[] = {  {&_swigt__p_RavlN__GnuPlot2dC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__HashCT_long_long_t[] = {  {&_swigt__p_RavlN__HashCT_long_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__HashIterCT_long_long_t[] = {  {&_swigt__p_RavlN__HashIterCT_long_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__Index2dC[] = {  {&_swigt__p_RavlN__Index2dC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__IndexC[] = {  {&_swigt__p_RavlN__IndexC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__IndexRange2dC[] = {  {&_swigt__p_RavlN__IndexRange2dC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__IndexRangeC[] = {  {&_swigt__p_RavlN__IndexRangeC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__MatrixC[] = {  {&_swigt__p_RavlN__MatrixC, 0, 0, 0},  {&_swigt__p_RavlN__MatrixRUTC, _p_RavlN__MatrixRUTCTo_p_RavlN__MatrixC, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__MatrixRUTC[] = {  {&_swigt__p_RavlN__MatrixRUTC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__MeanCovarianceC[] = {  {&_swigt__p_RavlN__MeanCovarianceC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__Point2dC[] = {  {&_swigt__p_RavlN__Point2dC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__PointSet2dC[] = {  {&_swigt__p_RavlN__Polygon2dC, _p_RavlN__Polygon2dCTo_p_RavlN__PointSet2dC, 0, 0},  {&_swigt__p_RavlN__PointSet2dC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__Polygon2dC[] = {  {&_swigt__p_RavlN__Polygon2dC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__RCHashCT_unsigned_int_RavlN__StringC_t[] = {  {&_swigt__p_RavlN__RCHashCT_unsigned_int_RavlN__StringC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__RealRange2dC[] = {  {&_swigt__p_RavlN__RealRange2dC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__RealRangeC[] = {  {&_swigt__p_RavlN__RealRangeC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray1dCT_RavlN__IndexC_t[] = {  {&_swigt__p_RavlN__SArray1dCT_RavlN__IndexC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t[] = {  {&_swigt__p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray1dCT_RavlN__Point2dC_t[] = {  {&_swigt__p_RavlN__SArray1dCT_RavlN__Point2dC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray1dCT_RavlN__SampleVectorC_t[] = {  {&_swigt__p_RavlN__SArray1dCT_RavlN__SampleVectorC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray1dCT_RavlN__VectorC_t[] = {  {&_swigt__p_RavlN__SArray1dCT_RavlN__VectorC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray1dCT_double_t[] = {  {&_swigt__p_RavlN__SArray1dCT_double_t, 0, 0, 0},  {&_swigt__p_RavlN__VectorC, _p_RavlN__VectorCTo_p_RavlN__SArray1dCT_double_t, 0, 0},  {&_swigt__p_RavlN__TVectorCT_double_t, _p_RavlN__TVectorCT_double_tTo_p_RavlN__SArray1dCT_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray1dCT_float_t[] = {  {&_swigt__p_RavlN__SArray1dCT_float_t, 0, 0, 0},  {&_swigt__p_RavlN__TVectorCT_float_t, _p_RavlN__TVectorCT_float_tTo_p_RavlN__SArray1dCT_float_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray1dCT_unsigned_int_t[] = {  {&_swigt__p_RavlN__SArray1dCT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray2dCT_double_t[] = {  {&_swigt__p_RavlN__MatrixC, _p_RavlN__MatrixCTo_p_RavlN__SArray2dCT_double_t, 0, 0},  {&_swigt__p_RavlN__SArray2dCT_double_t, 0, 0, 0},  {&_swigt__p_RavlN__TMatrixCT_double_t, _p_RavlN__TMatrixCT_double_tTo_p_RavlN__SArray2dCT_double_t, 0, 0},  {&_swigt__p_RavlN__MatrixRUTC, _p_RavlN__MatrixRUTCTo_p_RavlN__SArray2dCT_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SArray2dCT_float_t[] = {  {&_swigt__p_RavlN__SArray2dCT_float_t, 0, 0, 0},  {&_swigt__p_RavlN__TMatrixCT_float_t, _p_RavlN__TMatrixCT_float_tTo_p_RavlN__SArray2dCT_float_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t[] = {  {&_swigt__p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t[] = {  {&_swigt__p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleCT_RavlN__VectorC_t[] = {  {&_swigt__p_RavlN__SampleVectorC, _p_RavlN__SampleVectorCTo_p_RavlN__SampleCT_RavlN__VectorC_t, 0, 0},  {&_swigt__p_RavlN__SampleCT_RavlN__VectorC_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleCT_double_t[] = {  {&_swigt__p_RavlN__SampleCT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleCT_float_t[] = {  {&_swigt__p_RavlN__SampleCT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleCT_unsigned_int_t[] = {  {&_swigt__p_RavlN__SampleLabelC, _p_RavlN__SampleLabelCTo_p_RavlN__SampleCT_unsigned_int_t, 0, 0},  {&_swigt__p_RavlN__SampleCT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleLabelC[] = {  {&_swigt__p_RavlN__SampleLabelC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleLabelC__ElementT[] = {  {&_swigt__p_RavlN__SampleLabelC__ElementT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleVectorC[] = {  {&_swigt__p_RavlN__SampleVectorC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SampleVectorC__ElementT[] = {  {&_swigt__p_RavlN__SampleVectorC__ElementT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__SizeC[] = {  {&_swigt__p_RavlN__SizeC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__StringC[] = {  {&_swigt__p_RavlN__StringC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__TMatrixCT_double_t[] = {  {&_swigt__p_RavlN__MatrixC, _p_RavlN__MatrixCTo_p_RavlN__TMatrixCT_double_t, 0, 0},  {&_swigt__p_RavlN__TMatrixCT_double_t, 0, 0, 0},  {&_swigt__p_RavlN__MatrixRUTC, _p_RavlN__MatrixRUTCTo_p_RavlN__TMatrixCT_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__TMatrixCT_float_t[] = {  {&_swigt__p_RavlN__TMatrixCT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__TVectorCT_double_t[] = {  {&_swigt__p_RavlN__TVectorCT_double_t, 0, 0, 0},  {&_swigt__p_RavlN__VectorC, _p_RavlN__VectorCTo_p_RavlN__TVectorCT_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__TVectorCT_float_t[] = {  {&_swigt__p_RavlN__TVectorCT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__VectorC[] = {  {&_swigt__p_RavlN__VectorC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RavlN__VectorMatrixC[] = {  {&_swigt__p_RavlN__VectorMatrixC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_T[] = {  {&_swigt__p_T, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIntT[] = {  {&_swigt__p_UIntT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_Element1T,
  _swigc__p_Element2T,
  _swigc__p_K,
  _swigc__p_RavlImageN__ByteRGBValueC,
  _swigc__p_RavlImageN__FontC,
  _swigc__p_RavlImageN__ImageCT_RavlImageN__ByteRGBValueC_t,
  _swigc__p_RavlImageN__ImageCT_double_t,
  _swigc__p_RavlImageN__ImageCT_unsigned_char_t,
  _swigc__p_RavlImageN__RealRGBValueC,
  _swigc__p_RavlN__Affine2dC,
  _swigc__p_RavlN__Array2dCT_RavlImageN__ByteRGBValueC_t,
  _swigc__p_RavlN__Array2dCT_RavlImageN__RealRGBValueC_t,
  _swigc__p_RavlN__Array2dCT_double_t,
  _swigc__p_RavlN__Array2dCT_unsigned_char_t,
  _swigc__p_RavlN__ClassifierC,
  _swigc__p_RavlN__ClassifierDiscriminantFunctionC,
  _swigc__p_RavlN__ConstDLIterCT_double_t,
  _swigc__p_RavlN__ConstDLIterCT_int_t,
  _swigc__p_RavlN__ConstDLIterCT_long_t,
  _swigc__p_RavlN__ConstDLIterCT_short_t,
  _swigc__p_RavlN__ConstDLIterCT_unsigned_char_t,
  _swigc__p_RavlN__ConstDLIterCT_unsigned_int_t,
  _swigc__p_RavlN__DLIterCT_RavlN__Point2dC_t,
  _swigc__p_RavlN__DLIterCT_double_t,
  _swigc__p_RavlN__DLIterCT_int_t,
  _swigc__p_RavlN__DLIterCT_long_t,
  _swigc__p_RavlN__DLIterCT_short_t,
  _swigc__p_RavlN__DLIterCT_unsigned_char_t,
  _swigc__p_RavlN__DLIterCT_unsigned_int_t,
  _swigc__p_RavlN__DListCT_RavlN__Point2dC_t,
  _swigc__p_RavlN__DListCT_double_t,
  _swigc__p_RavlN__DListCT_int_t,
  _swigc__p_RavlN__DListCT_long_t,
  _swigc__p_RavlN__DListCT_short_t,
  _swigc__p_RavlN__DListCT_unsigned_char_t,
  _swigc__p_RavlN__DListCT_unsigned_int_t,
  _swigc__p_RavlN__DPIPortCT_RavlImageN__ImageCT_RavlN__ByteT_t_t,
  _swigc__p_RavlN__DataSet1CT_RavlN__SampleVectorC_t,
  _swigc__p_RavlN__DataSet2CT_RavlN__SampleVectorC_RavlN__SampleLabelC_t,
  _swigc__p_RavlN__DataSetBaseC,
  _swigc__p_RavlN__DataSetVectorLabelC,
  _swigc__p_RavlN__DateC,
  _swigc__p_RavlN__DesignClassifierLogisticRegressionC,
  _swigc__p_RavlN__DesignClassifierNeuralNetwork2C,
  _swigc__p_RavlN__DesignClassifierSupervisedC,
  _swigc__p_RavlN__DesignDiscriminantFunctionC,
  _swigc__p_RavlN__DesignFuncLSQC,
  _swigc__p_RavlN__DesignFunctionSupervisedC,
  _swigc__p_RavlN__ErrorC,
  _swigc__p_RavlN__FunctionC,
  _swigc__p_RavlN__GnuPlot2dC,
  _swigc__p_RavlN__HashCT_long_long_t,
  _swigc__p_RavlN__HashIterCT_long_long_t,
  _swigc__p_RavlN__Index2dC,
  _swigc__p_RavlN__IndexC,
  _swigc__p_RavlN__IndexRange2dC,
  _swigc__p_RavlN__IndexRangeC,
  _swigc__p_RavlN__MatrixC,
  _swigc__p_RavlN__MatrixRUTC,
  _swigc__p_RavlN__MeanCovarianceC,
  _swigc__p_RavlN__Point2dC,
  _swigc__p_RavlN__PointSet2dC,
  _swigc__p_RavlN__Polygon2dC,
  _swigc__p_RavlN__RCHashCT_unsigned_int_RavlN__StringC_t,
  _swigc__p_RavlN__RealRange2dC,
  _swigc__p_RavlN__RealRangeC,
  _swigc__p_RavlN__SArray1dCT_RavlN__IndexC_t,
  _swigc__p_RavlN__SArray1dCT_RavlN__MeanCovarianceC_t,
  _swigc__p_RavlN__SArray1dCT_RavlN__Point2dC_t,
  _swigc__p_RavlN__SArray1dCT_RavlN__SampleVectorC_t,
  _swigc__p_RavlN__SArray1dCT_RavlN__VectorC_t,
  _swigc__p_RavlN__SArray1dCT_double_t,
  _swigc__p_RavlN__SArray1dCT_float_t,
  _swigc__p_RavlN__SArray1dCT_unsigned_int_t,
  _swigc__p_RavlN__SArray2dCT_double_t,
  _swigc__p_RavlN__SArray2dCT_float_t,
  _swigc__p_RavlN__SampleCT_RavlN__SampleVectorC__ElementT_t,
  _swigc__p_RavlN__SampleCT_RavlN__TVectorCT_RavlN__FloatT_t_t,
  _swigc__p_RavlN__SampleCT_RavlN__VectorC_t,
  _swigc__p_RavlN__SampleCT_double_t,
  _swigc__p_RavlN__SampleCT_float_t,
  _swigc__p_RavlN__SampleCT_unsigned_int_t,
  _swigc__p_RavlN__SampleLabelC,
  _swigc__p_RavlN__SampleLabelC__ElementT,
  _swigc__p_RavlN__SampleVectorC,
  _swigc__p_RavlN__SampleVectorC__ElementT,
  _swigc__p_RavlN__SizeC,
  _swigc__p_RavlN__StringC,
  _swigc__p_RavlN__TMatrixCT_double_t,
  _swigc__p_RavlN__TMatrixCT_float_t,
  _swigc__p_RavlN__TVectorCT_double_t,
  _swigc__p_RavlN__TVectorCT_float_t,
  _swigc__p_RavlN__VectorC,
  _swigc__p_RavlN__VectorMatrixC,
  _swigc__p_T,
  _swigc__p_UIntT,
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_long,
  _swigc__p_short,
  _swigc__p_size_t,
  _swigc__p_std__ostream,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
#endif
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,  /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      /* for Python 3 we already assigned ob_type in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
      varlink_type.ob_type = &PyType_Type;
#endif
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d;  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  SWIG_Python_SetConstant(d, "DATASET_NORMALISE_NONE",SWIG_From_int(static_cast< int >(DATASET_NORMALISE_NONE)));
  SWIG_Python_SetConstant(d, "DATASET_NORMALISE_MEAN",SWIG_From_int(static_cast< int >(DATASET_NORMALISE_MEAN)));
  SWIG_Python_SetConstant(d, "DATASET_NORMALISE_SCALE",SWIG_From_int(static_cast< int >(DATASET_NORMALISE_SCALE)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

