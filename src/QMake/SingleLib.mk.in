
INSTALLHOME=@abs_top_builddir@

include $(INSTALLHOME)/share/RAVL/QMake/Definitions.mk

LIB_WORK=$(INSTALLHOME)/lib/RAVL/$(ARC)/$(VAR)

#BUILT_ROOT=$(INSTALLHOME)/$(LOGNAME)/qm/$(INSTALLHOME)/$(ARC)
BUILT_ROOT=$(INSTALLHOME)/$(ARC)



buildsinglelibs: makedirs buildstatic buildshared

makedirs: $(LIB_WORK)/single $(LIB_WORK)/shared/single

$(LIB_WORK)/single:
	@if [ ! -d $(LIB_WORK)/single ]; then $(MKDIR_P) $(LIB_WORK)/single; fi

$(LIB_WORK)/shared:
	@if [ ! -d $(LIB_WORK)/shared ]; then $(MKDIR_P) $(LIB_WORK)/shared; fi
	
$(LIB_WORK)/shared/single: $(LIB_WORK)/shared
	@if [ ! -d $(LIB_WORK)/shared/single ]; then $(MKDIR_P) $(LIB_WORK)/shared/single; fi
	

# Ordered list of the libraries we want in libRavl.* 
ORDERED_LIST=@avifile_SUPPORT@ libRavlMPEG2 @devVideo4Linux_SUPPORT@ @libffmpeg_SUPPORT@ libRavlVideoIO @dvdread_SUPPORT@ @libmpeg2_SUPPORT@ @libavc1394_SUPPORT@ @libDV_SUPPORT@ @RavlRawVidIO@ @RavlExtImgIO@ @MacOSXVideoCapture_SUPPORT@ @MacOSXRunLoop_SUPPORT@ @RavlVDF@ @SwigPython_SUPPORT@ @RavlDPDisplay@ @Meteor1_SUPPORT@ libRavlAV @RavlChartDetector@ @RavlAAM@ @RavlImageProc@ @uEyeSDK_SUPPORT@ @libmpeg_SUPPORT@ @OpenGL_SUPPORT@ libRavlImageXMLFactory @libClipStationPro_SUPPORT@ libRavlImageIO @LibJasper_SUPPORT@ @OpenCV_SUPPORT@ @RavlVPlay@ @Ravl2dGUI_LIBS@ @libdc1394_SUPPORT@ libRavlVideo @LibGd_SUPPORT@ @devVideo4Linux2_SUPPORT@ @OpenSceneGraph_SUPPORT@ @Ravl3d_LIBS@ @LibDirectShow_SUPPORT@ libRavlImage @libAudioFile_SUPPORT@ @RavlDevAudio@ libRavlAudioFeatures libRavlAudioIO libRavlAudioUtil @iksemel_SUPPORT@ @Loudmouth_SUPPORT@ @RavlXMPP@ @RLog_SUPPORT@ @SGIVL_SUPPORT@ @RavlDataServer@ libOptimisation @RavlLogic_LIBS@ libRavlPatternRecIO libRavlKalmanFilter libRavlSVM libRavlPatternRec libRavlOSIO  @ParallelIO_SUPPORT@ @SerialIO_SUPPORT@ @libGuppi_SUPPORT@ @GnuPlot_SUPPORT@ @RavlClassWizard@ libRavlCxxDoc @RavlAutoPort@ libRavlAutoPort2 libRavlSourceTools @LibPython_SUPPORT@ @RavlNet@ @libehs_SUPPORT@ libRavlDPMT @UUIdTheo_SUPPORT@ @LibGnome_SUPPORT@ @libglade2_SUPPORT@ @RavlGUI@ libRavlMathIO libRavlXMLFactory @libCurl_SUPPORT@ libRavlThreads libRavlOS libRavlIO @libmcrypt_SUPPORT@ libRavlOptimise @RavlCameraCal@ @libmkl_SUPPORT@ @LAPACK_SUPPORT@ libRavlMath libccmath libfann libArffIO @Zlib_SUPPORT@ libRavlHMM libRavlCore 


# Fullpath version of $(ORDERED_LIST) as static libs
ORDERED_PATHS=$(patsubst %,$(LIB_WORK)/%.a,$(ORDERED_LIST))


# Full list of object files that make up the single library (shared or static)
# Made from using $(ORDERED_LIST) which lists what order to use the individual
# $(XXX_OBJS) $(YYY_OBJS) object file listings and the values of the $(ZZZ_OBJS)
# lists themselves
ORDERED_OBJ_LIST=$(patsubst %,$$(%_OBJS),$(ORDERED_LIST))
$(eval ORDERED_OBJS=$(ORDERED_OBJ_LIST))


# List of libraries that have been built
BUILT_LIBS=$(wildcard $(LIB_WORK)/*.a)


# Check that no needed libraries are missing
MISSING=$(filter-out $(BUILT_LIBS),$(ORDERED_PATHS))
ifneq "" "$(strip $(MISSING))"
  $(error Error $(MISSING) not present)
endif


# Make sure we've not missed updating this Makefile for any new library
NEW=$(filter-out $(ORDERED_PATHS),$(BUILT_LIBS))
ifneq ($(strip  $(NEW)),)
  $(warning Addition of $(NEW) not accounted for.)
  $(warning Please report this as a bug.)
  NEW_OBJ_LIST=$(patsubst $(LIB_WORK)/%.a,$$(%_OBJS),$(NEW))
  $(eval NEW_OBJS=$(NEW_OBJ_LIST))
endif

# For each library we have, define XXX_OBJS (where XXX is the library name) as 
# the list of object files in that library
define LIST_OBJS_IN_dotA
 $(1)_OBJS=$(shell $(AR) -t $(LIB_WORK)/$(1).a | $(AWK) '{ print "$(BUILT_ROOT)/$(patsubst lib%,%,$(1))/$(VAR)/objs/"$$1 }')
endef

$(foreach lib,$(BUILT_LIBS),$(eval $(call LIST_OBJS_IN_dotA,$(basename $(notdir $(lib))))))


# Make libRavl.a from the objects in any new libraries we have found plus the
# objects from the known ordered list
buildstatic: $(LIB_WORK)/single/libRavl.a

$(LIB_WORK)/single/libRavl.a: $(NEW_OBJS) $(ORDERED_OBJS)
	$(AR) -rvs $@ $?


# Shared objects come from the original target directory so substitue path
# Existing pattern = $(BUILT_ROOT)/<LibName>/$(VAR)/objs/<ObjName>
# Shared obj location = $(BUILT_ROOT)/<LibName>/$(VAR)/shared/<ObjName>
SHARED_OBJS=$(subst /$(VAR)/objs/,/$(VAR)/shared/objs/,$(NEW_OBJS) $(ORDERED_OBJS))


# Make libRavl.so from the objects in any new libraries we have found plus the
# objects from the known ordered list
buildshared: $(LIB_WORK)/shared/single/libRavl.so

$(LIB_WORK)/shared/single/libRavl.so: $(SHARED_OBJS)
	$(CXX) $(RAVL_LDLIBFLAGS) $(LDLIBFLAGS) $(SHARED_OBJS) $(ALL_EXTERNAL_LIBS) -o $@


clean:
	$(RM) -rf $(LIB_WORK)/single
	$(RM) -rf $(LIB_WORK)/shared/single

.PHONY: buildsinglelibs buildshared buildstatic clean makedirs vars


#List out the main variables used
vars: 
	@echo ORDERED_LIST=$(ORDERED_LIST)
	@echo
	@echo ORDERED_PATHS=$(ORDERED_PATHS)
	@echo
	@echo BUILT_LIBS=$(BUILT_LIBS)
	@echo
	@echo NEW=$(NEW)
	@echo
	@echo NEW_OBJS=$(NEW_OBJS)
	@echo
	@echo ORDERED_OBJS=$(ORDERED_OBJS)
	@echo
	@echo SHARED_OBJS=$(SHARED_OBJS)
	@echo
	@echo MISSING=$(MISSING)

