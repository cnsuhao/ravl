dnl This file is part of QMake, Quick Make System
dnl Copyright (C) 2015, University of Surrey
dnl This code may be redistributed under the terms of the GNU General
dnl Public License (GPL). See the gpl.licence file for details or
dnl see http://www.gnu.org/copyleft/gpl.html
dnl
dnl file-header-ends-here



dnl QM_CK_PREREQ_STATE
dnl
dnl Macro to check if we currently know if the pre-requisites of the specified
dnl external library package exist on the system. This macro is for libraries
dnl specified as requiring a bespoke or compilation check rather than being
dnl specified via pkg-config.
dnl
dnl Any package that is quantified as being either present or absent will be
dnl removed from the global variable LeftToDo At the same time, a quantified
dnl package will be added to the list held by the RecentlyProcessed variable.
dnl
dnl Macro parameters are:
dnl       p1: QMake name for the external package
dnl
dnl Global variables used:
dnl
dnl   All variables listed with a <lib> in their name exist for each library
dnl   that has been declared (via a QM_DEFINE_EXTLIB_[CP]C) with the <lib>
dnl   being replaced by the RESOURCE name of the package. For example,
dnl   the OpenCV package will have variables named with_OpenCV_prq;
dnl   use_OpenCV; etc. Similarly, libGTK2 has variables use_libGTK2;
dnl   with_libGTK2_prq; etc.
dnl
dnl       LeftToDo                   List of the external libs that remain to
dnl                                  be processed. As the compilation check
dnl                                  packages should be processed last, this
dnl                                  variable is analogous to the list of
dnl                                  compile check libs that remain to be
dnl                                  tested. This macro deletes <lib> from
dnl                                  this list if it can determine if <lib>
dnl                                  is available for use.
dnl       RecentlyProcessed          Keeps track of the recently located libs.
dnl                                  This macro adds <lib> to this list if it
dnl                                  can determine whether or not the package
dnl                                  is available.
dnl       process_now                Initialised by this macro to signal if the
dnl                                  library package is ready for its
dnl                                  availability check or if we should delay
dnl                                  the check (usually to allow us to find a
dnl                                  pre-requisite first).
dnl       SED                        Standard substitution variable pointing
dnl                                  to the UNIX sed command.
dnl       TRACE_INDENT               Variable used for indenting trace debug
dnl                                  messages (when DBG is set). The current
dnl                                  convention in this script is to employ
dnl                                  an indent of 5 spaces per level of
dnl                                  nesting in the code i.e. set the var to
dnl                                  "     " for the first for loop, set it
dnl                                  to "          " for the second, etc.
dnl       with_<lib>_prq             Holds the list of prerequisite libraries
dnl                                  that external library <lib> is dependant
dnl                                  on.
dnl       use_<lib>                  Flag specifying useage of library,
dnl                                  initially primed from the command line
dnl                                  settings, this will be updated to
dnl                                  reflect the availability of the library
dnl                                  <lib>
dnl
dnl   The following are all interim variables used within this macro:
dnl
dnl     dependant; dependant_state; prereqs; prq; prq_state
dnl
AC_DEFUN([QM_CK_PREREQ_STATE],
         [trace 5 Checking the status of the prerequisites of $1
          dependant=$1
          dnl Use intermediate variable to circumvent any issues over macro
          dnl substitution when we need to use {$dependant} in the code

          eval dependant_state="\$use_${dependant}"
          eval prereqs="\$with_${dependant}_prq"
          process_now=yes
          if ( test "x$prereqs" != x )
          then
             TRACE_INDENT="     "
             trace 4 Checking we know the status of all the pre-requisites of $dependant @<:@$prereqs@:>@
             for prq in $prereqs
             do
                eval prq_state=\$use_${prq}
                case "$prq_state" in
                   present )     TRACE_INDENT="          "
                                 trace 6 $prq is present
                                 ;;
                   no )          case $dependant_state in
                                    check )  TRACE_INDENT="          "
                                             trace 6 $prq is disabled, disabling $dependant
                                             eval use_${dependant}=blocked
                                             LeftToDo=`echo " $LeftToDo " | $SED "s/ $dependant / /"`
                                             RecentlyProcessed="$RecentlyProcessed $dependant"
                                             process_now=no
                                             break
                                             ;;
                                    needed ) AC_MSG_FAILURE([Library $dependant is a pre-requisite of a selected library but is unavailable due to a disabled pre-requisite])
                                             ;;
                                    yes )    AC_MSG_FAILURE([Required library $dependant is unavailable due to a disabled pre-requisite])
                                             ;;
                                 esac
                                 ;;
                   missing )     case $dependant_state in
                                    check )  TRACE_INDENT="          "
                                             trace 6 $prq is not available, disabling $dependant
                                             eval use_${dependant}=blocked
                                             LeftToDo=`echo " $LeftToDo " | $SED "s/ $dependant / /"`
                                             RecentlyProcessed="$RecentlyProcessed $dependant"
                                             process_now=no
                                             break
                                             ;;
                                    needed ) AC_MSG_FAILURE([Library $dependant is a pre-requisite of a selected library but is unavailable due to a missing pre-requisite])
                                             ;;
                                    yes )    AC_MSG_FAILURE([Required library $dependant is unavailable due to a missing pre-requisite])
                                             ;;
                                 esac
                                 ;;
                   blocked )     case $dependant_state in
                                    check )  TRACE_INDENT="          "
                                             trace 6 $prq is blocked, disabling $dependant
                                             eval use_${dependant}=blocked
                                             LeftToDo=`echo " $LeftToDo " | $SED "s/ $dependant / /"`
                                             RecentlyProcessed="$RecentlyProcessed $dependant"
                                             process_now=no
                                             break
                                             ;;
                                    needed ) AC_MSG_FAILURE([Library $dependant is a pre-requisite of a selected library but is unavailable due to a missing pre-requisite])
                                             ;;
                                    yes )    AC_MSG_FAILURE([Required library $dependant is unavailable due to a missing pre-requisite])
                                             ;;
                                 esac
                                 ;;
                   check | needed | yes )
                                 TRACE_INDENT="          "
                                 trace 6 $prq has not yet been checked, cannot check $dependant at the moment
                                 process_now=no
                                 # Do not break in case we can
                                 # mark the library as blocked
                                 # by dint of another pre-req.
                                 ;;
                   * )           case $dependant_state in
                                    check )  TRACE_INDENT="          "
                                             trace 1 Assert - unrecognised state for prerequisite $prq, disabling $dependant
                                             eval use_${dependant}=blocked
                                             LeftToDo=`echo " $LeftToDo " | $SED "s/ $dependant / /"`
                                             RecentlyProcessed="$RecentlyProcessed $dependant"
                                             process_now=no
                                             break
                                             ;;
                                    needed ) AC_MSG_FAILURE([Library $dependant is a prerequisite of a selected library but is unavailable due to a indeterminate pre-requisite state])
                                             ;;
                                    yes )    AC_MSG_FAILURE([Required library $dependant is unavailable due to a indeterminate pre-requisite state])
                                             ;;
                                 esac
                                 ;;
                esac
             done
          fi
         ]
        )
