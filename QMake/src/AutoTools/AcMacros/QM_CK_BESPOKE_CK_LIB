dnl This file is part of QMake, Quick Make System
dnl Copyright (C) 2015-16, University of Surrey
dnl This code may be redistributed under the terms of the GNU General
dnl Public License (GPL). See the gpl.licence file for details or
dnl see http://www.gnu.org/copyleft/gpl.html
dnl
dnl file-header-ends-here


dnl QM_CK_BESPOKE_CK_LIB
dnl
dnl Macro to attempt to check if the specified external library package exists
dnl on the system. This macro is for libraries specified as requiring a
dnl bespoke check rather than being specified via pkg-config or requiring a
dnl standard compilation check. The bespoke code should be provided as a
dnl case block in the appropriate case statement in this macro.
dnl
dnl All libraries to be checked must have previously been declared via either
dnl the QM_DEFINE_EXTIB_BESPOKE or the QM_DEFINE_EXTIB_BESPOKE_CC macro. Any
dnl package that is quantified as being either present or absent will be
dnl removed from the global variable LeftToDo At the same time, a quantified
dnl package will be added to the list held by the RecentlyProcessed variable.
dnl
dnl Macro parameters are:
dnl       p1: QMake name for the external package to be tested
dnl
dnl Global variables used:
dnl
dnl   All variables listed with a <lib> in their name exist for each library
dnl   that has been declared (via a QM_DEFINE_EXTLIB_[CP]C) with the <lib>
dnl   being replaced by the RESOURCE name of the package. For example,
dnl   the OpenCV package will have variables named with_OpenCV_prq;
dnl   use_OpenCV; etc. Similarly, libGTK2 has variables use_libGTK2;
dnl   with_libGTK2_prq; etc.
dnl
dnl       CDC_HDR                } { Receives the type of header file layout
dnl       FMT_HDR                } { in use for the particular sub-package of
dnl       SWS_HDR                } { FFMPEG. Will be set to old; new; either
dnl       UTIL_HDR               } { or notfound dependant on the available
dnl                                { versions of the sub-packages. If all 4
dnl                                { packages are available, a consistent
dnl                                { grouping will be preferred (either all
dnl                                { old or all new), with the new layout
dnl                                { being preferred if either is available
dnl                                { for all 4.
dnl       CONFIGURE_NVCCFLAGS        Initialised here to hold any NVCCFLAGS
dnl                                  that the user may have set in their
dnl                                  environment. This variable is only
dnl                                  initialised if the CUDA compiler is
dnl                                  actually located (or user-specified).
dnl       DBG                        Variable that holds the current trace
dnl                                  level as requested by the user. Requires
dnl                                  the inclusion of the debug function
dnl                                  "trace" in any code calling this macro.
dnl                                  A suitable trace function is defined in
dnl                                  the QMake AcMacros/QM_Debug_fn file.
dnl       FFMPEG_HDR_FMT             Receives the consistent layout, if it
dnl                                  exists, of the individual FFMPEG header
dnl                                  files. If a set of 4 consistent hdr sets
dnl                                  is not present, this variable will be
dnl                                  set to broken and the libffmpeg virtual
dnl                                  package will be disabled.
dnl       GXX                        Variable indicates if our C++ compile is
dnl                                  the GNU compiler (or GNU-compatible).
dnl       InheritCFG                 Specifies if we should use the QMAKE_CFG
dnl                                  file to bootstrap our configuration
dnl                                  settings.
dnl       LeftToDo                   List of the external libs that remain to
dnl                                  be processed. As the compilation check
dnl                                  packages should be processed last, this
dnl                                  variable is analogous to the list of
dnl                                  compile check libs that remain to be
dnl                                  tested. This macro deletes <lib> from
dnl                                  this list if it can determine if <lib>
dnl                                  is available for use.
dnl       NVCC                       Holds the path to the CUDA compiler
dnl                                  driver. Can initially be primed by the
dnl                                  user to force the use of a particular
dnl                                  program. May be updated by the
dnl                                  configure script to include extra
dnl                                  global compiler options.
dnl       NVCCFLAGS                  More an environment variable than a
dnl                                  script variable. Allows the user to
dnl                                  provide a set of compiler flags for the
dnl                                  nVidia compiler driver (or flags to be
dnl                                  used for the regular compiler while
dnl                                  building CUDA source code).
dnl       QMAKE_CFG                  Holds the location of the configuration
dnl                                  file for the copy of QMake that is in
dnl                                  use. Originally primed by calling the
dnl                                  QM_LOCATE_QMAKE macro.
dnl       RecentlyProcessed          Keeps track of the recently located libs.
dnl                                  This macro adds <lib> to this list if it
dnl                                  can determine whether or not the package
dnl                                  is available.
dnl       SED                        Standard substitution variable pointing
dnl                                  to the UNIX sed command.
dnl       TRACE_INDENT               Variable used for indenting trace debug
dnl                                  messages (when DBG is set). The current
dnl                                  convention in this script is to employ
dnl                                  an indent of 5 spaces per level of
dnl                                  nesting in the code i.e. set the var to
dnl                                  "     " for the first for loop, set it
dnl                                  to "          " for the second, etc.
dnl       USER_NVCC                  Records any user-specified setting for
dnl                                  the NVCC variable which specifies the
dnl                                  CUDA compiler driver program.
dnl       <lib>_CFLAGS               Substitution variable (variable that is
dnl                                  output to the configuration file for the
dnl                                  (QMake) client project (i.e. to the
dnl                                  Config.Project file) that receives the
dnl                                  CFLAGS required when compiling with the
dnl                                  external library. This macros does not
dnl                                  set this variable, merely declare it for
dnl                                  substitution out to the configuration
dnl                                  file.
dnl       <lib>_LIBS                 Substitution variable that receives the
dnl                                  link line settings needed to link with
dnl                                  the <lib> package. This info is supplied
dnl                                  as on the link line itself  i.e. library
dnl                                  names are specified in -lX form and the
dnl                                  setting may include -Lpath entries. This
dnl                                  macros does not set this variable,
dnl                                  merely declare it for substitution out
dnl                                  to the configuration file.
dnl       process_now                Indicates if we should process the
dnl                                  library now or delay checking for its
dnl                                  existance (usually to allow us to find a
dnl                                  pre-requisite first).
dnl       use_<lib>                  Flag specifying useage of library,
dnl                                  initially primed from the command line
dnl                                  settings, this will be updated to
dnl                                  reflect the availability of the library
dnl                                  <lib>
dnl       with_<lib>_check           Flag specifying the type of test needed
dnl                                  to check for the existance of the
dnl                                  external library:
dnl                                    bespoke      - test for the external
dnl                                                   library has been written
dnl                                                   in bespoke code located
dnl                                                   towards the start of the
dnl                                                   macro QM_PROCESS_EXTLIBS.
dnl                                    compile      - test for the external
dnl                                                   library involves a test
dnl                                                   compilation to see if
dnl                                                   the library is available.
dnl                                    pkgconfig    - test for the external
dnl                                                   library using pkg-config.
dnl                                    virtual      - external library is a
dnl                                                   virtual set of libraries
dnl                                                   that is implicitly
dnl                                                   available if all of the
dnl                                                   precursor libraries are
dnl                                                   available.
dnl                                  Initialised by the QM_DEFINE_EXTLIB_CC or
dnl                                  QM_DEFINE_EXTLIB_GENERIC macros.
dnl                                  For any test-type, if the user provides
dnl                                  a --with-<lib>-pkgconf setting, this will
dnl                                  automatically force the test-type to be
dnl                                  pkgconfig.
dnl       with_<lib>_prq             Holds the list of prerequisite libraries
dnl                                  that external library <lib> is dependant
dnl                                  on.
dnl
dnl   The following are all interim variables used within this macro:
dnl
dnl       h; path; prereq; result; test_lib; test_enablement
dnl
AC_DEFUN([QM_CK_BESPOKE_CK_LIB],
         [trace 5 Seeing if we can do the bespoke check for $1
          test_lib=$1
          dnl Use intermediate variable to circumvent any issues over macro
          dnl substitution when we need to use {$test_lib} in the code

          eval test_enablement=\$use_${test_lib}

          if ( test "$test_enablement" == check -o  "$test_enablement" == needed -o  "$test_enablement" == yes )
          then
             # We need to check if this lib exists
             #
             # First check the state of the pre-requisites of the library
             QM_CK_PREREQ_STATE([$1])
             if ( test "x$process_now" != xno )
             then
                # Pre-requisites are in place, we can test now...

                # Action the appropriate bespoke code
                case $test_lib in
dnl Insert bespoke library checks in this case statement following the pattern:
dnl                'PkgName' )
dnl                        AC_MSG_CHECKING(for $test_lib)
dnl                        AC_LANG_PUSH([C]) # if test requires compilation
dnl                                          # of C code (can use C++)
dnl                        .........
dnl                        AC_LANG_POP([C]) # Balance any AC_LANG_PUSH used
dnl                                         # above (C++ if appropriate)
dnl                        if ( test $found = yes )
dnl                        then
dnl                           AC_MSG_RESULT([yes])
dnl                           eval use_${test_lib}=present
dnl                           eval ${test_lib}_CFLAGS= # As determined
dnl                           eval ${test_lib}_LIBS=   # "      "
dnl                        else
dnl                           AC_MSG_RESULT([no])
dnl                           eval use_${test_lib}=missing
dnl                           # The output of any suitable errors is handled
dnl                           # below
dnl                        fi
dnl                        ;;
dnl with the ...... representing the checking code.
dnl
dnl The code supplied must set use_${test_lib} to present (if the external library
dnl is available) or missing (if the library is not avilable). Should the
dnl library be available, the code must also set the variables ${test_lib}_CFLAGS
dnl (to the value of CFLAGS needed to compile with the library package) and
dnl ${test_lib}_LIBS (to the linker options & library specifications needed to
dnl link against the library package).

                'libffmpeg' )
                           # libffmpeg is a virtual package to include all
                           # of the FFMPEG/libAV packages. As such, it is a
                           # special case as besides setting up the virtual
                           # package, we also need to ensure a consistent
                           # set of dependant packages (all of a compatible
                           # version).
                           #
                           # By the time we reach here, we already know that
                           # a version of all of the FFMPEG/libAV packages
                           # exist. We now need to ensure version consistency
                           # across the dependencies.
                           #
                           # At one point in its development; 25/2/8, FFMPEG
                           # changed the location of its header files. Sadly,
                           # this was not done with an accompanying revision
                           # bump. At best, revisioning seems to be:
                           #
                           #      Old layout   Could be either   New Layout
                           # libavcodec
                           #        51.50.0        51.50.1        51.51.0
                           # libavformat
                           #        52.6.0         52.7.0         52.8.0
                           # libavutil
                           #        49.5.0         49.6.0         49.7.0
                           # libswscale
                           #      no guarentee      0.5.0          0.5.1
                           #
                           # We therefore need to manually identify which
                           # header layout we have. The old layout saw the
                           # header files located under a single directory
                           # (/usr/include/ffmpeg directory), newer revisions
                           # put the headers in component specific dirs.
                           #
                           # In order to allow any client (of QMake) to use
                           # the individual sub-packages we need to be able to
                           # flag that the client should utilise the correct
                           # pathname for the relevant headers. We do this by
                           # checking to see whether we have the old or new
                           # layout of the header files for each of the sub
                           # packages. We then add the FFMPEG_OLD_HDR flag to
                           # the CFLAGS for those sub-packages using the old
                           # header layout.
                           #
                           # For clients that use all for four sub-packages
                           # as a single entity we also need to check for
                           # consistency across the packages.
                           #
                           # First look for the codec header files...
                           CDC_HDR=notfound
                           if ( test $use_FFMPEGCDEC = 'present' )
                           then
                              trace 5 Processing FFMPEGCDEC_CFLAGS @<:@$FFMPEGCDEC_CFLAGS@:>@ to determine header layout
                              for h in $FFMPEGCDEC_CFLAGS
                              do
                                 # for each part of the CFLAGS, look for a
                                 # -Ipath entry and extract the path
                                 path=`echo $h | $SED -n 's/-I\([[^ ]]*\).*/\1/p'`
                                 if ( test -n "$path" )
                                 then
                                    TRACE_INDENT="     "
                                    trace 5 Looking for headers under $path
                                    if ( test -f $path/libavcodec/avcodec.h )
                                    then
                                       # This is the newer location
                                       TRACE_INDENT="          "
                                       trace 5 New layout found
                                       if ( test $CDC_HDR = notfound )
                                       then
                                          CDC_HDR=new
                                       else
                                          if ( test $CDC_HDR = old )
                                          then
                                             CDC_HDR=either
                                          fi
                                       fi
                                    else
                                       if ( test -f $path/avcodec.h )
                                       then
                                          TRACE_INDENT="          "
                                          trace 5 Old layout found
                                          if ( test $CDC_HDR = notfound )
                                          then
                                             CDC_HDR=old
                                          else
                                             if ( test $CDC_HDR = new )
                                             then
                                                CDC_HDR=either
                                             fi
                                          fi
                                       else
                                          TRACE_INDENT="          "
                                          trace 5 No match found
                                       fi
                                    fi
                                 else
                                    TRACE_INDENT="     "
                                    trace 6 Discarding $h component of CFLAGS
                                 fi
                              done

                              if ( test $CDC_HDR = notfound )
                              then
                                 # Headers are not in a directory specified
                                 # by CFLAGS check the default locations for,
                                 # firstly, the new layout; then the old.
                                 TRACE_INDENT="     "
                                 trace 5 Headers not found using CFLAGS now checking standard dirs
                                 AC_CHECK_HEADER([libavcodec/avcodec.h],
                                                 [AC_CHECK_HEADER([avcodec.h],
                                                                  [CDC_HDR=either],
                                                                  [CDC_HDR=new],
                                                                  [AC_INCLUDES_DEFAULT]
                                                                 )
                                                 ],
                                                 [AC_CHECK_HEADER([avcodec.h],
                                                                  [CDC_HDR=old],
                                                                  [CDC_HDR=notfound],
                                                                  [AC_INCLUDES_DEFAULT]
                                                                 )
                                                 ],
                                                 [AC_INCLUDES_DEFAULT]
                                                )
                              fi
                              trace 4 FFMPEGCDEC headers are $CDC_HDR
                           fi

                           # Now look for the container...
                           FMT_HDR=notfound
                           if ( test $use_FFMPEGCONT = 'present' )
                           then
                              trace 5 Processing FFMPEGCONT_CFLAGS @<:@$FFMPEGCONT_CFLAGS@:>@ to determine header layout
                              for h in $FFMPEGCONT_CFLAGS
                              do
                                 # for each part of the CFLAGS, look for a
                                 # -Ipath entry and extract the path
                                 path=`echo $h | $SED -n 's/-I\([[^ ]]*\).*/\1/p'`
                                 if ( test -n "$path" )
                                 then
                                    TRACE_INDENT="     "
                                    trace 5 Looking for headers under $path
                                    if ( test -f $path/libavformat/avformat.h )
                                    then
                                       # This is the newer location
                                       TRACE_INDENT="          "
                                       trace 5 New layout found
                                       if ( test $FMT_HDR = notfound )
                                       then
                                          FMT_HDR=new
                                       else
                                          if ( test $FMT_HDR = old )
                                          then
                                             FMT_HDR=either
                                          fi
                                       fi
                                    else
                                       if ( test -f $path/avformat.h )
                                       then
                                          TRACE_INDENT="          "
                                          trace 5 Old layout found
                                          if ( test $FMT_HDR = notfound )
                                          then
                                             FMT_HDR=old
                                          else
                                             if ( test $FMT_HDR = new )
                                             then
                                                FMT_HDR=either
                                             fi
                                          fi
                                       else
                                          TRACE_INDENT="          "
                                          trace 5 No match found
                                       fi
                                    fi
                                 else
                                    TRACE_INDENT="     "
                                    trace 6 Discarding $h component of CFLAGS
                                 fi
                              done

                              if ( test $FMT_HDR = notfound )
                              then
                                 # Headers are not in a directory specified
                                 # by CFLAGS check the default locations for,
                                 # firstly, the new layout; then the old.
                                 TRACE_INDENT="     "
                                 trace 5 Headers not found using CFLAGS now checking standard dirs
                                 AC_CHECK_HEADER([libavformat/avformat.h],
                                                 [AC_CHECK_HEADER([avformat.h],
                                                                  [FMT_HDR=either],
                                                                  [FMT_HDR=new],
                                                                  [AC_INCLUDES_DEFAULT]
                                                                 )
                                                 ],
                                                 [AC_CHECK_HEADER([avformat.h],
                                                                  [FMT_HDR=old],
                                                                  [FMT_HDR=notfound],
                                                                  [AC_INCLUDES_DEFAULT]
                                                                 )
                                                 ],
                                                 [AC_INCLUDES_DEFAULT]
                                                )
                              fi
                              trace 4 FFMPEGCONT headers are $FMT_HDR
                           fi

                           # Turn our attention to the utilities...
                           UTIL_HDR=notfound
                           if ( test $use_FFMPEGUTIL = 'present' )
                           then
                              trace 5 Processing FFMPEGUTIL_CFLAGS @<:@$FFMPEGUTIL_CFLAGS@:>@ to determine header layout
                              for h in $FFMPEGUTIL_CFLAGS
                              do
                                 # for each part of the CFLAGS, look for a
                                 # -Ipath entry and extract the path
                                 path=`echo $h | $SED -n 's/-I\([[^ ]]*\).*/\1/p'`
                                 if ( test -n "$path" )
                                 then
                                    TRACE_INDENT="     "
                                    trace 5 Looking for headers under $path
                                    if ( test -f $path/libavutil/avutil.h )
                                    then
                                       # This is the newer location
                                       TRACE_INDENT="          "
                                       trace 5 New layout found
                                       if ( test $UTIL_HDR = notfound )
                                       then
                                          UTIL_HDR=new
                                       else
                                          if ( test $UTIL_HDR = old )
                                          then
                                             UTIL_HDR=either
                                          fi
                                       fi
                                    else
                                       if ( test -f $path/avutil.h )
                                       then
                                          TRACE_INDENT="          "
                                          trace 5 Old layout found
                                          if ( test $UTIL_HDR = notnound )
                                          then
                                             UTIL_HDR=old
                                          else
                                             if ( test $UTIL_HDR = new )
                                             then
                                                UTIL_HDR=either
                                             fi
                                          fi
                                       else
                                          TRACE_INDENT="          "
                                          trace 5 No match found
                                       fi
                                    fi
                                 else
                                    TRACE_INDENT="     "
                                    trace 6 Discarding $h component of CFLAGS
                                 fi
                              done

                              if ( test $UTIL_HDR = notfound )
                              then
                                 # Headers are not in a directory specified
                                 # by CFLAGS check the default locations for,
                                 # firstly, the new layout; then the old.
                                 TRACE_INDENT="     "
                                 trace 5 Headers not found using CFLAGS now checking standard dirs
                                 AC_CHECK_HEADER([libavutil/avutil.h],
                                                 [AC_CHECK_HEADER([avutil.h],
                                                                  [UTIL_HDR=either],
                                                                  [UTIL_HDR=new],
                                                                  [AC_INCLUDES_DEFAULT]
                                                                 )
                                                 ],
                                                 [AC_CHECK_HEADER([avutil.h],
                                                                  [UTIL_HDR=old],
                                                                  [UTIL_HDR=notfound],
                                                                  [AC_INCLUDES_DEFAULT]
                                                                 )
                                                 ],
                                                 [AC_INCLUDES_DEFAULT]
                                                )
                              fi
                              trace 4 FFMPEGUTIL headers are $UTIL_HDR
                           fi

                           # Finally, continue on to the s/w Scaling...
                           SWS_HDR=notfound
                           if ( test $use_FFMPEGSWS = 'present' )
                           then
                              trace 5 Processing FFMPEGCDEC_CFLAGS @<:@$FFMPEGCDEC_CFLAGS@:>@ to determine header layout
                              for h in $FFMPEGSWS_CFLAGS
                              do
                                 # for each part of the CFLAGS, look for a
                                 # -Ipath entry and extract the path
                                 path=`echo $h | $SED -n 's/-I\([[^ ]]*\).*/\1/p'`
                                 if ( test -n "$path" )
                                 then
                                    TRACE_INDENT="     "
                                    trace 5 Looking for headers under $path
                                    if ( test -f $path/libswscale/swscale.h )
                                    then
                                       # This is the newer location
                                       TRACE_INDENT="          "
                                       trace 5 New layout found
                                       if ( test $SWS_HDR = notfound )
                                       then
                                          SWS_HDR=new
                                       else
                                          if ( test $SWS_HDR = old )
                                          then
                                             SWS_HDR=either
                                          fi
                                       fi
                                    else
                                       if ( test -f $path/swscale.h )
                                       then
                                          TRACE_INDENT="          "
                                          trace 5 Old layout found
                                          if ( test $SWS_HDR = notfound )
                                          then
                                             SWS_HDR=old
                                          else
                                             if ( test $SWS_HDR = new )
                                             then
                                                SWS_HDR=either
                                             fi
                                          fi
                                       else
                                          TRACE_INDENT="          "
                                          trace 5 No match found
                                       fi
                                    fi
                                 else
                                    TRACE_INDENT="     "
                                    trace 6 Discarding $h component of CFLAGS
                                 fi
                              done

                              if ( test $SWS_HDR = notfound )
                              then
                                 # Headers are not in a directory specified
                                 # by CFLAGS check the default locations for,
                                 # firstly, the new layout; then the old.
                                 TRACE_INDENT="     "
                                 trace 5 Headers not found using CFLAGS now checking standard dirs
                                 AC_CHECK_HEADER([libswscale/swscale.h],
                                                 [AC_CHECK_HEADER([swscale.h],
                                                                  [SWS_HDR=either],
                                                                  [SWS_HDR=new],
                                                                  [AC_INCLUDES_DEFAULT]
                                                                 )
                                                 ],
                                                 [AC_CHECK_HEADER([swscale.h],
                                                                  [SWS_HDR=old],
                                                                  [SWS_HDR=notfound],
                                                                  [AC_INCLUDES_DEFAULT]
                                                                 )
                                                 ],
                                                 [AC_INCLUDES_DEFAULT]
                                                )
                              fi
                              trace 4 FFMPEGSWS headers are $SWS_HDR
                           fi

                           # We should now know the header revision type for
                           # each of the sub-packages. We now have to check
                           # for a consistent set of either all old-layout
                           # header files or all new-layout files.
                           #
                           FFMPEG_HDR_FMT=notfound

                           # Ensure the codec and container are in step
                           if ( test $CDC_HDR = either )
                           then
                              FFMPEG_HDR_FMT=$FMT_HDR
                           else
                              if ( test $FMT_HDR = either )
                              then
                                 FFMPEG_HDR_FMT=$CDC_FMT
                              else
                                 if ( test $CDC_HDR != $FMT_HDR )
                                 then
                                    FFMPEG_HDR_FMT=broken
                                    trace 5 FFMPEG Headers are inconsistent as the codec and container are different layouts
                                 else
                                    FFMPEG_HDR_FMT=$FMT_HDR
                                 fi
                              fi
                           fi

                           # Check UTIL matches the other headers
                           if ( test $FFMPEG_HDR_FMT = either )
                           then
                              FFMPEG_HDR_FMT = $UTIL_HDR
                           else
                              if ( test $FFMPEG_HDR_FMT != $UTIL_HDR )
                              then
                                 if ( test $UTIL_HDR != either )
                                 then
                                    trace 5 FFMPEG Headers are inconsistent as the utils headers differ from the codec and container layout
                                    FFMPEG_HDR_FMT=broken
                                 fi
                              fi
                           fi

                           # Check SWS matches the other headers
                           if ( test $FFMPEG_HDR_FMT = either )
                           then
                              FFMPEG_HDR_FMT = $SWS_HDR
                           else
                              if ( test $FFMPEG_HDR_FMT != $SWS_HDR )
                              then
                                 if ( test $SWS_HDR != either )
                                 then
                                    trace 5 FFMPEG Headers are inconsistent as the swscaling headers differ the other components
                                    FFMPEG_HDR_FMT=broken
                                 fi
                              fi
                           fi

                           # If either format is acceptable, force use of the
                           # newer layout
                           if ( test $FFMPEG_HDR_FMT = either )
                           then
                              FFMPEG_HDR_FMT = new
                              if ( test $use_libffmpeg != no )
                              then
                                 use_libffmpeg=present
                              fi
                           else
                              if ( test $FFMPEG_HDR_FMT = broken )
                              then
                                 if ( test $use_libffmpeg = yes )
                                 then
                                    AC_MSG_FAILURE([Required library libffmpeg has inconsistent headers])
                                 else
                                    if ( test $use_libffmpeg != no )
                                    then
                                       trace 4 Inconsistent FFMPEG headers block libffmpeg
                                       use_libffmpeg=blocked
                                    fi
                                 fi
                              else
                                 if ( test $FFMPEG_HDR_FMT = notfound )
                                 then
                                    # We only actually hit this code if none
                                    # of the sub-packages' header files are
                                    # found during our layout revision checks.
                                    # If one or more are found but some are
                                    # missing, the variable $FFMPEG_HDR_FMT
                                    # will be set to 'Broken'.
                                    if ( test $use_libffmpeg = yes )
                                    then
                                       AC_MSG_FAILURE([Required library libffmpeg has missing headers])
                                    else
                                       if ( test $use_libffmpeg != no )
                                       then
                                          trace 4 Missing FFMPEG headers block libffmpeg
                                          use_libffmpeg=blocked
                                       fi
                                    fi
                                 else
                                    if ( test $use_libffmpeg != no )
                                    then
                                       use_libffmpeg=present
                                    fi
                                 fi
                              fi
                           fi
                           #
                           trace 3 FFMPEG header analysis
                           TRACE_INDENT="     "
                           trace 3 Codec:$CDC_HDR
                           TRACE_INDENT="     "
                           trace 3 Container:$FMT_HDR
                           TRACE_INDENT="     "
                           trace 3 Utils:$UTIL_HDR
                           TRACE_INDENT="     "
                           trace 3 s/w scaling:$SWS_HDR
                           TRACE_INDENT="     "
                           trace 3 Overall:$FFMPEG_HDR_FMT
                           #
                           # Now look to add -DFFMPEG_OLD_HDR if appropriate.
                           #
                           # First fold any sub-packages, that have both
                           # layout revisions, to use the layout common
                           # between the remaining sub-packages. We will
                           # only do this if we have all four sub-packages
                           # and they agree on the layout to use. If all
                           # sub-packages are present in both forms,
                           # FFMPEG_HDR_FMT will already have been set to
                           # prefer the new layout.
                           if ( test $FFMPEG_HDR_FMT != notfound -a $FFMPEG_HDR_FMT = broken )
                           then
                              # Force all sub-packages to the common layout
                              CDC_HDR=$FFMPEG_HDR_FMT
                              FMT_HDR=$FFMPEG_HDR_FMT
                              UTIL_HDR=$FFMPEG_HDR_FMT
                              SWS_HDR=$FFMPEG_HDR_FMT
                           fi
                           # Now actually append to CFLAGS if using the old layout
                           if ( test $CDC_HDR = old )
                           then
                              FFMPEGCDEC_CFLAGS=$FFMPEGCDEC_CFLAGS" -DFFMPEG_OLD_HDR "
                           fi
                           if ( test $FMT_HDR = old )
                           then
                              FFMPEGCONT_CFLAGS=$FFMPEGCONT_CFLAGS" -DFFMPEG_OLD_HDR "
                           fi
                           if ( test $UTIL_HDR = old )
                           then
                              FFMPEGUTIL_CFLAGS=$FFMPEGUTIL_CFLAGS" -DFFMPEG_OLD_HDR "
                           fi
                           if ( test $SWS_HDR = old )
                           then
                              FFMPEGSWS_CFLAGS=$FFMPEGSWS_CFLAGS" -DFFMPEG_OLD_HDR "
                           fi
                           # If libffmpeg is available, flag it as a virtual
                           # package to ensure it is correctly written to the
                           # configure files
                           if ( test $use_libffmpeg = present)
                           then
                              with_libffmpeg_check=virtual
                           fi
                           ;;

                'CUDA' )
                           # The CUDA packages itself requires a  basic
                           # compilation test but we need to test for the
                           # presence of a suitable C++ compiler and the
                           # nVidia compiler driver program (NVCC).
                           AC_LANG_PUSH([C])
                                  dnl We could check with_<lib>_lang here but
                                  dnl that would require generation of code
                                  dnl that is un-needed (as we have to generate
                                  dnl execution paths for all possible languages
                                  dnl if we do not know the language in use at
                                  dnl autoconf time). Hence, we hard-code the
                                  dnl test language, which will obviously need
                                  dnl a manual change if the author changes the
                                  dnl QM_DEFINE_EXTLIB_BESPOKE_CC definition.
                           QM_CHECK_CC_LIB([$test_lib],[])
                                  dnl Null second parameter prevents generation
                                  dnl of any error which we will generate below
                                  dnl if necessary.
                           AC_LANG_POP([C])

                           if ( test "x$USER_NVCC" = x )
                           then
                              # User has not specified a CUDA compiler to use, do we have
                              # an existing setting?
                              if ( test "x$InheritCFG" = xyes )
                              then
                                 NVCC=`cat $QMAKE_CFG | $SED  -n 's/^NVCC=\(.*\)/\1/p'`
                              fi
                              if ( test "x$NVCC" = x )
                              then
                                 # We still do not have a setting, attempt to find one
                                 AC_PATH_PROG([NVCC],[nvcc],[missing])
                              fi
                           fi
                           if ( test "x$NVCC" = xmissing )
                           then
                              # We have to re-set NVCC to null if we did not
                              # find the compiler driver (as the value of NVCC
                              # will get written to the Config.xx file; hence
                              # it needs to be null if we did not find nvcc).
                              NVCC=""
                           else
                              CONFIGURE_NVCCFLAGS=$NVCCFLAGS
                              # Record any supplied NVCCFLAGS
                           fi

                           # CUDA is a special case as it requires not only the
                           # appropriate libraries but also the NVidia compiler
                           # driver (nvcc) and that the C++ compiler be the GNU
                           # version.  We test the compilers here...
                           if ( test x$NVCC = x || test ! -x $NVCC || test x$GXX != xyes )
                           then
                              case $use_CUDA in
                                 'check' )   use_CUDA=blocked
                                             trace 6 Disabling CUDA owing to missing compiler pre-requisites
                                             ;;
                                 'needed' )  AC_MSG_FAILURE([CUDA prerequisites not met and CUDA is required for a selected RESOURCE])
                                             ;;
                                 'yes' )     AC_MSG_FAILURE([CUDA prerequisites not met])
                                             ;;
                                 'no' )      trace 6 CUDA compiler prerequisites not met but we do not require CUDA anyway
                                             ;;
                                 'blocked' ) trace 6 CUDA compiler prerequisites not met but CUDA is already blocked
                                             ;;
                                 * )         trace 1 "Assert - Should not fall through here"
                                             ;;
                              esac
                           else
                              trace 5 CUDA compiler requirements appear to be satisfied.
                           fi

                           ;;

                'Qt3QGLViewer' | 'Qt4QGLViewer' )
                           # The Qt QGLViewer packages are basic compilation
                           # tests but we need to reset the cache variable
                           # maintinaed by autoconf to record the qglviewer.h
                           # header file (since this file name is shared
                           # between the Qt 3 and 4 versions, we do not want
                           # the second package using the cached value from
                           # the first incarnation).
                           AC_LANG_PUSH([C++])
                                  dnl Both packages employ a C++ test program;
                                  dnl we could check with_<lib>_lang here but
                                  dnl that would require generation of code
                                  dnl that is un-needed (as we have to generate
                                  dnl execution paths for all possible languages
                                  dnl if we do not know the language in use at
                                  dnl autoconf time). Hence, we hard-code the
                                  dnl test language, which will obviously need
                                  dnl a manual change if the author changes the
                                  dnl QM_DEFINE_EXTLIB_BESPOKE_CC definition.
                           QM_CHECK_CC_LIB([$test_lib],[])
                                  dnl Null second parameter prevents generation
                                  dnl of any error which we will generate below
                                  dnl if necessary.
                           AC_LANG_POP([C++])
                           # Reset the header file cache variable
                           unset ac_cv_header_QGLViewer_qglviewer_h
                           ;;

                'tetgen' )
                           # Certain versions of TetGen rely on a pre-processor
                           # -DTETLIBRARY flag. Ensure we have that.
                           existing=`echo "X $with_tetgen_inc " | $SED -n 's/.* -DTETLIBRARY .*/yes/p'`
                           if ( test X$existing != Xyes )
                           then
                              with_tetgen_inc="$with_tetgen_inc -DTETLIBRARY"
                           fi
                           # By rights, this should be implemented on CPPFLAGS
                           # but as QMake does not currently support a
                           # mechanism for processing these flags for a package
                           # we are stuck with using CFLAGS until such time as
                           # the requisite development is undertaken.
                           AC_LANG_PUSH([C++])
                                  dnl This package employs a C++ test program;
                                  dnl we could check with_<lib>_lang here but
                                  dnl that would require generation of code
                                  dnl that is un-needed (as we have to generate
                                  dnl execution paths for all possible languages
                                  dnl if we do not know the language in use at
                                  dnl autoconf time). Hence, we hard-code the
                                  dnl test language, which will obviously need
                                  dnl a manual change if the author changes the
                                  dnl QM_DEFINE_EXTLIB_BESPOKE_CC definition.
                           QM_CHECK_CC_LIB([$test_lib],[])
                                  dnl Null second parameter prevents generation
                                  dnl of any error which we will generate below
                                  dnl if necessary.
                           AC_LANG_POP([C++])
                           ;;

                       * ) AC_MSG_FAILURE([Configure is unaware of how to check for library $test_lib])
                           ;;
                esac

                # Generate any required errors
                eval result=\$use_${test_lib}
                if ( test x$result != xpresent )
                then
                   if ( test x$result = xmissing )
                   then
                      case $test_enablement in
                         'check' )     # No error required
                                       ;;
                         'needed' )    AC_MSG_FAILURE([Library $test_lib is not available and a prerequisite of a selected library])
                                       ;;
                         'yes' )       AC_MSG_FAILURE([Required library $test_lib is not available])
                                       ;;
                      esac
                   else
                      trace 1 Assert - Unexpected setting for library $test_lib
                   fi
                fi

                eval prereq="\$with_${test_lib}_prq"
                TRACE_INDENT="     "
                trace 3 $lib:bespoke:$prereq:$result

                # Library now fully considered, drop it from the to do list
                LeftToDo=`echo " $LeftToDo " | $SED "s/ $test_lib / /"`
                RecentlyProcessed="$RecentlyProcessed $test_lib"

             fi dnl End of process_now code

          else
             # test_enablement != check|needed|yes
             # => We do not need to check for existance of this library
             #
             # Trace why
             case $test_enablement in
                'no' )      TRACE_INDENT="     "
                            trace 6 $test_lib is disabled, not checking for existance
                            ;;
                'blocked' ) TRACE_INDENT="     "
                            trace 6 $test_lib is blocked by a pre-requisite
                            ;;
                * )         TRACE_INDENT="     "
                            trace 1 "Assert - curious test_enablement"
                            ;;
             esac

             # No longer need to process library
             LeftToDo=`echo " $LeftToDo " | $SED "s/ $test_lib / /"`
             RecentlyProcessed="$RecentlyProcessed $test_lib"
          fi

          # Strip unnecessary spaces from LeftToDo
          LeftToDo=`echo " $LeftToDo " | $SED "s/  */ /g;s/^ //;s/ $//"`

         ]
        )
